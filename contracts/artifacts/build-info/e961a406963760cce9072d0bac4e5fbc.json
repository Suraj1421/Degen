{
	"id": "e961a406963760cce9072d0bac4e5fbc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/myContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\n\ncontract DegenToken is ERC20, Ownable, ERC20Burnable {\n    \n    struct Item {\n        string name;\n        uint8 itemId;\n        uint256 price;\n    }\n\n    mapping(uint8 => Item) private items;\n    mapping(address => Item[]) private playerItems;\n    uint8 private nextItemId;\n\n    event ItemPurchased(address indexed buyer, uint8 itemId, string itemName, uint256 price);\n    event GameOutcome(address indexed player, uint256 num, bool won, string result);\n\n    constructor(address initialOwner, uint256 initialSupply) ERC20(\"Degen\", \"DGN\") Ownable(initialOwner) {\n        transferOwnership(initialOwner);\n        mint(initialOwner, initialSupply);\n        _initializeItems();\n    }\n\n    // Initialize predefined items in the game\n    function _initializeItems() internal {\n        _addItem(\"Novice Navigator\", 100);\n        _addItem(\"Mythic Maverick\", 700);\n        _addItem(\"Celestial Crusher\", 1200);\n        _addItem(\"Astral Ace\", 2200);\n        _addItem(\"Divine Dominator\", 2400);\n    }\n\n    // Add an item to the in-game store\n    function _addItem(string memory name, uint256 price) internal {\n        items[nextItemId] = Item(name, nextItemId, price);\n        nextItemId++;\n    }\n\n    // Mint new tokens\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n\n    // Transfer tokens from one account to another\n    function transferToken(address recipient, uint256 amount) external {\n        require(balanceOf(msg.sender) >= amount, \"Insufficient balance\");\n        _transfer(msg.sender, recipient, amount);\n    }\n\n    // Redeem a welcome bonus if the player has no tokens\n    function redeemWelcomeBonus() public {\n        require(balanceOf(msg.sender) == 0, \"Bonus already claimed\");\n        _mint(msg.sender, 50);\n    }\n\n    // Add a new item to the store by the owner\n    function addItemToStore(string memory name, uint256 price) public onlyOwner {\n        _addItem(name, price);\n    }\n\n    // Place a bet on a random number game\n    function betOnRandomNumber(bool predictLessThanFive, uint256 betAmount) public {\n        require(balanceOf(msg.sender) >= betAmount, \"Insufficient balance\");\n        \n        uint256 randomNumber = uint256(keccak256(abi.encodePacked(block.timestamp, msg.sender))) % 10;\n\n        if (predictLessThanFive == (randomNumber < 5)) {\n            _mint(msg.sender, betAmount * 2);\n            emit GameOutcome(msg.sender, randomNumber, true, \"You won!\");\n        } else {\n            burn(betAmount);\n            emit GameOutcome(msg.sender, randomNumber, false, \"You lost!\");\n        }\n    }\n\n    // Purchase an item using tokens\n    function purchaseItem(uint8 itemId) external {\n        require(items[itemId].price > 0, \"Item not found\");\n        require(balanceOf(msg.sender) >= items[itemId].price, \"Insufficient balance\");\n\n        burn(items[itemId].price);\n        playerItems[msg.sender].push(items[itemId]);\n\n        emit ItemPurchased(msg.sender, itemId, items[itemId].name, items[itemId].price);\n    }\n\n    // Get the list of item IDs a user has purchased\n    function getUserItems(address user) external view returns (uint8[] memory) {\n        Item[] memory itemsList = playerItems[user];\n        uint256 length = itemsList.length;\n\n        uint8[] memory itemIds = new uint8[](length);\n        for (uint256 i = 0; i < length; i++) {\n            itemIds[i] = itemsList[i].itemId;\n        }\n\n        return itemIds;\n    }\n\n    // Get details of a specific item\n    function getItemDetails(uint8 itemId) external view returns (string memory, uint256) {\n        Item memory item = items[itemId];\n        return (item.name, item.price);\n    }\n\n    // Get the balance of the caller\n    function getMyBalance() external view returns (uint256) {\n        return balanceOf(msg.sender);\n    }\n\n    // Burn a specific amount of tokens\n    function burnTokens(uint256 amount) external {\n        require(balanceOf(msg.sender) >= amount, \"Insufficient balance\");\n        burn(amount);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/myContract.sol": {
				"DegenToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "player",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "num",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "won",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "result",
									"type": "string"
								}
							],
							"name": "GameOutcome",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "itemId",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "itemName",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "ItemPurchased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "addItemToStore",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "predictLessThanFive",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "betAmount",
									"type": "uint256"
								}
							],
							"name": "betOnRandomNumber",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "itemId",
									"type": "uint8"
								}
							],
							"name": "getItemDetails",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMyBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserItems",
							"outputs": [
								{
									"internalType": "uint8[]",
									"name": "",
									"type": "uint8[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "itemId",
									"type": "uint8"
								}
							],
							"name": "purchaseItem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "redeemWelcomeBonus",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/myContract.sol\":243:4215  contract DegenToken is ERC20, Ownable, ERC20Burnable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/myContract.sol\":703:923  constructor(address initialOwner, uint256 initialSupply) ERC20(\"Degen\", \"DGN\") Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/myContract.sol\":790:802  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x446567656e000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x44474e0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/myContract.sol\":814:845  transferOwnership(initialOwner) */\n  tag_18\n    /* \"contracts/myContract.sol\":832:844  initialOwner */\n  dup3\n    /* \"contracts/myContract.sol\":814:831  transferOwnership */\n  shl(0x20, tag_19)\n    /* \"contracts/myContract.sol\":814:845  transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contracts/myContract.sol\":855:888  mint(initialOwner, initialSupply) */\n  tag_20\n    /* \"contracts/myContract.sol\":860:872  initialOwner */\n  dup3\n    /* \"contracts/myContract.sol\":874:887  initialSupply */\n  dup3\n    /* \"contracts/myContract.sol\":855:859  mint */\n  shl(0x20, tag_21)\n    /* \"contracts/myContract.sol\":855:888  mint(initialOwner, initialSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"contracts/myContract.sol\":898:916  _initializeItems() */\n  tag_22\n    /* \"contracts/myContract.sol\":898:914  _initializeItems */\n  shl(0x20, tag_23)\n    /* \"contracts/myContract.sol\":898:916  _initializeItems() */\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"contracts/myContract.sol\":703:923  constructor(address initialOwner, uint256 initialSupply) ERC20(\"Degen\", \"DGN\") Ownable(initialOwner) {... */\n  pop\n  pop\n    /* \"contracts/myContract.sol\":243:4215  contract DegenToken is ERC20, Ownable, ERC20Burnable {... */\n  jump(tag_24)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\ntag_19:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  tag_27\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n  shl(0x20, tag_28)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_31\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_31:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\ntag_30:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n  tag_32\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_32:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n  pop\n  jump\t// out\n    /* \"contracts/myContract.sol\":1457:1550  function mint(address to, uint256 amount) public onlyOwner {... */\ntag_21:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  tag_34\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n  shl(0x20, tag_28)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  0x20\n  shr\n  jump\t// in\ntag_34:\n    /* \"contracts/myContract.sol\":1526:1543  _mint(to, amount) */\n  tag_36\n    /* \"contracts/myContract.sol\":1532:1534  to */\n  dup3\n    /* \"contracts/myContract.sol\":1536:1542  amount */\n  dup3\n    /* \"contracts/myContract.sol\":1526:1531  _mint */\n  shl(0x20, tag_37)\n    /* \"contracts/myContract.sol\":1526:1543  _mint(to, amount) */\n  0x20\n  shr\n  jump\t// in\ntag_36:\n    /* \"contracts/myContract.sol\":1457:1550  function mint(address to, uint256 amount) public onlyOwner {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/myContract.sol\":976:1232  function _initializeItems() internal {... */\ntag_23:\n    /* \"contracts/myContract.sol\":1023:1056  _addItem(\"Novice Navigator\", 100) */\n  tag_39\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x10\n  dup2\n  mstore\n  0x20\n  add\n  0x4e6f76696365204e6176696761746f7200000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/myContract.sol\":1052:1055  100 */\n  0x64\n    /* \"contracts/myContract.sol\":1023:1031  _addItem */\n  shl(0x20, tag_40)\n    /* \"contracts/myContract.sol\":1023:1056  _addItem(\"Novice Navigator\", 100) */\n  0x20\n  shr\n  jump\t// in\ntag_39:\n    /* \"contracts/myContract.sol\":1066:1098  _addItem(\"Mythic Maverick\", 700) */\n  tag_41\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0f\n  dup2\n  mstore\n  0x20\n  add\n  0x4d7974686963204d6176657269636b0000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/myContract.sol\":1094:1097  700 */\n  0x02bc\n    /* \"contracts/myContract.sol\":1066:1074  _addItem */\n  shl(0x20, tag_40)\n    /* \"contracts/myContract.sol\":1066:1098  _addItem(\"Mythic Maverick\", 700) */\n  0x20\n  shr\n  jump\t// in\ntag_41:\n    /* \"contracts/myContract.sol\":1108:1143  _addItem(\"Celestial Crusher\", 1200) */\n  tag_42\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x11\n  dup2\n  mstore\n  0x20\n  add\n  0x43656c65737469616c2043727573686572000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/myContract.sol\":1138:1142  1200 */\n  0x04b0\n    /* \"contracts/myContract.sol\":1108:1116  _addItem */\n  shl(0x20, tag_40)\n    /* \"contracts/myContract.sol\":1108:1143  _addItem(\"Celestial Crusher\", 1200) */\n  0x20\n  shr\n  jump\t// in\ntag_42:\n    /* \"contracts/myContract.sol\":1153:1181  _addItem(\"Astral Ace\", 2200) */\n  tag_43\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x41737472616c2041636500000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/myContract.sol\":1176:1180  2200 */\n  0x0898\n    /* \"contracts/myContract.sol\":1153:1161  _addItem */\n  shl(0x20, tag_40)\n    /* \"contracts/myContract.sol\":1153:1181  _addItem(\"Astral Ace\", 2200) */\n  0x20\n  shr\n  jump\t// in\ntag_43:\n    /* \"contracts/myContract.sol\":1191:1225  _addItem(\"Divine Dominator\", 2400) */\n  tag_44\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x10\n  dup2\n  mstore\n  0x20\n  add\n  0x446976696e6520446f6d696e61746f7200000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/myContract.sol\":1220:1224  2400 */\n  0x0960\n    /* \"contracts/myContract.sol\":1191:1199  _addItem */\n  shl(0x20, tag_40)\n    /* \"contracts/myContract.sol\":1191:1225  _addItem(\"Divine Dominator\", 2400) */\n  0x20\n  shr\n  jump\t// in\ntag_44:\n    /* \"contracts/myContract.sol\":976:1232  function _initializeItems() internal {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\ntag_28:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n  tag_46\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n  shl(0x20, tag_47)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_46:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n  tag_48\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n  shl(0x20, tag_49)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n  0x20\n  shr\n  jump\t// in\ntag_48:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n  tag_50\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n  tag_51\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n  shl(0x20, tag_47)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_51:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n  mload(0x40)\n  0x118cdaa700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_52\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_52:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\ntag_50:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_54\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_55\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_55:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_54:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_56\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_57)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_56:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/myContract.sol\":1278:1428  function _addItem(string memory name, uint256 price) internal {... */\ntag_40:\n    /* \"contracts/myContract.sol\":1370:1399  Item(name, nextItemId, price) */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n    /* \"contracts/myContract.sol\":1375:1379  name */\n  dup4\n    /* \"contracts/myContract.sol\":1370:1399  Item(name, nextItemId, price) */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/myContract.sol\":1381:1391  nextItemId */\n  0x08\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/myContract.sol\":1370:1399  Item(name, nextItemId, price) */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/myContract.sol\":1393:1398  price */\n  dup3\n    /* \"contracts/myContract.sol\":1370:1399  Item(name, nextItemId, price) */\n  dup2\n  mstore\n  pop\n    /* \"contracts/myContract.sol\":1350:1355  items */\n  0x06\n    /* \"contracts/myContract.sol\":1350:1367  items[nextItemId] */\n  0x00\n    /* \"contracts/myContract.sol\":1356:1366  nextItemId */\n  0x08\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/myContract.sol\":1350:1367  items[nextItemId] */\n  0xff\n  and\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/myContract.sol\":1350:1399  items[nextItemId] = Item(name, nextItemId, price) */\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  swap1\n  dup2\n  tag_59\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_59:\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"contracts/myContract.sol\":1409:1419  nextItemId */\n  0x08\n  0x00\n    /* \"contracts/myContract.sol\":1409:1421  nextItemId++ */\n  dup2\n  dup2\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n  dup1\n  swap3\n  swap2\n  swap1\n  tag_60\n  swap1\n  tag_61\n  jump\t// in\ntag_60:\n  swap2\n  swap1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  pop\n    /* \"contracts/myContract.sol\":1278:1428  function _addItem(string memory name, uint256 price) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_47:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\ntag_49:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_57:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_65\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_66\n  swap2\n  swap1\n  tag_67\n  jump\t// in\ntag_66:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_68)\ntag_65:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_69\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_70\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_71\n  jump\t// in\ntag_70:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_69:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_68:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_72\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_73)\ntag_72:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_73:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_74\n  swap2\n  swap1\n  tag_75\n  jump\t// in\ntag_74:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_77:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_79:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_80:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_115\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_79\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_81:\n    /* \"#utility.yul\":641:665   */\n  tag_117\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_80\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_118\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_118:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_82:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_120\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_81\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_83:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_84:\n    /* \"#utility.yul\":1001:1025   */\n  tag_123\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_83\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_124\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_124:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_85:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_126\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_84\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1712   */\ntag_3:\n    /* \"#utility.yul\":1284:1290   */\n  0x00\n    /* \"#utility.yul\":1292:1298   */\n  dup1\n    /* \"#utility.yul\":1341:1343   */\n  0x40\n    /* \"#utility.yul\":1329:1338   */\n  dup4\n    /* \"#utility.yul\":1320:1327   */\n  dup6\n    /* \"#utility.yul\":1316:1339   */\n  sub\n    /* \"#utility.yul\":1312:1344   */\n  slt\n    /* \"#utility.yul\":1309:1428   */\n  iszero\n  tag_128\n  jumpi\n    /* \"#utility.yul\":1347:1426   */\n  tag_129\n  tag_77\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":1309:1428   */\ntag_128:\n    /* \"#utility.yul\":1467:1468   */\n  0x00\n    /* \"#utility.yul\":1492:1556   */\n  tag_130\n    /* \"#utility.yul\":1548:1555   */\n  dup6\n    /* \"#utility.yul\":1539:1545   */\n  dup3\n    /* \"#utility.yul\":1528:1537   */\n  dup7\n    /* \"#utility.yul\":1524:1546   */\n  add\n    /* \"#utility.yul\":1492:1556   */\n  tag_82\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":1482:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1438:1566   */\n  pop\n    /* \"#utility.yul\":1605:1607   */\n  0x20\n    /* \"#utility.yul\":1631:1695   */\n  tag_131\n    /* \"#utility.yul\":1687:1694   */\n  dup6\n    /* \"#utility.yul\":1678:1684   */\n  dup3\n    /* \"#utility.yul\":1667:1676   */\n  dup7\n    /* \"#utility.yul\":1663:1685   */\n  add\n    /* \"#utility.yul\":1631:1695   */\n  tag_85\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":1621:1695   */\n  swap2\n  pop\n    /* \"#utility.yul\":1576:1705   */\n  pop\n    /* \"#utility.yul\":1205:1712   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1718:1817   */\ntag_86:\n    /* \"#utility.yul\":1770:1776   */\n  0x00\n    /* \"#utility.yul\":1804:1809   */\n  dup2\n    /* \"#utility.yul\":1798:1810   */\n  mload\n    /* \"#utility.yul\":1788:1810   */\n  swap1\n  pop\n    /* \"#utility.yul\":1718:1817   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1823:2003   */\ntag_87:\n    /* \"#utility.yul\":1871:1948   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1868:1869   */\n  0x00\n    /* \"#utility.yul\":1861:1949   */\n  mstore\n    /* \"#utility.yul\":1968:1972   */\n  0x41\n    /* \"#utility.yul\":1965:1966   */\n  0x04\n    /* \"#utility.yul\":1958:1973   */\n  mstore\n    /* \"#utility.yul\":1992:1996   */\n  0x24\n    /* \"#utility.yul\":1989:1990   */\n  0x00\n    /* \"#utility.yul\":1982:1997   */\n  revert\n    /* \"#utility.yul\":2009:2189   */\ntag_88:\n    /* \"#utility.yul\":2057:2134   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2054:2055   */\n  0x00\n    /* \"#utility.yul\":2047:2135   */\n  mstore\n    /* \"#utility.yul\":2154:2158   */\n  0x22\n    /* \"#utility.yul\":2151:2152   */\n  0x04\n    /* \"#utility.yul\":2144:2159   */\n  mstore\n    /* \"#utility.yul\":2178:2182   */\n  0x24\n    /* \"#utility.yul\":2175:2176   */\n  0x00\n    /* \"#utility.yul\":2168:2183   */\n  revert\n    /* \"#utility.yul\":2195:2515   */\ntag_89:\n    /* \"#utility.yul\":2239:2245   */\n  0x00\n    /* \"#utility.yul\":2276:2277   */\n  0x02\n    /* \"#utility.yul\":2270:2274   */\n  dup3\n    /* \"#utility.yul\":2266:2278   */\n  div\n    /* \"#utility.yul\":2256:2278   */\n  swap1\n  pop\n    /* \"#utility.yul\":2323:2324   */\n  0x01\n    /* \"#utility.yul\":2317:2321   */\n  dup3\n    /* \"#utility.yul\":2313:2325   */\n  and\n    /* \"#utility.yul\":2344:2362   */\n  dup1\n    /* \"#utility.yul\":2334:2415   */\n  tag_136\n  jumpi\n    /* \"#utility.yul\":2400:2404   */\n  0x7f\n    /* \"#utility.yul\":2392:2398   */\n  dup3\n    /* \"#utility.yul\":2388:2405   */\n  and\n    /* \"#utility.yul\":2378:2405   */\n  swap2\n  pop\n    /* \"#utility.yul\":2334:2415   */\ntag_136:\n    /* \"#utility.yul\":2462:2464   */\n  0x20\n    /* \"#utility.yul\":2454:2460   */\n  dup3\n    /* \"#utility.yul\":2451:2465   */\n  lt\n    /* \"#utility.yul\":2431:2449   */\n  dup2\n    /* \"#utility.yul\":2428:2466   */\n  sub\n    /* \"#utility.yul\":2425:2509   */\n  tag_137\n  jumpi\n    /* \"#utility.yul\":2481:2499   */\n  tag_138\n  tag_88\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":2425:2509   */\ntag_137:\n    /* \"#utility.yul\":2246:2515   */\n  pop\n    /* \"#utility.yul\":2195:2515   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2521:2662   */\ntag_90:\n    /* \"#utility.yul\":2570:2574   */\n  0x00\n    /* \"#utility.yul\":2593:2596   */\n  dup2\n    /* \"#utility.yul\":2585:2596   */\n  swap1\n  pop\n    /* \"#utility.yul\":2616:2619   */\n  dup2\n    /* \"#utility.yul\":2613:2614   */\n  0x00\n    /* \"#utility.yul\":2606:2620   */\n  mstore\n    /* \"#utility.yul\":2650:2654   */\n  0x20\n    /* \"#utility.yul\":2647:2648   */\n  0x00\n    /* \"#utility.yul\":2637:2655   */\n  keccak256\n    /* \"#utility.yul\":2629:2655   */\n  swap1\n  pop\n    /* \"#utility.yul\":2521:2662   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2668:2761   */\ntag_91:\n    /* \"#utility.yul\":2705:2711   */\n  0x00\n    /* \"#utility.yul\":2752:2754   */\n  0x20\n    /* \"#utility.yul\":2747:2749   */\n  0x1f\n    /* \"#utility.yul\":2740:2745   */\n  dup4\n    /* \"#utility.yul\":2736:2750   */\n  add\n    /* \"#utility.yul\":2732:2755   */\n  div\n    /* \"#utility.yul\":2722:2755   */\n  swap1\n  pop\n    /* \"#utility.yul\":2668:2761   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2767:2874   */\ntag_92:\n    /* \"#utility.yul\":2811:2819   */\n  0x00\n    /* \"#utility.yul\":2861:2866   */\n  dup3\n    /* \"#utility.yul\":2855:2859   */\n  dup3\n    /* \"#utility.yul\":2851:2867   */\n  shl\n    /* \"#utility.yul\":2830:2867   */\n  swap1\n  pop\n    /* \"#utility.yul\":2767:2874   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2880:3273   */\ntag_93:\n    /* \"#utility.yul\":2949:2955   */\n  0x00\n    /* \"#utility.yul\":2999:3000   */\n  0x08\n    /* \"#utility.yul\":2987:2997   */\n  dup4\n    /* \"#utility.yul\":2983:3001   */\n  mul\n    /* \"#utility.yul\":3022:3119   */\n  tag_143\n    /* \"#utility.yul\":3052:3118   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3041:3050   */\n  dup3\n    /* \"#utility.yul\":3022:3119   */\n  tag_92\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":3140:3179   */\n  tag_144\n    /* \"#utility.yul\":3170:3178   */\n  dup7\n    /* \"#utility.yul\":3159:3168   */\n  dup4\n    /* \"#utility.yul\":3140:3179   */\n  tag_92\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":3128:3179   */\n  swap6\n  pop\n    /* \"#utility.yul\":3212:3216   */\n  dup1\n    /* \"#utility.yul\":3208:3217   */\n  not\n    /* \"#utility.yul\":3201:3206   */\n  dup5\n    /* \"#utility.yul\":3197:3218   */\n  and\n    /* \"#utility.yul\":3188:3218   */\n  swap4\n  pop\n    /* \"#utility.yul\":3261:3265   */\n  dup1\n    /* \"#utility.yul\":3251:3259   */\n  dup7\n    /* \"#utility.yul\":3247:3266   */\n  and\n    /* \"#utility.yul\":3240:3245   */\n  dup5\n    /* \"#utility.yul\":3237:3267   */\n  or\n    /* \"#utility.yul\":3227:3267   */\n  swap3\n  pop\n    /* \"#utility.yul\":2956:3273   */\n  pop\n  pop\n    /* \"#utility.yul\":2880:3273   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3279:3339   */\ntag_94:\n    /* \"#utility.yul\":3307:3310   */\n  0x00\n    /* \"#utility.yul\":3328:3333   */\n  dup2\n    /* \"#utility.yul\":3321:3333   */\n  swap1\n  pop\n    /* \"#utility.yul\":3279:3339   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3345:3487   */\ntag_95:\n    /* \"#utility.yul\":3395:3404   */\n  0x00\n    /* \"#utility.yul\":3428:3481   */\n  tag_147\n    /* \"#utility.yul\":3446:3480   */\n  tag_148\n    /* \"#utility.yul\":3455:3479   */\n  tag_149\n    /* \"#utility.yul\":3473:3478   */\n  dup5\n    /* \"#utility.yul\":3455:3479   */\n  tag_83\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":3446:3480   */\n  tag_94\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":3428:3481   */\n  tag_83\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":3415:3481   */\n  swap1\n  pop\n    /* \"#utility.yul\":3345:3487   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3493:3568   */\ntag_96:\n    /* \"#utility.yul\":3536:3539   */\n  0x00\n    /* \"#utility.yul\":3557:3562   */\n  dup2\n    /* \"#utility.yul\":3550:3562   */\n  swap1\n  pop\n    /* \"#utility.yul\":3493:3568   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3574:3843   */\ntag_97:\n    /* \"#utility.yul\":3684:3723   */\n  tag_152\n    /* \"#utility.yul\":3715:3722   */\n  dup4\n    /* \"#utility.yul\":3684:3723   */\n  tag_95\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":3745:3836   */\n  tag_153\n    /* \"#utility.yul\":3794:3835   */\n  tag_154\n    /* \"#utility.yul\":3818:3834   */\n  dup3\n    /* \"#utility.yul\":3794:3835   */\n  tag_96\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":3786:3792   */\n  dup5\n    /* \"#utility.yul\":3779:3783   */\n  dup5\n    /* \"#utility.yul\":3773:3784   */\n  sload\n    /* \"#utility.yul\":3745:3836   */\n  tag_93\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":3739:3743   */\n  dup3\n    /* \"#utility.yul\":3732:3837   */\n  sstore\n    /* \"#utility.yul\":3650:3843   */\n  pop\n    /* \"#utility.yul\":3574:3843   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3849:3922   */\ntag_98:\n    /* \"#utility.yul\":3894:3897   */\n  0x00\n    /* \"#utility.yul\":3849:3922   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3928:4117   */\ntag_99:\n    /* \"#utility.yul\":4005:4037   */\n  tag_157\n  tag_98\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":4046:4111   */\n  tag_158\n    /* \"#utility.yul\":4104:4110   */\n  dup2\n    /* \"#utility.yul\":4096:4102   */\n  dup5\n    /* \"#utility.yul\":4090:4094   */\n  dup5\n    /* \"#utility.yul\":4046:4111   */\n  tag_97\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":3981:4117   */\n  pop\n    /* \"#utility.yul\":3928:4117   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4123:4309   */\ntag_100:\n    /* \"#utility.yul\":4183:4303   */\ntag_160:\n    /* \"#utility.yul\":4200:4203   */\n  dup2\n    /* \"#utility.yul\":4193:4198   */\n  dup2\n    /* \"#utility.yul\":4190:4204   */\n  lt\n    /* \"#utility.yul\":4183:4303   */\n  iszero\n  tag_162\n  jumpi\n    /* \"#utility.yul\":4254:4293   */\n  tag_163\n    /* \"#utility.yul\":4291:4292   */\n  0x00\n    /* \"#utility.yul\":4284:4289   */\n  dup3\n    /* \"#utility.yul\":4254:4293   */\n  tag_99\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":4227:4228   */\n  0x01\n    /* \"#utility.yul\":4220:4225   */\n  dup2\n    /* \"#utility.yul\":4216:4229   */\n  add\n    /* \"#utility.yul\":4207:4229   */\n  swap1\n  pop\n    /* \"#utility.yul\":4183:4303   */\n  jump(tag_160)\ntag_162:\n    /* \"#utility.yul\":4123:4309   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4315:4858   */\ntag_101:\n    /* \"#utility.yul\":4416:4418   */\n  0x1f\n    /* \"#utility.yul\":4411:4414   */\n  dup3\n    /* \"#utility.yul\":4408:4419   */\n  gt\n    /* \"#utility.yul\":4405:4851   */\n  iszero\n  tag_165\n  jumpi\n    /* \"#utility.yul\":4450:4488   */\n  tag_166\n    /* \"#utility.yul\":4482:4487   */\n  dup2\n    /* \"#utility.yul\":4450:4488   */\n  tag_90\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":4534:4563   */\n  tag_167\n    /* \"#utility.yul\":4552:4562   */\n  dup5\n    /* \"#utility.yul\":4534:4563   */\n  tag_91\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":4524:4532   */\n  dup2\n    /* \"#utility.yul\":4520:4564   */\n  add\n    /* \"#utility.yul\":4717:4719   */\n  0x20\n    /* \"#utility.yul\":4705:4715   */\n  dup6\n    /* \"#utility.yul\":4702:4720   */\n  lt\n    /* \"#utility.yul\":4699:4748   */\n  iszero\n  tag_168\n  jumpi\n    /* \"#utility.yul\":4738:4746   */\n  dup2\n    /* \"#utility.yul\":4723:4746   */\n  swap1\n  pop\n    /* \"#utility.yul\":4699:4748   */\ntag_168:\n    /* \"#utility.yul\":4761:4841   */\n  tag_169\n    /* \"#utility.yul\":4817:4839   */\n  tag_170\n    /* \"#utility.yul\":4835:4838   */\n  dup6\n    /* \"#utility.yul\":4817:4839   */\n  tag_91\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":4807:4815   */\n  dup4\n    /* \"#utility.yul\":4803:4840   */\n  add\n    /* \"#utility.yul\":4790:4801   */\n  dup3\n    /* \"#utility.yul\":4761:4841   */\n  tag_100\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":4420:4851   */\n  pop\n  pop\n    /* \"#utility.yul\":4405:4851   */\ntag_165:\n    /* \"#utility.yul\":4315:4858   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4864:4981   */\ntag_102:\n    /* \"#utility.yul\":4918:4926   */\n  0x00\n    /* \"#utility.yul\":4968:4973   */\n  dup3\n    /* \"#utility.yul\":4962:4966   */\n  dup3\n    /* \"#utility.yul\":4958:4974   */\n  shr\n    /* \"#utility.yul\":4937:4974   */\n  swap1\n  pop\n    /* \"#utility.yul\":4864:4981   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4987:5156   */\ntag_103:\n    /* \"#utility.yul\":5031:5037   */\n  0x00\n    /* \"#utility.yul\":5064:5115   */\n  tag_173\n    /* \"#utility.yul\":5112:5113   */\n  0x00\n    /* \"#utility.yul\":5108:5114   */\n  not\n    /* \"#utility.yul\":5100:5105   */\n  dup5\n    /* \"#utility.yul\":5097:5098   */\n  0x08\n    /* \"#utility.yul\":5093:5106   */\n  mul\n    /* \"#utility.yul\":5064:5115   */\n  tag_102\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":5060:5116   */\n  not\n    /* \"#utility.yul\":5145:5149   */\n  dup1\n    /* \"#utility.yul\":5139:5143   */\n  dup4\n    /* \"#utility.yul\":5135:5150   */\n  and\n    /* \"#utility.yul\":5125:5150   */\n  swap2\n  pop\n    /* \"#utility.yul\":5038:5156   */\n  pop\n    /* \"#utility.yul\":4987:5156   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5161:5456   */\ntag_104:\n    /* \"#utility.yul\":5237:5241   */\n  0x00\n    /* \"#utility.yul\":5383:5412   */\n  tag_175\n    /* \"#utility.yul\":5408:5411   */\n  dup4\n    /* \"#utility.yul\":5402:5406   */\n  dup4\n    /* \"#utility.yul\":5383:5412   */\n  tag_103\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":5375:5412   */\n  swap2\n  pop\n    /* \"#utility.yul\":5445:5448   */\n  dup3\n    /* \"#utility.yul\":5442:5443   */\n  0x02\n    /* \"#utility.yul\":5438:5449   */\n  mul\n    /* \"#utility.yul\":5432:5436   */\n  dup3\n    /* \"#utility.yul\":5429:5450   */\n  or\n    /* \"#utility.yul\":5421:5450   */\n  swap1\n  pop\n    /* \"#utility.yul\":5161:5456   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5461:6856   */\ntag_9:\n    /* \"#utility.yul\":5578:5615   */\n  tag_177\n    /* \"#utility.yul\":5611:5614   */\n  dup3\n    /* \"#utility.yul\":5578:5615   */\n  tag_86\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":5680:5698   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5672:5678   */\n  dup2\n    /* \"#utility.yul\":5669:5699   */\n  gt\n    /* \"#utility.yul\":5666:5722   */\n  iszero\n  tag_178\n  jumpi\n    /* \"#utility.yul\":5702:5720   */\n  tag_179\n  tag_87\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":5666:5722   */\ntag_178:\n    /* \"#utility.yul\":5746:5784   */\n  tag_180\n    /* \"#utility.yul\":5778:5782   */\n  dup3\n    /* \"#utility.yul\":5772:5783   */\n  sload\n    /* \"#utility.yul\":5746:5784   */\n  tag_89\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":5831:5898   */\n  tag_181\n    /* \"#utility.yul\":5891:5897   */\n  dup3\n    /* \"#utility.yul\":5883:5889   */\n  dup3\n    /* \"#utility.yul\":5877:5881   */\n  dup6\n    /* \"#utility.yul\":5831:5898   */\n  tag_101\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":5925:5926   */\n  0x00\n    /* \"#utility.yul\":5949:5953   */\n  0x20\n    /* \"#utility.yul\":5936:5953   */\n  swap1\n  pop\n    /* \"#utility.yul\":5981:5983   */\n  0x1f\n    /* \"#utility.yul\":5973:5979   */\n  dup4\n    /* \"#utility.yul\":5970:5984   */\n  gt\n    /* \"#utility.yul\":5998:5999   */\n  0x01\n    /* \"#utility.yul\":5993:6611   */\n  dup2\n  eq\n  tag_183\n  jumpi\n    /* \"#utility.yul\":6655:6656   */\n  0x00\n    /* \"#utility.yul\":6672:6678   */\n  dup5\n    /* \"#utility.yul\":6669:6746   */\n  iszero\n  tag_184\n  jumpi\n    /* \"#utility.yul\":6721:6730   */\n  dup3\n    /* \"#utility.yul\":6716:6719   */\n  dup8\n    /* \"#utility.yul\":6712:6731   */\n  add\n    /* \"#utility.yul\":6706:6732   */\n  mload\n    /* \"#utility.yul\":6697:6732   */\n  swap1\n  pop\n    /* \"#utility.yul\":6669:6746   */\ntag_184:\n    /* \"#utility.yul\":6772:6839   */\n  tag_185\n    /* \"#utility.yul\":6832:6838   */\n  dup6\n    /* \"#utility.yul\":6825:6830   */\n  dup3\n    /* \"#utility.yul\":6772:6839   */\n  tag_104\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":6766:6770   */\n  dup7\n    /* \"#utility.yul\":6759:6840   */\n  sstore\n    /* \"#utility.yul\":6628:6850   */\n  pop\n    /* \"#utility.yul\":5963:6850   */\n  jump(tag_182)\n    /* \"#utility.yul\":5993:6611   */\ntag_183:\n    /* \"#utility.yul\":6045:6049   */\n  0x1f\n    /* \"#utility.yul\":6041:6050   */\n  not\n    /* \"#utility.yul\":6033:6039   */\n  dup5\n    /* \"#utility.yul\":6029:6051   */\n  and\n    /* \"#utility.yul\":6079:6116   */\n  tag_186\n    /* \"#utility.yul\":6111:6115   */\n  dup7\n    /* \"#utility.yul\":6079:6116   */\n  tag_90\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":6138:6139   */\n  0x00\n    /* \"#utility.yul\":6152:6360   */\ntag_187:\n    /* \"#utility.yul\":6166:6173   */\n  dup3\n    /* \"#utility.yul\":6163:6164   */\n  dup2\n    /* \"#utility.yul\":6160:6174   */\n  lt\n    /* \"#utility.yul\":6152:6360   */\n  iszero\n  tag_189\n  jumpi\n    /* \"#utility.yul\":6245:6254   */\n  dup5\n    /* \"#utility.yul\":6240:6243   */\n  dup10\n    /* \"#utility.yul\":6236:6255   */\n  add\n    /* \"#utility.yul\":6230:6256   */\n  mload\n    /* \"#utility.yul\":6222:6228   */\n  dup3\n    /* \"#utility.yul\":6215:6257   */\n  sstore\n    /* \"#utility.yul\":6296:6297   */\n  0x01\n    /* \"#utility.yul\":6288:6294   */\n  dup3\n    /* \"#utility.yul\":6284:6298   */\n  add\n    /* \"#utility.yul\":6274:6298   */\n  swap2\n  pop\n    /* \"#utility.yul\":6343:6345   */\n  0x20\n    /* \"#utility.yul\":6332:6341   */\n  dup6\n    /* \"#utility.yul\":6328:6346   */\n  add\n    /* \"#utility.yul\":6315:6346   */\n  swap5\n  pop\n    /* \"#utility.yul\":6189:6193   */\n  0x20\n    /* \"#utility.yul\":6186:6187   */\n  dup2\n    /* \"#utility.yul\":6182:6194   */\n  add\n    /* \"#utility.yul\":6177:6194   */\n  swap1\n  pop\n    /* \"#utility.yul\":6152:6360   */\n  jump(tag_187)\ntag_189:\n    /* \"#utility.yul\":6388:6394   */\n  dup7\n    /* \"#utility.yul\":6379:6386   */\n  dup4\n    /* \"#utility.yul\":6376:6395   */\n  lt\n    /* \"#utility.yul\":6373:6552   */\n  iszero\n  tag_190\n  jumpi\n    /* \"#utility.yul\":6446:6455   */\n  dup5\n    /* \"#utility.yul\":6441:6444   */\n  dup10\n    /* \"#utility.yul\":6437:6456   */\n  add\n    /* \"#utility.yul\":6431:6457   */\n  mload\n    /* \"#utility.yul\":6489:6537   */\n  tag_191\n    /* \"#utility.yul\":6531:6535   */\n  0x1f\n    /* \"#utility.yul\":6523:6529   */\n  dup10\n    /* \"#utility.yul\":6519:6536   */\n  and\n    /* \"#utility.yul\":6508:6517   */\n  dup3\n    /* \"#utility.yul\":6489:6537   */\n  tag_103\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":6481:6487   */\n  dup4\n    /* \"#utility.yul\":6474:6538   */\n  sstore\n    /* \"#utility.yul\":6396:6552   */\n  pop\n    /* \"#utility.yul\":6373:6552   */\ntag_190:\n    /* \"#utility.yul\":6598:6599   */\n  0x01\n    /* \"#utility.yul\":6594:6595   */\n  0x02\n    /* \"#utility.yul\":6586:6592   */\n  dup9\n    /* \"#utility.yul\":6582:6596   */\n  mul\n    /* \"#utility.yul\":6578:6600   */\n  add\n    /* \"#utility.yul\":6572:6576   */\n  dup9\n    /* \"#utility.yul\":6565:6601   */\n  sstore\n    /* \"#utility.yul\":6000:6611   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5963:6850   */\ntag_182:\n  pop\n    /* \"#utility.yul\":5553:6856   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5461:6856   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6862:6980   */\ntag_105:\n    /* \"#utility.yul\":6949:6973   */\n  tag_193\n    /* \"#utility.yul\":6967:6972   */\n  dup2\n    /* \"#utility.yul\":6949:6973   */\n  tag_80\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":6944:6947   */\n  dup3\n    /* \"#utility.yul\":6937:6974   */\n  mstore\n    /* \"#utility.yul\":6862:6980   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6986:7208   */\ntag_14:\n    /* \"#utility.yul\":7079:7083   */\n  0x00\n    /* \"#utility.yul\":7117:7119   */\n  0x20\n    /* \"#utility.yul\":7106:7115   */\n  dup3\n    /* \"#utility.yul\":7102:7120   */\n  add\n    /* \"#utility.yul\":7094:7120   */\n  swap1\n  pop\n    /* \"#utility.yul\":7130:7201   */\n  tag_195\n    /* \"#utility.yul\":7198:7199   */\n  0x00\n    /* \"#utility.yul\":7187:7196   */\n  dup4\n    /* \"#utility.yul\":7183:7200   */\n  add\n    /* \"#utility.yul\":7174:7180   */\n  dup5\n    /* \"#utility.yul\":7130:7201   */\n  tag_105\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":6986:7208   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7214:7394   */\ntag_106:\n    /* \"#utility.yul\":7262:7339   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":7259:7260   */\n  0x00\n    /* \"#utility.yul\":7252:7340   */\n  mstore\n    /* \"#utility.yul\":7359:7363   */\n  0x11\n    /* \"#utility.yul\":7356:7357   */\n  0x04\n    /* \"#utility.yul\":7349:7364   */\n  mstore\n    /* \"#utility.yul\":7383:7387   */\n  0x24\n    /* \"#utility.yul\":7380:7381   */\n  0x00\n    /* \"#utility.yul\":7373:7388   */\n  revert\n    /* \"#utility.yul\":7400:7486   */\ntag_107:\n    /* \"#utility.yul\":7435:7442   */\n  0x00\n    /* \"#utility.yul\":7475:7479   */\n  0xff\n    /* \"#utility.yul\":7468:7473   */\n  dup3\n    /* \"#utility.yul\":7464:7480   */\n  and\n    /* \"#utility.yul\":7453:7480   */\n  swap1\n  pop\n    /* \"#utility.yul\":7400:7486   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7492:7659   */\ntag_61:\n    /* \"#utility.yul\":7529:7532   */\n  0x00\n    /* \"#utility.yul\":7552:7574   */\n  tag_199\n    /* \"#utility.yul\":7568:7573   */\n  dup3\n    /* \"#utility.yul\":7552:7574   */\n  tag_107\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":7543:7574   */\n  swap2\n  pop\n    /* \"#utility.yul\":7596:7600   */\n  0xff\n    /* \"#utility.yul\":7589:7594   */\n  dup3\n    /* \"#utility.yul\":7586:7601   */\n  sub\n    /* \"#utility.yul\":7583:7624   */\n  tag_200\n  jumpi\n    /* \"#utility.yul\":7604:7622   */\n  tag_201\n  tag_106\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":7583:7624   */\ntag_200:\n    /* \"#utility.yul\":7651:7652   */\n  0x01\n    /* \"#utility.yul\":7644:7649   */\n  dup3\n    /* \"#utility.yul\":7640:7653   */\n  add\n    /* \"#utility.yul\":7633:7653   */\n  swap1\n  pop\n    /* \"#utility.yul\":7492:7659   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7665:7856   */\ntag_67:\n    /* \"#utility.yul\":7705:7708   */\n  0x00\n    /* \"#utility.yul\":7724:7744   */\n  tag_203\n    /* \"#utility.yul\":7742:7743   */\n  dup3\n    /* \"#utility.yul\":7724:7744   */\n  tag_83\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":7719:7744   */\n  swap2\n  pop\n    /* \"#utility.yul\":7758:7778   */\n  tag_204\n    /* \"#utility.yul\":7776:7777   */\n  dup4\n    /* \"#utility.yul\":7758:7778   */\n  tag_83\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":7753:7778   */\n  swap3\n  pop\n    /* \"#utility.yul\":7801:7802   */\n  dup3\n    /* \"#utility.yul\":7798:7799   */\n  dup3\n    /* \"#utility.yul\":7794:7803   */\n  add\n    /* \"#utility.yul\":7787:7803   */\n  swap1\n  pop\n    /* \"#utility.yul\":7822:7825   */\n  dup1\n    /* \"#utility.yul\":7819:7820   */\n  dup3\n    /* \"#utility.yul\":7816:7826   */\n  gt\n    /* \"#utility.yul\":7813:7849   */\n  iszero\n  tag_205\n  jumpi\n    /* \"#utility.yul\":7829:7847   */\n  tag_206\n  tag_106\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":7813:7849   */\ntag_205:\n    /* \"#utility.yul\":7665:7856   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7862:7980   */\ntag_108:\n    /* \"#utility.yul\":7949:7973   */\n  tag_208\n    /* \"#utility.yul\":7967:7972   */\n  dup2\n    /* \"#utility.yul\":7949:7973   */\n  tag_83\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":7944:7947   */\n  dup3\n    /* \"#utility.yul\":7937:7974   */\n  mstore\n    /* \"#utility.yul\":7862:7980   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7986:8428   */\ntag_71:\n    /* \"#utility.yul\":8135:8139   */\n  0x00\n    /* \"#utility.yul\":8173:8175   */\n  0x60\n    /* \"#utility.yul\":8162:8171   */\n  dup3\n    /* \"#utility.yul\":8158:8176   */\n  add\n    /* \"#utility.yul\":8150:8176   */\n  swap1\n  pop\n    /* \"#utility.yul\":8186:8257   */\n  tag_210\n    /* \"#utility.yul\":8254:8255   */\n  0x00\n    /* \"#utility.yul\":8243:8252   */\n  dup4\n    /* \"#utility.yul\":8239:8256   */\n  add\n    /* \"#utility.yul\":8230:8236   */\n  dup7\n    /* \"#utility.yul\":8186:8257   */\n  tag_105\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":8267:8339   */\n  tag_211\n    /* \"#utility.yul\":8335:8337   */\n  0x20\n    /* \"#utility.yul\":8324:8333   */\n  dup4\n    /* \"#utility.yul\":8320:8338   */\n  add\n    /* \"#utility.yul\":8311:8317   */\n  dup6\n    /* \"#utility.yul\":8267:8339   */\n  tag_108\n  jump\t// in\ntag_211:\n    /* \"#utility.yul\":8349:8421   */\n  tag_212\n    /* \"#utility.yul\":8417:8419   */\n  0x40\n    /* \"#utility.yul\":8406:8415   */\n  dup4\n    /* \"#utility.yul\":8402:8420   */\n  add\n    /* \"#utility.yul\":8393:8399   */\n  dup5\n    /* \"#utility.yul\":8349:8421   */\n  tag_108\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":7986:8428   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8434:8656   */\ntag_75:\n    /* \"#utility.yul\":8527:8531   */\n  0x00\n    /* \"#utility.yul\":8565:8567   */\n  0x20\n    /* \"#utility.yul\":8554:8563   */\n  dup3\n    /* \"#utility.yul\":8550:8568   */\n  add\n    /* \"#utility.yul\":8542:8568   */\n  swap1\n  pop\n    /* \"#utility.yul\":8578:8649   */\n  tag_214\n    /* \"#utility.yul\":8646:8647   */\n  0x00\n    /* \"#utility.yul\":8635:8644   */\n  dup4\n    /* \"#utility.yul\":8631:8648   */\n  add\n    /* \"#utility.yul\":8622:8628   */\n  dup5\n    /* \"#utility.yul\":8578:8649   */\n  tag_108\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":8434:8656   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/myContract.sol\":243:4215  contract DegenToken is ERC20, Ownable, ERC20Burnable {... */\ntag_24:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/myContract.sol\":243:4215  contract DegenToken is ERC20, Ownable, ERC20Burnable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xc81d7604\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xc81d7604\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xce6019b4\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd917bd27\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xe3af42e1\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xaf3bcb7d\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x313ce567\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4c738909\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6d1b229d\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x09ceb537\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1072cbea\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/myContract.sol\":2231:2816  function betOnRandomNumber(bool predictLessThanFive, uint256 betAmount) public {... */\n    tag_5:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/myContract.sol\":1607:1805  function transferToken(address recipient, uint256 amount) external {... */\n    tag_6:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/myContract.sol\":1457:1550  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_10:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_11:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      stop\n        /* \"contracts/myContract.sol\":3918:4019  function getMyBalance() external view returns (uint256) {... */\n    tag_12:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/myContract.sol\":4065:4213  function burnTokens(uint256 amount) external {... */\n    tag_13:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_16:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_17:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_18:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_19:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/myContract.sol\":2859:3237  function purchaseItem(uint8 itemId) external {... */\n    tag_20:\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n    tag_94:\n      stop\n        /* \"contracts/myContract.sol\":1869:2014  function redeemWelcomeBonus() public {... */\n    tag_21:\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n      stop\n        /* \"contracts/myContract.sol\":3296:3657  function getUserItems(address user) external view returns (uint8[] memory) {... */\n    tag_22:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/myContract.sol\":3701:3875  function getItemDetails(uint8 itemId) external view returns (string memory, uint256) {... */\n    tag_23:\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_108\n      swap3\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_24:\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      tag_113\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/myContract.sol\":2068:2182  function addItemToStore(string memory name, uint256 price) public onlyOwner {... */\n    tag_25:\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      tag_118\n      jump\t// in\n    tag_115:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_26:\n      tag_119\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_120:\n      tag_121\n      jump\t// in\n    tag_119:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_125\n      swap1\n      tag_124\n      jump\t// in\n    tag_125:\n      dup1\n      iszero\n      tag_126\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_127\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_126)\n    tag_127:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_128:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_128\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/myContract.sol\":2231:2816  function betOnRandomNumber(bool predictLessThanFive, uint256 betAmount) public {... */\n    tag_43:\n        /* \"contracts/myContract.sol\":2353:2362  betAmount */\n      dup1\n        /* \"contracts/myContract.sol\":2328:2349  balanceOf(msg.sender) */\n      tag_135\n        /* \"contracts/myContract.sol\":2338:2348  msg.sender */\n      caller\n        /* \"contracts/myContract.sol\":2328:2337  balanceOf */\n      tag_76\n        /* \"contracts/myContract.sol\":2328:2349  balanceOf(msg.sender) */\n      jump\t// in\n    tag_135:\n        /* \"contracts/myContract.sol\":2328:2362  balanceOf(msg.sender) >= betAmount */\n      lt\n      iszero\n        /* \"contracts/myContract.sol\":2320:2387  require(balanceOf(msg.sender) >= betAmount, \"Insufficient balance\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"contracts/myContract.sol\":2406:2426  uint256 randomNumber */\n      0x00\n        /* \"contracts/myContract.sol\":2497:2499  10 */\n      0x0a\n        /* \"contracts/myContract.sol\":2464:2479  block.timestamp */\n      timestamp\n        /* \"contracts/myContract.sol\":2481:2491  msg.sender */\n      caller\n        /* \"contracts/myContract.sol\":2447:2492  abi.encodePacked(block.timestamp, msg.sender) */\n      add(0x20, mload(0x40))\n      tag_139\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/myContract.sol\":2437:2493  keccak256(abi.encodePacked(block.timestamp, msg.sender)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/myContract.sol\":2429:2494  uint256(keccak256(abi.encodePacked(block.timestamp, msg.sender))) */\n      0x00\n      shr\n        /* \"contracts/myContract.sol\":2429:2499  uint256(keccak256(abi.encodePacked(block.timestamp, msg.sender))) % 10 */\n      tag_141\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n        /* \"contracts/myContract.sol\":2406:2499  uint256 randomNumber = uint256(keccak256(abi.encodePacked(block.timestamp, msg.sender))) % 10 */\n      swap1\n      pop\n        /* \"contracts/myContract.sol\":2553:2554  5 */\n      0x05\n        /* \"contracts/myContract.sol\":2538:2550  randomNumber */\n      dup2\n        /* \"contracts/myContract.sol\":2538:2554  randomNumber < 5 */\n      lt\n        /* \"contracts/myContract.sol\":2514:2555  predictLessThanFive == (randomNumber < 5) */\n      iszero\n      iszero\n        /* \"contracts/myContract.sol\":2514:2533  predictLessThanFive */\n      dup4\n        /* \"contracts/myContract.sol\":2514:2555  predictLessThanFive == (randomNumber < 5) */\n      iszero\n      iszero\n      sub\n        /* \"contracts/myContract.sol\":2510:2810  if (predictLessThanFive == (randomNumber < 5)) {... */\n      tag_143\n      jumpi\n        /* \"contracts/myContract.sol\":2571:2603  _mint(msg.sender, betAmount * 2) */\n      tag_144\n        /* \"contracts/myContract.sol\":2577:2587  msg.sender */\n      caller\n        /* \"contracts/myContract.sol\":2601:2602  2 */\n      0x02\n        /* \"contracts/myContract.sol\":2589:2598  betAmount */\n      dup5\n        /* \"contracts/myContract.sol\":2589:2602  betAmount * 2 */\n      tag_145\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n        /* \"contracts/myContract.sol\":2571:2576  _mint */\n      tag_147\n        /* \"contracts/myContract.sol\":2571:2603  _mint(msg.sender, betAmount * 2) */\n      jump\t// in\n    tag_144:\n        /* \"contracts/myContract.sol\":2634:2644  msg.sender */\n      caller\n        /* \"contracts/myContract.sol\":2622:2677  GameOutcome(msg.sender, randomNumber, true, \"You won!\") */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd04d9689d8e43bc0bacea67661ef472dcf321f34f08af72f651af30c4c866587\n        /* \"contracts/myContract.sol\":2646:2658  randomNumber */\n      dup3\n        /* \"contracts/myContract.sol\":2660:2664  true */\n      0x01\n        /* \"contracts/myContract.sol\":2622:2677  GameOutcome(msg.sender, randomNumber, true, \"You won!\") */\n      mload(0x40)\n      tag_148\n      swap3\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/myContract.sol\":2510:2810  if (predictLessThanFive == (randomNumber < 5)) {... */\n      jump(tag_150)\n    tag_143:\n        /* \"contracts/myContract.sol\":2708:2723  burn(betAmount) */\n      tag_151\n        /* \"contracts/myContract.sol\":2713:2722  betAmount */\n      dup3\n        /* \"contracts/myContract.sol\":2708:2712  burn */\n      tag_66\n        /* \"contracts/myContract.sol\":2708:2723  burn(betAmount) */\n      jump\t// in\n    tag_151:\n        /* \"contracts/myContract.sol\":2754:2764  msg.sender */\n      caller\n        /* \"contracts/myContract.sol\":2742:2799  GameOutcome(msg.sender, randomNumber, false, \"You lost!\") */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd04d9689d8e43bc0bacea67661ef472dcf321f34f08af72f651af30c4c866587\n        /* \"contracts/myContract.sol\":2766:2778  randomNumber */\n      dup3\n        /* \"contracts/myContract.sol\":2780:2785  false */\n      0x00\n        /* \"contracts/myContract.sol\":2742:2799  GameOutcome(msg.sender, randomNumber, false, \"You lost!\") */\n      mload(0x40)\n      tag_152\n      swap3\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/myContract.sol\":2510:2810  if (predictLessThanFive == (randomNumber < 5)) {... */\n    tag_150:\n        /* \"contracts/myContract.sol\":2310:2816  {... */\n      pop\n        /* \"contracts/myContract.sol\":2231:2816  function betOnRandomNumber(bool predictLessThanFive, uint256 betAmount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/myContract.sol\":1607:1805  function transferToken(address recipient, uint256 amount) external {... */\n    tag_46:\n        /* \"contracts/myContract.sol\":1717:1723  amount */\n      dup1\n        /* \"contracts/myContract.sol\":1692:1713  balanceOf(msg.sender) */\n      tag_155\n        /* \"contracts/myContract.sol\":1702:1712  msg.sender */\n      caller\n        /* \"contracts/myContract.sol\":1692:1701  balanceOf */\n      tag_76\n        /* \"contracts/myContract.sol\":1692:1713  balanceOf(msg.sender) */\n      jump\t// in\n    tag_155:\n        /* \"contracts/myContract.sol\":1692:1723  balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"contracts/myContract.sol\":1684:1748  require(balanceOf(msg.sender) >= amount, \"Insufficient balance\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap1\n      tag_138\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"contracts/myContract.sol\":1758:1798  _transfer(msg.sender, recipient, amount) */\n      tag_158\n        /* \"contracts/myContract.sol\":1768:1778  msg.sender */\n      caller\n        /* \"contracts/myContract.sol\":1780:1789  recipient */\n      dup4\n        /* \"contracts/myContract.sol\":1791:1797  amount */\n      dup4\n        /* \"contracts/myContract.sol\":1758:1767  _transfer */\n      tag_159\n        /* \"contracts/myContract.sol\":1758:1798  _transfer(msg.sender, recipient, amount) */\n      jump\t// in\n    tag_158:\n        /* \"contracts/myContract.sol\":1607:1805  function transferToken(address recipient, uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_159\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/myContract.sol\":1457:1550  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_168:\n        /* \"contracts/myContract.sol\":1526:1543  _mint(to, amount) */\n      tag_171\n        /* \"contracts/myContract.sol\":1532:1534  to */\n      dup3\n        /* \"contracts/myContract.sol\":1536:1542  amount */\n      dup3\n        /* \"contracts/myContract.sol\":1526:1531  _mint */\n      tag_147\n        /* \"contracts/myContract.sol\":1526:1543  _mint(to, amount) */\n      jump\t// in\n    tag_171:\n        /* \"contracts/myContract.sol\":1457:1550  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:688  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/myContract.sol\":3918:4019  function getMyBalance() external view returns (uint256) {... */\n    tag_68:\n        /* \"contracts/myContract.sol\":3965:3972  uint256 */\n      0x00\n        /* \"contracts/myContract.sol\":3991:4012  balanceOf(msg.sender) */\n      tag_177\n        /* \"contracts/myContract.sol\":4001:4011  msg.sender */\n      caller\n        /* \"contracts/myContract.sol\":3991:4000  balanceOf */\n      tag_76\n        /* \"contracts/myContract.sol\":3991:4012  balanceOf(msg.sender) */\n      jump\t// in\n    tag_177:\n        /* \"contracts/myContract.sol\":3984:4012  return balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/myContract.sol\":3918:4019  function getMyBalance() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/myContract.sol\":4065:4213  function burnTokens(uint256 amount) external {... */\n    tag_72:\n        /* \"contracts/myContract.sol\":4153:4159  amount */\n      dup1\n        /* \"contracts/myContract.sol\":4128:4149  balanceOf(msg.sender) */\n      tag_179\n        /* \"contracts/myContract.sol\":4138:4148  msg.sender */\n      caller\n        /* \"contracts/myContract.sol\":4128:4137  balanceOf */\n      tag_76\n        /* \"contracts/myContract.sol\":4128:4149  balanceOf(msg.sender) */\n      jump\t// in\n    tag_179:\n        /* \"contracts/myContract.sol\":4128:4159  balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"contracts/myContract.sol\":4120:4184  require(balanceOf(msg.sender) >= amount, \"Insufficient balance\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_138\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"contracts/myContract.sol\":4194:4206  burn(amount) */\n      tag_182\n        /* \"contracts/myContract.sol\":4199:4205  amount */\n      dup2\n        /* \"contracts/myContract.sol\":4194:4198  burn */\n      tag_66\n        /* \"contracts/myContract.sol\":4194:4206  burn(amount) */\n      jump\t// in\n    tag_182:\n        /* \"contracts/myContract.sol\":4065:4213  function burnTokens(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_188\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1131  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_195\n      swap1\n      tag_124\n      jump\t// in\n    tag_195:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_196\n      swap1\n      tag_124\n      jump\t// in\n    tag_196:\n      dup1\n      iszero\n      tag_197\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_198\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_197)\n    tag_198:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_199:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_199\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_197:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_202\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_159\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/myContract.sol\":2859:3237  function purchaseItem(uint8 itemId) external {... */\n    tag_97:\n        /* \"contracts/myContract.sol\":2944:2945  0 */\n      0x00\n        /* \"contracts/myContract.sol\":2922:2927  items */\n      0x06\n        /* \"contracts/myContract.sol\":2922:2935  items[itemId] */\n      0x00\n        /* \"contracts/myContract.sol\":2928:2934  itemId */\n      dup4\n        /* \"contracts/myContract.sol\":2922:2935  items[itemId] */\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/myContract.sol\":2922:2941  items[itemId].price */\n      0x02\n      add\n      sload\n        /* \"contracts/myContract.sol\":2922:2945  items[itemId].price > 0 */\n      gt\n        /* \"contracts/myContract.sol\":2914:2964  require(items[itemId].price > 0, \"Item not found\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_204:\n        /* \"contracts/myContract.sol\":3007:3012  items */\n      0x06\n        /* \"contracts/myContract.sol\":3007:3020  items[itemId] */\n      0x00\n        /* \"contracts/myContract.sol\":3013:3019  itemId */\n      dup3\n        /* \"contracts/myContract.sol\":3007:3020  items[itemId] */\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/myContract.sol\":3007:3026  items[itemId].price */\n      0x02\n      add\n      sload\n        /* \"contracts/myContract.sol\":2982:3003  balanceOf(msg.sender) */\n      tag_207\n        /* \"contracts/myContract.sol\":2992:3002  msg.sender */\n      caller\n        /* \"contracts/myContract.sol\":2982:2991  balanceOf */\n      tag_76\n        /* \"contracts/myContract.sol\":2982:3003  balanceOf(msg.sender) */\n      jump\t// in\n    tag_207:\n        /* \"contracts/myContract.sol\":2982:3026  balanceOf(msg.sender) >= items[itemId].price */\n      lt\n      iszero\n        /* \"contracts/myContract.sol\":2974:3051  require(balanceOf(msg.sender) >= items[itemId].price, \"Insufficient balance\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap1\n      tag_138\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"contracts/myContract.sol\":3062:3087  burn(items[itemId].price) */\n      tag_210\n        /* \"contracts/myContract.sol\":3067:3072  items */\n      0x06\n        /* \"contracts/myContract.sol\":3067:3080  items[itemId] */\n      0x00\n        /* \"contracts/myContract.sol\":3073:3079  itemId */\n      dup4\n        /* \"contracts/myContract.sol\":3067:3080  items[itemId] */\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/myContract.sol\":3067:3086  items[itemId].price */\n      0x02\n      add\n      sload\n        /* \"contracts/myContract.sol\":3062:3066  burn */\n      tag_66\n        /* \"contracts/myContract.sol\":3062:3087  burn(items[itemId].price) */\n      jump\t// in\n    tag_210:\n        /* \"contracts/myContract.sol\":3097:3108  playerItems */\n      0x07\n        /* \"contracts/myContract.sol\":3097:3120  playerItems[msg.sender] */\n      0x00\n        /* \"contracts/myContract.sol\":3109:3119  msg.sender */\n      caller\n        /* \"contracts/myContract.sol\":3097:3120  playerItems[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/myContract.sol\":3126:3131  items */\n      0x06\n        /* \"contracts/myContract.sol\":3126:3139  items[itemId] */\n      0x00\n        /* \"contracts/myContract.sol\":3132:3138  itemId */\n      dup4\n        /* \"contracts/myContract.sol\":3126:3139  items[itemId] */\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/myContract.sol\":3097:3140  playerItems[msg.sender].push(items[itemId]) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      dup2\n      0x00\n      add\n      swap1\n      dup2\n      tag_212\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      pop\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      0x02\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/myContract.sol\":3170:3180  msg.sender */\n      caller\n        /* \"contracts/myContract.sol\":3156:3230  ItemPurchased(msg.sender, itemId, items[itemId].name, items[itemId].price) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8bedd141782c49139782bd92bd7a760a0bcb544ffecfd2b25f00366fae06598e\n        /* \"contracts/myContract.sol\":3182:3188  itemId */\n      dup3\n        /* \"contracts/myContract.sol\":3190:3195  items */\n      0x06\n        /* \"contracts/myContract.sol\":3190:3203  items[itemId] */\n      0x00\n        /* \"contracts/myContract.sol\":3196:3202  itemId */\n      dup6\n        /* \"contracts/myContract.sol\":3190:3203  items[itemId] */\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/myContract.sol\":3190:3208  items[itemId].name */\n      0x00\n      add\n        /* \"contracts/myContract.sol\":3210:3215  items */\n      0x06\n        /* \"contracts/myContract.sol\":3210:3223  items[itemId] */\n      0x00\n        /* \"contracts/myContract.sol\":3216:3222  itemId */\n      dup7\n        /* \"contracts/myContract.sol\":3210:3223  items[itemId] */\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/myContract.sol\":3210:3229  items[itemId].price */\n      0x02\n      add\n      sload\n        /* \"contracts/myContract.sol\":3156:3230  ItemPurchased(msg.sender, itemId, items[itemId].name, items[itemId].price) */\n      mload(0x40)\n      tag_214\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/myContract.sol\":2859:3237  function purchaseItem(uint8 itemId) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/myContract.sol\":1869:2014  function redeemWelcomeBonus() public {... */\n    tag_99:\n        /* \"contracts/myContract.sol\":1949:1950  0 */\n      0x00\n        /* \"contracts/myContract.sol\":1924:1945  balanceOf(msg.sender) */\n      tag_217\n        /* \"contracts/myContract.sol\":1934:1944  msg.sender */\n      caller\n        /* \"contracts/myContract.sol\":1924:1933  balanceOf */\n      tag_76\n        /* \"contracts/myContract.sol\":1924:1945  balanceOf(msg.sender) */\n      jump\t// in\n    tag_217:\n        /* \"contracts/myContract.sol\":1924:1950  balanceOf(msg.sender) == 0 */\n      eq\n        /* \"contracts/myContract.sol\":1916:1976  require(balanceOf(msg.sender) == 0, \"Bonus already claimed\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_218:\n        /* \"contracts/myContract.sol\":1986:2007  _mint(msg.sender, 50) */\n      tag_221\n        /* \"contracts/myContract.sol\":1992:2002  msg.sender */\n      caller\n        /* \"contracts/myContract.sol\":2004:2006  50 */\n      0x32\n        /* \"contracts/myContract.sol\":1986:1991  _mint */\n      tag_147\n        /* \"contracts/myContract.sol\":1986:2007  _mint(msg.sender, 50) */\n      jump\t// in\n    tag_221:\n        /* \"contracts/myContract.sol\":1869:2014  function redeemWelcomeBonus() public {... */\n      jump\t// out\n        /* \"contracts/myContract.sol\":3296:3657  function getUserItems(address user) external view returns (uint8[] memory) {... */\n    tag_102:\n        /* \"contracts/myContract.sol\":3355:3369  uint8[] memory */\n      0x60\n        /* \"contracts/myContract.sol\":3381:3404  Item[] memory itemsList */\n      0x00\n        /* \"contracts/myContract.sol\":3407:3418  playerItems */\n      0x07\n        /* \"contracts/myContract.sol\":3407:3424  playerItems[user] */\n      0x00\n        /* \"contracts/myContract.sol\":3419:3423  user */\n      dup5\n        /* \"contracts/myContract.sol\":3407:3424  playerItems[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/myContract.sol\":3381:3424  Item[] memory itemsList = playerItems[user] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_223:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_224\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      dup1\n      sload\n      tag_226\n      swap1\n      tag_124\n      jump\t// in\n    tag_226:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_227\n      swap1\n      tag_124\n      jump\t// in\n    tag_227:\n      dup1\n      iszero\n      tag_228\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_229\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_228)\n    tag_229:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_230:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_230\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_228:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_223)\n    tag_224:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/myContract.sol\":3434:3448  uint256 length */\n      0x00\n        /* \"contracts/myContract.sol\":3451:3460  itemsList */\n      dup2\n        /* \"contracts/myContract.sol\":3451:3467  itemsList.length */\n      mload\n        /* \"contracts/myContract.sol\":3434:3467  uint256 length = itemsList.length */\n      swap1\n      pop\n        /* \"contracts/myContract.sol\":3478:3500  uint8[] memory itemIds */\n      0x00\n        /* \"contracts/myContract.sol\":3515:3521  length */\n      dup2\n        /* \"contracts/myContract.sol\":3503:3522  new uint8[](length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_231\n      jumpi\n      tag_232\n      tag_233\n      jump\t// in\n    tag_232:\n    tag_231:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_234\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_234:\n      pop\n        /* \"contracts/myContract.sol\":3478:3522  uint8[] memory itemIds = new uint8[](length) */\n      swap1\n      pop\n        /* \"contracts/myContract.sol\":3537:3546  uint256 i */\n      0x00\n        /* \"contracts/myContract.sol\":3532:3626  for (uint256 i = 0; i < length; i++) {... */\n    tag_235:\n        /* \"contracts/myContract.sol\":3556:3562  length */\n      dup3\n        /* \"contracts/myContract.sol\":3552:3553  i */\n      dup2\n        /* \"contracts/myContract.sol\":3552:3562  i < length */\n      lt\n        /* \"contracts/myContract.sol\":3532:3626  for (uint256 i = 0; i < length; i++) {... */\n      iszero\n      tag_236\n      jumpi\n        /* \"contracts/myContract.sol\":3596:3605  itemsList */\n      dup4\n        /* \"contracts/myContract.sol\":3606:3607  i */\n      dup2\n        /* \"contracts/myContract.sol\":3596:3608  itemsList[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_238\n      jumpi\n      tag_239\n      tag_240\n      jump\t// in\n    tag_239:\n    tag_238:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/myContract.sol\":3596:3615  itemsList[i].itemId */\n      0x20\n      add\n      mload\n        /* \"contracts/myContract.sol\":3583:3590  itemIds */\n      dup3\n        /* \"contracts/myContract.sol\":3591:3592  i */\n      dup3\n        /* \"contracts/myContract.sol\":3583:3593  itemIds[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_241\n      jumpi\n      tag_242\n      tag_240\n      jump\t// in\n    tag_242:\n    tag_241:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/myContract.sol\":3583:3615  itemIds[i] = itemsList[i].itemId */\n      swap1\n      0xff\n      and\n      swap1\n      dup2\n      0xff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/myContract.sol\":3564:3567  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/myContract.sol\":3532:3626  for (uint256 i = 0; i < length; i++) {... */\n      jump(tag_235)\n    tag_236:\n      pop\n        /* \"contracts/myContract.sol\":3643:3650  itemIds */\n      dup1\n        /* \"contracts/myContract.sol\":3636:3650  return itemIds */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/myContract.sol\":3296:3657  function getUserItems(address user) external view returns (uint8[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/myContract.sol\":3701:3875  function getItemDetails(uint8 itemId) external view returns (string memory, uint256) {... */\n    tag_107:\n        /* \"contracts/myContract.sol\":3762:3775  string memory */\n      0x60\n        /* \"contracts/myContract.sol\":3777:3784  uint256 */\n      0x00\n        /* \"contracts/myContract.sol\":3796:3812  Item memory item */\n      dup1\n        /* \"contracts/myContract.sol\":3815:3820  items */\n      0x06\n        /* \"contracts/myContract.sol\":3815:3828  items[itemId] */\n      0x00\n        /* \"contracts/myContract.sol\":3821:3827  itemId */\n      dup6\n        /* \"contracts/myContract.sol\":3815:3828  items[itemId] */\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/myContract.sol\":3796:3828  Item memory item = items[itemId] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      dup1\n      sload\n      tag_244\n      swap1\n      tag_124\n      jump\t// in\n    tag_244:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_245\n      swap1\n      tag_124\n      jump\t// in\n    tag_245:\n      dup1\n      iszero\n      tag_246\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_247\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_246)\n    tag_247:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_248:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_248\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_246:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/myContract.sol\":3846:3850  item */\n      dup1\n        /* \"contracts/myContract.sol\":3846:3855  item.name */\n      0x00\n      add\n      mload\n        /* \"contracts/myContract.sol\":3857:3861  item */\n      dup2\n        /* \"contracts/myContract.sol\":3857:3867  item.price */\n      0x40\n      add\n      mload\n        /* \"contracts/myContract.sol\":3838:3868  return (item.name, item.price) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"contracts/myContract.sol\":3701:3875  function getItemDetails(uint8 itemId) external view returns (string memory, uint256) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/myContract.sol\":2068:2182  function addItemToStore(string memory name, uint256 price) public onlyOwner {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_251\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_251:\n        /* \"contracts/myContract.sol\":2154:2175  _addItem(name, price) */\n      tag_253\n        /* \"contracts/myContract.sol\":2163:2167  name */\n      dup3\n        /* \"contracts/myContract.sol\":2169:2174  price */\n      dup3\n        /* \"contracts/myContract.sol\":2154:2162  _addItem */\n      tag_254\n        /* \"contracts/myContract.sol\":2154:2175  _addItem(name, price) */\n      jump\t// in\n    tag_253:\n        /* \"contracts/myContract.sol\":2068:2182  function addItemToStore(string memory name, uint256 price) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_256\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_258\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_259\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_259:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_258:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_260\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_188\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_260:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_264\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_266\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_267\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_267:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_268\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_271\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_274\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_275\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_277\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_278\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_279\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_280\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_281\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_279:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_282\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_264\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_284\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_285\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_286\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_287\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_288\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_288:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8336:8337  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8324  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_290\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_291\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_291:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_292\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_292:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/myContract.sol\":1278:1428  function _addItem(string memory name, uint256 price) internal {... */\n    tag_254:\n        /* \"contracts/myContract.sol\":1370:1399  Item(name, nextItemId, price) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/myContract.sol\":1375:1379  name */\n      dup4\n        /* \"contracts/myContract.sol\":1370:1399  Item(name, nextItemId, price) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/myContract.sol\":1381:1391  nextItemId */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/myContract.sol\":1370:1399  Item(name, nextItemId, price) */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/myContract.sol\":1393:1398  price */\n      dup3\n        /* \"contracts/myContract.sol\":1370:1399  Item(name, nextItemId, price) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/myContract.sol\":1350:1355  items */\n      0x06\n        /* \"contracts/myContract.sol\":1350:1367  items[nextItemId] */\n      0x00\n        /* \"contracts/myContract.sol\":1356:1366  nextItemId */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/myContract.sol\":1350:1367  items[nextItemId] */\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/myContract.sol\":1350:1399  items[nextItemId] = Item(name, nextItemId, price) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      swap1\n      dup2\n      tag_295\n      swap2\n      swap1\n      tag_296\n      jump\t// in\n    tag_295:\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/myContract.sol\":1409:1419  nextItemId */\n      0x08\n      0x00\n        /* \"contracts/myContract.sol\":1409:1421  nextItemId++ */\n      dup2\n      dup2\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_297\n      swap1\n      tag_298\n      jump\t// in\n    tag_297:\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/myContract.sol\":1278:1428  function _addItem(string memory name, uint256 price) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_300\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_301\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_300:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_302\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_303\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_303:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_302:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_304\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_305\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_305:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_304:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_307\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_308\n      swap2\n      swap1\n      tag_309\n      jump\t// in\n    tag_308:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_310)\n    tag_307:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_311\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_312\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_281\n      jump\t// in\n    tag_312:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_311:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_310:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_313\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_314)\n    tag_313:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_315\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_315:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_316:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_317:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_318:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_319:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_320:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_398\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_316\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":711:782   */\n      tag_399\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_317\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_400\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_318\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":881:910   */\n      tag_401\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_319\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_33:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_403\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_320\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1317   */\n    tag_321:\n        /* \"#utility.yul\":1275:1281   */\n      0x00\n        /* \"#utility.yul\":1308:1310   */\n      0x40\n        /* \"#utility.yul\":1302:1311   */\n      mload\n        /* \"#utility.yul\":1292:1311   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1317   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_322:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1446:1563   */\n    tag_323:\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1552:1553   */\n      dup1\n        /* \"#utility.yul\":1545:1557   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_324:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_325:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_409\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_324\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_326:\n        /* \"#utility.yul\":1876:1900   */\n      tag_411\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_325\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_412\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_412:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_327:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_414\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_326\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_328:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_329:\n        /* \"#utility.yul\":2232:2256   */\n      tag_417\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_328\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_418\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_418:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_330:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_420\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_329\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_36:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_423\n      tag_322\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":2525:2644   */\n    tag_422:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_424\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_327\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_425\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_330\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_331:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_332:\n        /* \"#utility.yul\":3089:3110   */\n      tag_428\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_331\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_39:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_430\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_332\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3455   */\n    tag_333:\n        /* \"#utility.yul\":3409:3430   */\n      tag_432\n        /* \"#utility.yul\":3424:3429   */\n      dup2\n        /* \"#utility.yul\":3409:3430   */\n      tag_331\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":3402:3407   */\n      dup2\n        /* \"#utility.yul\":3399:3431   */\n      eq\n        /* \"#utility.yul\":3389:3449   */\n      tag_433\n      jumpi\n        /* \"#utility.yul\":3445:3446   */\n      0x00\n        /* \"#utility.yul\":3442:3443   */\n      dup1\n        /* \"#utility.yul\":3435:3447   */\n      revert\n        /* \"#utility.yul\":3389:3449   */\n    tag_433:\n        /* \"#utility.yul\":3339:3455   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3461:3594   */\n    tag_334:\n        /* \"#utility.yul\":3504:3509   */\n      0x00\n        /* \"#utility.yul\":3542:3548   */\n      dup2\n        /* \"#utility.yul\":3529:3549   */\n      calldataload\n        /* \"#utility.yul\":3520:3549   */\n      swap1\n      pop\n        /* \"#utility.yul\":3558:3588   */\n      tag_435\n        /* \"#utility.yul\":3582:3587   */\n      dup2\n        /* \"#utility.yul\":3558:3588   */\n      tag_333\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":3461:3594   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3600:4068   */\n    tag_42:\n        /* \"#utility.yul\":3665:3671   */\n      0x00\n        /* \"#utility.yul\":3673:3679   */\n      dup1\n        /* \"#utility.yul\":3722:3724   */\n      0x40\n        /* \"#utility.yul\":3710:3719   */\n      dup4\n        /* \"#utility.yul\":3701:3708   */\n      dup6\n        /* \"#utility.yul\":3697:3720   */\n      sub\n        /* \"#utility.yul\":3693:3725   */\n      slt\n        /* \"#utility.yul\":3690:3809   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":3728:3807   */\n      tag_438\n      tag_322\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":3690:3809   */\n    tag_437:\n        /* \"#utility.yul\":3848:3849   */\n      0x00\n        /* \"#utility.yul\":3873:3923   */\n      tag_439\n        /* \"#utility.yul\":3915:3922   */\n      dup6\n        /* \"#utility.yul\":3906:3912   */\n      dup3\n        /* \"#utility.yul\":3895:3904   */\n      dup7\n        /* \"#utility.yul\":3891:3913   */\n      add\n        /* \"#utility.yul\":3873:3923   */\n      tag_334\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":3863:3923   */\n      swap3\n      pop\n        /* \"#utility.yul\":3819:3933   */\n      pop\n        /* \"#utility.yul\":3972:3974   */\n      0x20\n        /* \"#utility.yul\":3998:4051   */\n      tag_440\n        /* \"#utility.yul\":4043:4050   */\n      dup6\n        /* \"#utility.yul\":4034:4040   */\n      dup3\n        /* \"#utility.yul\":4023:4032   */\n      dup7\n        /* \"#utility.yul\":4019:4041   */\n      add\n        /* \"#utility.yul\":3998:4051   */\n      tag_330\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":3988:4051   */\n      swap2\n      pop\n        /* \"#utility.yul\":3943:4061   */\n      pop\n        /* \"#utility.yul\":3600:4068   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4074:4192   */\n    tag_335:\n        /* \"#utility.yul\":4161:4185   */\n      tag_442\n        /* \"#utility.yul\":4179:4184   */\n      dup2\n        /* \"#utility.yul\":4161:4185   */\n      tag_328\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":4156:4159   */\n      dup3\n        /* \"#utility.yul\":4149:4186   */\n      mstore\n        /* \"#utility.yul\":4074:4192   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4198:4420   */\n    tag_50:\n        /* \"#utility.yul\":4291:4295   */\n      0x00\n        /* \"#utility.yul\":4329:4331   */\n      0x20\n        /* \"#utility.yul\":4318:4327   */\n      dup3\n        /* \"#utility.yul\":4314:4332   */\n      add\n        /* \"#utility.yul\":4306:4332   */\n      swap1\n      pop\n        /* \"#utility.yul\":4342:4413   */\n      tag_444\n        /* \"#utility.yul\":4410:4411   */\n      0x00\n        /* \"#utility.yul\":4399:4408   */\n      dup4\n        /* \"#utility.yul\":4395:4412   */\n      add\n        /* \"#utility.yul\":4386:4392   */\n      dup5\n        /* \"#utility.yul\":4342:4413   */\n      tag_335\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":4198:4420   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4426:5045   */\n    tag_53:\n        /* \"#utility.yul\":4503:4509   */\n      0x00\n        /* \"#utility.yul\":4511:4517   */\n      dup1\n        /* \"#utility.yul\":4519:4525   */\n      0x00\n        /* \"#utility.yul\":4568:4570   */\n      0x60\n        /* \"#utility.yul\":4556:4565   */\n      dup5\n        /* \"#utility.yul\":4547:4554   */\n      dup7\n        /* \"#utility.yul\":4543:4566   */\n      sub\n        /* \"#utility.yul\":4539:4571   */\n      slt\n        /* \"#utility.yul\":4536:4655   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":4574:4653   */\n      tag_447\n      tag_322\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":4536:4655   */\n    tag_446:\n        /* \"#utility.yul\":4694:4695   */\n      0x00\n        /* \"#utility.yul\":4719:4772   */\n      tag_448\n        /* \"#utility.yul\":4764:4771   */\n      dup7\n        /* \"#utility.yul\":4755:4761   */\n      dup3\n        /* \"#utility.yul\":4744:4753   */\n      dup8\n        /* \"#utility.yul\":4740:4762   */\n      add\n        /* \"#utility.yul\":4719:4772   */\n      tag_327\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":4709:4772   */\n      swap4\n      pop\n        /* \"#utility.yul\":4665:4782   */\n      pop\n        /* \"#utility.yul\":4821:4823   */\n      0x20\n        /* \"#utility.yul\":4847:4900   */\n      tag_449\n        /* \"#utility.yul\":4892:4899   */\n      dup7\n        /* \"#utility.yul\":4883:4889   */\n      dup3\n        /* \"#utility.yul\":4872:4881   */\n      dup8\n        /* \"#utility.yul\":4868:4890   */\n      add\n        /* \"#utility.yul\":4847:4900   */\n      tag_327\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":4837:4900   */\n      swap3\n      pop\n        /* \"#utility.yul\":4792:4910   */\n      pop\n        /* \"#utility.yul\":4949:4951   */\n      0x40\n        /* \"#utility.yul\":4975:5028   */\n      tag_450\n        /* \"#utility.yul\":5020:5027   */\n      dup7\n        /* \"#utility.yul\":5011:5017   */\n      dup3\n        /* \"#utility.yul\":5000:5009   */\n      dup8\n        /* \"#utility.yul\":4996:5018   */\n      add\n        /* \"#utility.yul\":4975:5028   */\n      tag_330\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":4965:5028   */\n      swap2\n      pop\n        /* \"#utility.yul\":4920:5038   */\n      pop\n        /* \"#utility.yul\":4426:5045   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5051:5137   */\n    tag_336:\n        /* \"#utility.yul\":5086:5093   */\n      0x00\n        /* \"#utility.yul\":5126:5130   */\n      0xff\n        /* \"#utility.yul\":5119:5124   */\n      dup3\n        /* \"#utility.yul\":5115:5131   */\n      and\n        /* \"#utility.yul\":5104:5131   */\n      swap1\n      pop\n        /* \"#utility.yul\":5051:5137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5143:5255   */\n    tag_337:\n        /* \"#utility.yul\":5226:5248   */\n      tag_453\n        /* \"#utility.yul\":5242:5247   */\n      dup2\n        /* \"#utility.yul\":5226:5248   */\n      tag_336\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":5221:5224   */\n      dup3\n        /* \"#utility.yul\":5214:5249   */\n      mstore\n        /* \"#utility.yul\":5143:5255   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5261:5475   */\n    tag_59:\n        /* \"#utility.yul\":5350:5354   */\n      0x00\n        /* \"#utility.yul\":5388:5390   */\n      0x20\n        /* \"#utility.yul\":5377:5386   */\n      dup3\n        /* \"#utility.yul\":5373:5391   */\n      add\n        /* \"#utility.yul\":5365:5391   */\n      swap1\n      pop\n        /* \"#utility.yul\":5401:5468   */\n      tag_455\n        /* \"#utility.yul\":5465:5466   */\n      0x00\n        /* \"#utility.yul\":5454:5463   */\n      dup4\n        /* \"#utility.yul\":5450:5467   */\n      add\n        /* \"#utility.yul\":5441:5447   */\n      dup5\n        /* \"#utility.yul\":5401:5468   */\n      tag_337\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":5261:5475   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5481:5810   */\n    tag_65:\n        /* \"#utility.yul\":5540:5546   */\n      0x00\n        /* \"#utility.yul\":5589:5591   */\n      0x20\n        /* \"#utility.yul\":5577:5586   */\n      dup3\n        /* \"#utility.yul\":5568:5575   */\n      dup5\n        /* \"#utility.yul\":5564:5587   */\n      sub\n        /* \"#utility.yul\":5560:5592   */\n      slt\n        /* \"#utility.yul\":5557:5676   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":5595:5674   */\n      tag_458\n      tag_322\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":5557:5676   */\n    tag_457:\n        /* \"#utility.yul\":5715:5716   */\n      0x00\n        /* \"#utility.yul\":5740:5793   */\n      tag_459\n        /* \"#utility.yul\":5785:5792   */\n      dup5\n        /* \"#utility.yul\":5776:5782   */\n      dup3\n        /* \"#utility.yul\":5765:5774   */\n      dup6\n        /* \"#utility.yul\":5761:5783   */\n      add\n        /* \"#utility.yul\":5740:5793   */\n      tag_330\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":5730:5793   */\n      swap2\n      pop\n        /* \"#utility.yul\":5686:5803   */\n      pop\n        /* \"#utility.yul\":5481:5810   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5816:6145   */\n    tag_75:\n        /* \"#utility.yul\":5875:5881   */\n      0x00\n        /* \"#utility.yul\":5924:5926   */\n      0x20\n        /* \"#utility.yul\":5912:5921   */\n      dup3\n        /* \"#utility.yul\":5903:5910   */\n      dup5\n        /* \"#utility.yul\":5899:5922   */\n      sub\n        /* \"#utility.yul\":5895:5927   */\n      slt\n        /* \"#utility.yul\":5892:6011   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":5930:6009   */\n      tag_462\n      tag_322\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":5892:6011   */\n    tag_461:\n        /* \"#utility.yul\":6050:6051   */\n      0x00\n        /* \"#utility.yul\":6075:6128   */\n      tag_463\n        /* \"#utility.yul\":6120:6127   */\n      dup5\n        /* \"#utility.yul\":6111:6117   */\n      dup3\n        /* \"#utility.yul\":6100:6109   */\n      dup6\n        /* \"#utility.yul\":6096:6118   */\n      add\n        /* \"#utility.yul\":6075:6128   */\n      tag_327\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":6065:6128   */\n      swap2\n      pop\n        /* \"#utility.yul\":6021:6138   */\n      pop\n        /* \"#utility.yul\":5816:6145   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6151:6269   */\n    tag_338:\n        /* \"#utility.yul\":6238:6262   */\n      tag_465\n        /* \"#utility.yul\":6256:6261   */\n      dup2\n        /* \"#utility.yul\":6238:6262   */\n      tag_325\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":6233:6236   */\n      dup3\n        /* \"#utility.yul\":6226:6263   */\n      mstore\n        /* \"#utility.yul\":6151:6269   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6275:6497   */\n    tag_86:\n        /* \"#utility.yul\":6368:6372   */\n      0x00\n        /* \"#utility.yul\":6406:6408   */\n      0x20\n        /* \"#utility.yul\":6395:6404   */\n      dup3\n        /* \"#utility.yul\":6391:6409   */\n      add\n        /* \"#utility.yul\":6383:6409   */\n      swap1\n      pop\n        /* \"#utility.yul\":6419:6490   */\n      tag_467\n        /* \"#utility.yul\":6487:6488   */\n      0x00\n        /* \"#utility.yul\":6476:6485   */\n      dup4\n        /* \"#utility.yul\":6472:6489   */\n      add\n        /* \"#utility.yul\":6463:6469   */\n      dup5\n        /* \"#utility.yul\":6419:6490   */\n      tag_338\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":6275:6497   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6503:6621   */\n    tag_339:\n        /* \"#utility.yul\":6574:6596   */\n      tag_469\n        /* \"#utility.yul\":6590:6595   */\n      dup2\n        /* \"#utility.yul\":6574:6596   */\n      tag_336\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":6567:6572   */\n      dup2\n        /* \"#utility.yul\":6564:6597   */\n      eq\n        /* \"#utility.yul\":6554:6615   */\n      tag_470\n      jumpi\n        /* \"#utility.yul\":6611:6612   */\n      0x00\n        /* \"#utility.yul\":6608:6609   */\n      dup1\n        /* \"#utility.yul\":6601:6613   */\n      revert\n        /* \"#utility.yul\":6554:6615   */\n    tag_470:\n        /* \"#utility.yul\":6503:6621   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6627:6762   */\n    tag_340:\n        /* \"#utility.yul\":6671:6676   */\n      0x00\n        /* \"#utility.yul\":6709:6715   */\n      dup2\n        /* \"#utility.yul\":6696:6716   */\n      calldataload\n        /* \"#utility.yul\":6687:6716   */\n      swap1\n      pop\n        /* \"#utility.yul\":6725:6756   */\n      tag_472\n        /* \"#utility.yul\":6750:6755   */\n      dup2\n        /* \"#utility.yul\":6725:6756   */\n      tag_339\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":6627:6762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6768:7093   */\n    tag_96:\n        /* \"#utility.yul\":6825:6831   */\n      0x00\n        /* \"#utility.yul\":6874:6876   */\n      0x20\n        /* \"#utility.yul\":6862:6871   */\n      dup3\n        /* \"#utility.yul\":6853:6860   */\n      dup5\n        /* \"#utility.yul\":6849:6872   */\n      sub\n        /* \"#utility.yul\":6845:6877   */\n      slt\n        /* \"#utility.yul\":6842:6961   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":6880:6959   */\n      tag_475\n      tag_322\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":6842:6961   */\n    tag_474:\n        /* \"#utility.yul\":7000:7001   */\n      0x00\n        /* \"#utility.yul\":7025:7076   */\n      tag_476\n        /* \"#utility.yul\":7068:7075   */\n      dup5\n        /* \"#utility.yul\":7059:7065   */\n      dup3\n        /* \"#utility.yul\":7048:7057   */\n      dup6\n        /* \"#utility.yul\":7044:7066   */\n      add\n        /* \"#utility.yul\":7025:7076   */\n      tag_340\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":7015:7076   */\n      swap2\n      pop\n        /* \"#utility.yul\":6971:7086   */\n      pop\n        /* \"#utility.yul\":6768:7093   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7099:7211   */\n    tag_341:\n        /* \"#utility.yul\":7164:7170   */\n      0x00\n        /* \"#utility.yul\":7198:7203   */\n      dup2\n        /* \"#utility.yul\":7192:7204   */\n      mload\n        /* \"#utility.yul\":7182:7204   */\n      swap1\n      pop\n        /* \"#utility.yul\":7099:7211   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7217:7399   */\n    tag_342:\n        /* \"#utility.yul\":7314:7325   */\n      0x00\n        /* \"#utility.yul\":7348:7354   */\n      dup3\n        /* \"#utility.yul\":7343:7346   */\n      dup3\n        /* \"#utility.yul\":7336:7355   */\n      mstore\n        /* \"#utility.yul\":7388:7392   */\n      0x20\n        /* \"#utility.yul\":7383:7386   */\n      dup3\n        /* \"#utility.yul\":7379:7393   */\n      add\n        /* \"#utility.yul\":7364:7393   */\n      swap1\n      pop\n        /* \"#utility.yul\":7217:7399   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7405:7535   */\n    tag_343:\n        /* \"#utility.yul\":7470:7474   */\n      0x00\n        /* \"#utility.yul\":7493:7496   */\n      dup2\n        /* \"#utility.yul\":7485:7496   */\n      swap1\n      pop\n        /* \"#utility.yul\":7523:7527   */\n      0x20\n        /* \"#utility.yul\":7518:7521   */\n      dup3\n        /* \"#utility.yul\":7514:7528   */\n      add\n        /* \"#utility.yul\":7506:7528   */\n      swap1\n      pop\n        /* \"#utility.yul\":7405:7535   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7541:7643   */\n    tag_344:\n        /* \"#utility.yul\":7614:7636   */\n      tag_481\n        /* \"#utility.yul\":7630:7635   */\n      dup2\n        /* \"#utility.yul\":7614:7636   */\n      tag_336\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":7609:7612   */\n      dup3\n        /* \"#utility.yul\":7602:7637   */\n      mstore\n        /* \"#utility.yul\":7541:7643   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7649:7820   */\n    tag_345:\n        /* \"#utility.yul\":7714:7724   */\n      0x00\n        /* \"#utility.yul\":7735:7777   */\n      tag_483\n        /* \"#utility.yul\":7773:7776   */\n      dup4\n        /* \"#utility.yul\":7765:7771   */\n      dup4\n        /* \"#utility.yul\":7735:7777   */\n      tag_344\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":7809:7813   */\n      0x20\n        /* \"#utility.yul\":7804:7807   */\n      dup4\n        /* \"#utility.yul\":7800:7814   */\n      add\n        /* \"#utility.yul\":7786:7814   */\n      swap1\n      pop\n        /* \"#utility.yul\":7649:7820   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7826:7937   */\n    tag_346:\n        /* \"#utility.yul\":7894:7898   */\n      0x00\n        /* \"#utility.yul\":7926:7930   */\n      0x20\n        /* \"#utility.yul\":7921:7924   */\n      dup3\n        /* \"#utility.yul\":7917:7931   */\n      add\n        /* \"#utility.yul\":7909:7931   */\n      swap1\n      pop\n        /* \"#utility.yul\":7826:7937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7969:8685   */\n    tag_347:\n        /* \"#utility.yul\":8084:8087   */\n      0x00\n        /* \"#utility.yul\":8113:8165   */\n      tag_486\n        /* \"#utility.yul\":8159:8164   */\n      dup3\n        /* \"#utility.yul\":8113:8165   */\n      tag_341\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":8181:8265   */\n      tag_487\n        /* \"#utility.yul\":8258:8264   */\n      dup2\n        /* \"#utility.yul\":8253:8256   */\n      dup6\n        /* \"#utility.yul\":8181:8265   */\n      tag_342\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":8174:8265   */\n      swap4\n      pop\n        /* \"#utility.yul\":8289:8343   */\n      tag_488\n        /* \"#utility.yul\":8337:8342   */\n      dup4\n        /* \"#utility.yul\":8289:8343   */\n      tag_343\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":8366:8373   */\n      dup1\n        /* \"#utility.yul\":8397:8398   */\n      0x00\n        /* \"#utility.yul\":8382:8660   */\n    tag_489:\n        /* \"#utility.yul\":8407:8413   */\n      dup4\n        /* \"#utility.yul\":8404:8405   */\n      dup2\n        /* \"#utility.yul\":8401:8414   */\n      lt\n        /* \"#utility.yul\":8382:8660   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":8483:8489   */\n      dup2\n        /* \"#utility.yul\":8477:8490   */\n      mload\n        /* \"#utility.yul\":8510:8569   */\n      tag_492\n        /* \"#utility.yul\":8565:8568   */\n      dup9\n        /* \"#utility.yul\":8550:8563   */\n      dup3\n        /* \"#utility.yul\":8510:8569   */\n      tag_345\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":8503:8569   */\n      swap8\n      pop\n        /* \"#utility.yul\":8592:8650   */\n      tag_493\n        /* \"#utility.yul\":8643:8649   */\n      dup4\n        /* \"#utility.yul\":8592:8650   */\n      tag_346\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":8582:8650   */\n      swap3\n      pop\n        /* \"#utility.yul\":8442:8660   */\n      pop\n        /* \"#utility.yul\":8429:8430   */\n      0x01\n        /* \"#utility.yul\":8426:8427   */\n      dup2\n        /* \"#utility.yul\":8422:8431   */\n      add\n        /* \"#utility.yul\":8417:8431   */\n      swap1\n      pop\n        /* \"#utility.yul\":8382:8660   */\n      jump(tag_489)\n    tag_491:\n        /* \"#utility.yul\":8386:8400   */\n      pop\n        /* \"#utility.yul\":8676:8679   */\n      dup6\n        /* \"#utility.yul\":8669:8679   */\n      swap4\n      pop\n        /* \"#utility.yul\":8089:8685   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":7969:8685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8691:9056   */\n    tag_104:\n        /* \"#utility.yul\":8830:8834   */\n      0x00\n        /* \"#utility.yul\":8868:8870   */\n      0x20\n        /* \"#utility.yul\":8857:8866   */\n      dup3\n        /* \"#utility.yul\":8853:8871   */\n      add\n        /* \"#utility.yul\":8845:8871   */\n      swap1\n      pop\n        /* \"#utility.yul\":8917:8926   */\n      dup2\n        /* \"#utility.yul\":8911:8915   */\n      dup2\n        /* \"#utility.yul\":8907:8927   */\n      sub\n        /* \"#utility.yul\":8903:8904   */\n      0x00\n        /* \"#utility.yul\":8892:8901   */\n      dup4\n        /* \"#utility.yul\":8888:8905   */\n      add\n        /* \"#utility.yul\":8881:8928   */\n      mstore\n        /* \"#utility.yul\":8945:9049   */\n      tag_495\n        /* \"#utility.yul\":9044:9048   */\n      dup2\n        /* \"#utility.yul\":9035:9041   */\n      dup5\n        /* \"#utility.yul\":8945:9049   */\n      tag_347\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":8937:9049   */\n      swap1\n      pop\n        /* \"#utility.yul\":8691:9056   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9062:9485   */\n    tag_109:\n        /* \"#utility.yul\":9203:9207   */\n      0x00\n        /* \"#utility.yul\":9241:9243   */\n      0x40\n        /* \"#utility.yul\":9230:9239   */\n      dup3\n        /* \"#utility.yul\":9226:9244   */\n      add\n        /* \"#utility.yul\":9218:9244   */\n      swap1\n      pop\n        /* \"#utility.yul\":9290:9299   */\n      dup2\n        /* \"#utility.yul\":9284:9288   */\n      dup2\n        /* \"#utility.yul\":9280:9300   */\n      sub\n        /* \"#utility.yul\":9276:9277   */\n      0x00\n        /* \"#utility.yul\":9265:9274   */\n      dup4\n        /* \"#utility.yul\":9261:9278   */\n      add\n        /* \"#utility.yul\":9254:9301   */\n      mstore\n        /* \"#utility.yul\":9318:9396   */\n      tag_497\n        /* \"#utility.yul\":9391:9395   */\n      dup2\n        /* \"#utility.yul\":9382:9388   */\n      dup6\n        /* \"#utility.yul\":9318:9396   */\n      tag_320\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":9310:9396   */\n      swap1\n      pop\n        /* \"#utility.yul\":9406:9478   */\n      tag_498\n        /* \"#utility.yul\":9474:9476   */\n      0x20\n        /* \"#utility.yul\":9463:9472   */\n      dup4\n        /* \"#utility.yul\":9459:9477   */\n      add\n        /* \"#utility.yul\":9450:9456   */\n      dup5\n        /* \"#utility.yul\":9406:9478   */\n      tag_335\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":9062:9485   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9491:9965   */\n    tag_112:\n        /* \"#utility.yul\":9559:9565   */\n      0x00\n        /* \"#utility.yul\":9567:9573   */\n      dup1\n        /* \"#utility.yul\":9616:9618   */\n      0x40\n        /* \"#utility.yul\":9604:9613   */\n      dup4\n        /* \"#utility.yul\":9595:9602   */\n      dup6\n        /* \"#utility.yul\":9591:9614   */\n      sub\n        /* \"#utility.yul\":9587:9619   */\n      slt\n        /* \"#utility.yul\":9584:9703   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":9622:9701   */\n      tag_501\n      tag_322\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":9584:9703   */\n    tag_500:\n        /* \"#utility.yul\":9742:9743   */\n      0x00\n        /* \"#utility.yul\":9767:9820   */\n      tag_502\n        /* \"#utility.yul\":9812:9819   */\n      dup6\n        /* \"#utility.yul\":9803:9809   */\n      dup3\n        /* \"#utility.yul\":9792:9801   */\n      dup7\n        /* \"#utility.yul\":9788:9810   */\n      add\n        /* \"#utility.yul\":9767:9820   */\n      tag_327\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":9757:9820   */\n      swap3\n      pop\n        /* \"#utility.yul\":9713:9830   */\n      pop\n        /* \"#utility.yul\":9869:9871   */\n      0x20\n        /* \"#utility.yul\":9895:9948   */\n      tag_503\n        /* \"#utility.yul\":9940:9947   */\n      dup6\n        /* \"#utility.yul\":9931:9937   */\n      dup3\n        /* \"#utility.yul\":9920:9929   */\n      dup7\n        /* \"#utility.yul\":9916:9938   */\n      add\n        /* \"#utility.yul\":9895:9948   */\n      tag_327\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":9885:9948   */\n      swap2\n      pop\n        /* \"#utility.yul\":9840:9958   */\n      pop\n        /* \"#utility.yul\":9491:9965   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9971:10088   */\n    tag_348:\n        /* \"#utility.yul\":10080:10081   */\n      0x00\n        /* \"#utility.yul\":10077:10078   */\n      dup1\n        /* \"#utility.yul\":10070:10082   */\n      revert\n        /* \"#utility.yul\":10094:10211   */\n    tag_349:\n        /* \"#utility.yul\":10203:10204   */\n      0x00\n        /* \"#utility.yul\":10200:10201   */\n      dup1\n        /* \"#utility.yul\":10193:10205   */\n      revert\n        /* \"#utility.yul\":10217:10397   */\n    tag_233:\n        /* \"#utility.yul\":10265:10342   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10262:10263   */\n      0x00\n        /* \"#utility.yul\":10255:10343   */\n      mstore\n        /* \"#utility.yul\":10362:10366   */\n      0x41\n        /* \"#utility.yul\":10359:10360   */\n      0x04\n        /* \"#utility.yul\":10352:10367   */\n      mstore\n        /* \"#utility.yul\":10386:10390   */\n      0x24\n        /* \"#utility.yul\":10383:10384   */\n      0x00\n        /* \"#utility.yul\":10376:10391   */\n      revert\n        /* \"#utility.yul\":10403:10684   */\n    tag_350:\n        /* \"#utility.yul\":10486:10513   */\n      tag_508\n        /* \"#utility.yul\":10508:10512   */\n      dup3\n        /* \"#utility.yul\":10486:10513   */\n      tag_319\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":10478:10484   */\n      dup2\n        /* \"#utility.yul\":10474:10514   */\n      add\n        /* \"#utility.yul\":10616:10622   */\n      dup2\n        /* \"#utility.yul\":10604:10614   */\n      dup2\n        /* \"#utility.yul\":10601:10623   */\n      lt\n        /* \"#utility.yul\":10580:10598   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10568:10578   */\n      dup3\n        /* \"#utility.yul\":10565:10599   */\n      gt\n        /* \"#utility.yul\":10562:10624   */\n      or\n        /* \"#utility.yul\":10559:10647   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":10627:10645   */\n      tag_510\n      tag_233\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":10559:10647   */\n    tag_509:\n        /* \"#utility.yul\":10667:10677   */\n      dup1\n        /* \"#utility.yul\":10663:10665   */\n      0x40\n        /* \"#utility.yul\":10656:10678   */\n      mstore\n        /* \"#utility.yul\":10446:10684   */\n      pop\n        /* \"#utility.yul\":10403:10684   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10690:10819   */\n    tag_351:\n        /* \"#utility.yul\":10724:10730   */\n      0x00\n        /* \"#utility.yul\":10751:10771   */\n      tag_512\n      tag_321\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":10741:10771   */\n      swap1\n      pop\n        /* \"#utility.yul\":10780:10813   */\n      tag_513\n        /* \"#utility.yul\":10808:10812   */\n      dup3\n        /* \"#utility.yul\":10800:10806   */\n      dup3\n        /* \"#utility.yul\":10780:10813   */\n      tag_350\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":10690:10819   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10825:11133   */\n    tag_352:\n        /* \"#utility.yul\":10887:10891   */\n      0x00\n        /* \"#utility.yul\":10977:10995   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10969:10975   */\n      dup3\n        /* \"#utility.yul\":10966:10996   */\n      gt\n        /* \"#utility.yul\":10963:11019   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":10999:11017   */\n      tag_516\n      tag_233\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":10963:11019   */\n    tag_515:\n        /* \"#utility.yul\":11037:11066   */\n      tag_517\n        /* \"#utility.yul\":11059:11065   */\n      dup3\n        /* \"#utility.yul\":11037:11066   */\n      tag_319\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":11029:11066   */\n      swap1\n      pop\n        /* \"#utility.yul\":11121:11125   */\n      0x20\n        /* \"#utility.yul\":11115:11119   */\n      dup2\n        /* \"#utility.yul\":11111:11126   */\n      add\n        /* \"#utility.yul\":11103:11126   */\n      swap1\n      pop\n        /* \"#utility.yul\":10825:11133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11139:11287   */\n    tag_353:\n        /* \"#utility.yul\":11237:11243   */\n      dup3\n        /* \"#utility.yul\":11232:11235   */\n      dup2\n        /* \"#utility.yul\":11227:11230   */\n      dup4\n        /* \"#utility.yul\":11214:11244   */\n      calldatacopy\n        /* \"#utility.yul\":11278:11279   */\n      0x00\n        /* \"#utility.yul\":11269:11275   */\n      dup4\n        /* \"#utility.yul\":11264:11267   */\n      dup4\n        /* \"#utility.yul\":11260:11276   */\n      add\n        /* \"#utility.yul\":11253:11280   */\n      mstore\n        /* \"#utility.yul\":11139:11287   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11293:11718   */\n    tag_354:\n        /* \"#utility.yul\":11371:11376   */\n      0x00\n        /* \"#utility.yul\":11396:11462   */\n      tag_520\n        /* \"#utility.yul\":11412:11461   */\n      tag_521\n        /* \"#utility.yul\":11454:11460   */\n      dup5\n        /* \"#utility.yul\":11412:11461   */\n      tag_352\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":11396:11462   */\n      tag_351\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":11387:11462   */\n      swap1\n      pop\n        /* \"#utility.yul\":11485:11491   */\n      dup3\n        /* \"#utility.yul\":11478:11483   */\n      dup2\n        /* \"#utility.yul\":11471:11492   */\n      mstore\n        /* \"#utility.yul\":11523:11527   */\n      0x20\n        /* \"#utility.yul\":11516:11521   */\n      dup2\n        /* \"#utility.yul\":11512:11528   */\n      add\n        /* \"#utility.yul\":11561:11564   */\n      dup5\n        /* \"#utility.yul\":11552:11558   */\n      dup5\n        /* \"#utility.yul\":11547:11550   */\n      dup5\n        /* \"#utility.yul\":11543:11559   */\n      add\n        /* \"#utility.yul\":11540:11565   */\n      gt\n        /* \"#utility.yul\":11537:11649   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":11568:11647   */\n      tag_523\n      tag_349\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":11537:11649   */\n    tag_522:\n        /* \"#utility.yul\":11658:11712   */\n      tag_524\n        /* \"#utility.yul\":11705:11711   */\n      dup5\n        /* \"#utility.yul\":11700:11703   */\n      dup3\n        /* \"#utility.yul\":11695:11698   */\n      dup6\n        /* \"#utility.yul\":11658:11712   */\n      tag_353\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":11377:11718   */\n      pop\n        /* \"#utility.yul\":11293:11718   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11738:12078   */\n    tag_355:\n        /* \"#utility.yul\":11794:11799   */\n      0x00\n        /* \"#utility.yul\":11843:11846   */\n      dup3\n        /* \"#utility.yul\":11836:11840   */\n      0x1f\n        /* \"#utility.yul\":11828:11834   */\n      dup4\n        /* \"#utility.yul\":11824:11841   */\n      add\n        /* \"#utility.yul\":11820:11847   */\n      slt\n        /* \"#utility.yul\":11810:11932   */\n      tag_526\n      jumpi\n        /* \"#utility.yul\":11851:11930   */\n      tag_527\n      tag_348\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":11810:11932   */\n    tag_526:\n        /* \"#utility.yul\":11968:11974   */\n      dup2\n        /* \"#utility.yul\":11955:11975   */\n      calldataload\n        /* \"#utility.yul\":11993:12072   */\n      tag_528\n        /* \"#utility.yul\":12068:12071   */\n      dup5\n        /* \"#utility.yul\":12060:12066   */\n      dup3\n        /* \"#utility.yul\":12053:12057   */\n      0x20\n        /* \"#utility.yul\":12045:12051   */\n      dup7\n        /* \"#utility.yul\":12041:12058   */\n      add\n        /* \"#utility.yul\":11993:12072   */\n      tag_354\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":11984:12072   */\n      swap2\n      pop\n        /* \"#utility.yul\":11800:12078   */\n      pop\n        /* \"#utility.yul\":11738:12078   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12084:12738   */\n    tag_117:\n        /* \"#utility.yul\":12162:12168   */\n      0x00\n        /* \"#utility.yul\":12170:12176   */\n      dup1\n        /* \"#utility.yul\":12219:12221   */\n      0x40\n        /* \"#utility.yul\":12207:12216   */\n      dup4\n        /* \"#utility.yul\":12198:12205   */\n      dup6\n        /* \"#utility.yul\":12194:12217   */\n      sub\n        /* \"#utility.yul\":12190:12222   */\n      slt\n        /* \"#utility.yul\":12187:12306   */\n      iszero\n      tag_530\n      jumpi\n        /* \"#utility.yul\":12225:12304   */\n      tag_531\n      tag_322\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":12187:12306   */\n    tag_530:\n        /* \"#utility.yul\":12373:12374   */\n      0x00\n        /* \"#utility.yul\":12362:12371   */\n      dup4\n        /* \"#utility.yul\":12358:12375   */\n      add\n        /* \"#utility.yul\":12345:12376   */\n      calldataload\n        /* \"#utility.yul\":12403:12421   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12395:12401   */\n      dup2\n        /* \"#utility.yul\":12392:12422   */\n      gt\n        /* \"#utility.yul\":12389:12506   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":12425:12504   */\n      tag_533\n      tag_323\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":12389:12506   */\n    tag_532:\n        /* \"#utility.yul\":12530:12593   */\n      tag_534\n        /* \"#utility.yul\":12585:12592   */\n      dup6\n        /* \"#utility.yul\":12576:12582   */\n      dup3\n        /* \"#utility.yul\":12565:12574   */\n      dup7\n        /* \"#utility.yul\":12561:12583   */\n      add\n        /* \"#utility.yul\":12530:12593   */\n      tag_355\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":12520:12593   */\n      swap3\n      pop\n        /* \"#utility.yul\":12316:12603   */\n      pop\n        /* \"#utility.yul\":12642:12644   */\n      0x20\n        /* \"#utility.yul\":12668:12721   */\n      tag_535\n        /* \"#utility.yul\":12713:12720   */\n      dup6\n        /* \"#utility.yul\":12704:12710   */\n      dup3\n        /* \"#utility.yul\":12693:12702   */\n      dup7\n        /* \"#utility.yul\":12689:12711   */\n      add\n        /* \"#utility.yul\":12668:12721   */\n      tag_330\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":12658:12721   */\n      swap2\n      pop\n        /* \"#utility.yul\":12613:12731   */\n      pop\n        /* \"#utility.yul\":12084:12738   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12744:12924   */\n    tag_356:\n        /* \"#utility.yul\":12792:12869   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12789:12790   */\n      0x00\n        /* \"#utility.yul\":12782:12870   */\n      mstore\n        /* \"#utility.yul\":12889:12893   */\n      0x22\n        /* \"#utility.yul\":12886:12887   */\n      0x04\n        /* \"#utility.yul\":12879:12894   */\n      mstore\n        /* \"#utility.yul\":12913:12917   */\n      0x24\n        /* \"#utility.yul\":12910:12911   */\n      0x00\n        /* \"#utility.yul\":12903:12918   */\n      revert\n        /* \"#utility.yul\":12930:13250   */\n    tag_124:\n        /* \"#utility.yul\":12974:12980   */\n      0x00\n        /* \"#utility.yul\":13011:13012   */\n      0x02\n        /* \"#utility.yul\":13005:13009   */\n      dup3\n        /* \"#utility.yul\":13001:13013   */\n      div\n        /* \"#utility.yul\":12991:13013   */\n      swap1\n      pop\n        /* \"#utility.yul\":13058:13059   */\n      0x01\n        /* \"#utility.yul\":13052:13056   */\n      dup3\n        /* \"#utility.yul\":13048:13060   */\n      and\n        /* \"#utility.yul\":13079:13097   */\n      dup1\n        /* \"#utility.yul\":13069:13150   */\n      tag_538\n      jumpi\n        /* \"#utility.yul\":13135:13139   */\n      0x7f\n        /* \"#utility.yul\":13127:13133   */\n      dup3\n        /* \"#utility.yul\":13123:13140   */\n      and\n        /* \"#utility.yul\":13113:13140   */\n      swap2\n      pop\n        /* \"#utility.yul\":13069:13150   */\n    tag_538:\n        /* \"#utility.yul\":13197:13199   */\n      0x20\n        /* \"#utility.yul\":13189:13195   */\n      dup3\n        /* \"#utility.yul\":13186:13200   */\n      lt\n        /* \"#utility.yul\":13166:13184   */\n      dup2\n        /* \"#utility.yul\":13163:13201   */\n      sub\n        /* \"#utility.yul\":13160:13244   */\n      tag_539\n      jumpi\n        /* \"#utility.yul\":13216:13234   */\n      tag_540\n      tag_356\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":13160:13244   */\n    tag_539:\n        /* \"#utility.yul\":12981:13250   */\n      pop\n        /* \"#utility.yul\":12930:13250   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13256:13426   */\n    tag_357:\n        /* \"#utility.yul\":13396:13418   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":13392:13393   */\n      0x00\n        /* \"#utility.yul\":13384:13390   */\n      dup3\n        /* \"#utility.yul\":13380:13394   */\n      add\n        /* \"#utility.yul\":13373:13419   */\n      mstore\n        /* \"#utility.yul\":13256:13426   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13432:13798   */\n    tag_358:\n        /* \"#utility.yul\":13574:13577   */\n      0x00\n        /* \"#utility.yul\":13595:13662   */\n      tag_543\n        /* \"#utility.yul\":13659:13661   */\n      0x14\n        /* \"#utility.yul\":13654:13657   */\n      dup4\n        /* \"#utility.yul\":13595:13662   */\n      tag_317\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":13588:13662   */\n      swap2\n      pop\n        /* \"#utility.yul\":13671:13764   */\n      tag_544\n        /* \"#utility.yul\":13760:13763   */\n      dup3\n        /* \"#utility.yul\":13671:13764   */\n      tag_357\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":13789:13791   */\n      0x20\n        /* \"#utility.yul\":13784:13787   */\n      dup3\n        /* \"#utility.yul\":13780:13792   */\n      add\n        /* \"#utility.yul\":13773:13792   */\n      swap1\n      pop\n        /* \"#utility.yul\":13432:13798   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13804:14223   */\n    tag_138:\n        /* \"#utility.yul\":13970:13974   */\n      0x00\n        /* \"#utility.yul\":14008:14010   */\n      0x20\n        /* \"#utility.yul\":13997:14006   */\n      dup3\n        /* \"#utility.yul\":13993:14011   */\n      add\n        /* \"#utility.yul\":13985:14011   */\n      swap1\n      pop\n        /* \"#utility.yul\":14057:14066   */\n      dup2\n        /* \"#utility.yul\":14051:14055   */\n      dup2\n        /* \"#utility.yul\":14047:14067   */\n      sub\n        /* \"#utility.yul\":14043:14044   */\n      0x00\n        /* \"#utility.yul\":14032:14041   */\n      dup4\n        /* \"#utility.yul\":14028:14045   */\n      add\n        /* \"#utility.yul\":14021:14068   */\n      mstore\n        /* \"#utility.yul\":14085:14216   */\n      tag_546\n        /* \"#utility.yul\":14211:14215   */\n      dup2\n        /* \"#utility.yul\":14085:14216   */\n      tag_358\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":14077:14216   */\n      swap1\n      pop\n        /* \"#utility.yul\":13804:14223   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14229:14308   */\n    tag_359:\n        /* \"#utility.yul\":14268:14275   */\n      0x00\n        /* \"#utility.yul\":14297:14302   */\n      dup2\n        /* \"#utility.yul\":14286:14302   */\n      swap1\n      pop\n        /* \"#utility.yul\":14229:14308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14314:14471   */\n    tag_360:\n        /* \"#utility.yul\":14419:14464   */\n      tag_549\n        /* \"#utility.yul\":14439:14463   */\n      tag_550\n        /* \"#utility.yul\":14457:14462   */\n      dup3\n        /* \"#utility.yul\":14439:14463   */\n      tag_328\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":14419:14464   */\n      tag_359\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":14414:14417   */\n      dup3\n        /* \"#utility.yul\":14407:14465   */\n      mstore\n        /* \"#utility.yul\":14314:14471   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14477:14571   */\n    tag_361:\n        /* \"#utility.yul\":14510:14518   */\n      0x00\n        /* \"#utility.yul\":14558:14563   */\n      dup2\n        /* \"#utility.yul\":14554:14556   */\n      0x60\n        /* \"#utility.yul\":14550:14564   */\n      shl\n        /* \"#utility.yul\":14529:14564   */\n      swap1\n      pop\n        /* \"#utility.yul\":14477:14571   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14577:14671   */\n    tag_362:\n        /* \"#utility.yul\":14616:14623   */\n      0x00\n        /* \"#utility.yul\":14645:14665   */\n      tag_553\n        /* \"#utility.yul\":14659:14664   */\n      dup3\n        /* \"#utility.yul\":14645:14665   */\n      tag_361\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":14634:14665   */\n      swap1\n      pop\n        /* \"#utility.yul\":14577:14671   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14677:14777   */\n    tag_363:\n        /* \"#utility.yul\":14716:14723   */\n      0x00\n        /* \"#utility.yul\":14745:14771   */\n      tag_555\n        /* \"#utility.yul\":14765:14770   */\n      dup3\n        /* \"#utility.yul\":14745:14771   */\n      tag_362\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":14734:14771   */\n      swap1\n      pop\n        /* \"#utility.yul\":14677:14777   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14783:14940   */\n    tag_364:\n        /* \"#utility.yul\":14888:14933   */\n      tag_557\n        /* \"#utility.yul\":14908:14932   */\n      tag_558\n        /* \"#utility.yul\":14926:14931   */\n      dup3\n        /* \"#utility.yul\":14908:14932   */\n      tag_325\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":14888:14933   */\n      tag_363\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":14883:14886   */\n      dup3\n        /* \"#utility.yul\":14876:14934   */\n      mstore\n        /* \"#utility.yul\":14783:14940   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14946:15343   */\n    tag_140:\n        /* \"#utility.yul\":15086:15089   */\n      0x00\n        /* \"#utility.yul\":15101:15176   */\n      tag_560\n        /* \"#utility.yul\":15172:15175   */\n      dup3\n        /* \"#utility.yul\":15163:15169   */\n      dup6\n        /* \"#utility.yul\":15101:15176   */\n      tag_360\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":15201:15203   */\n      0x20\n        /* \"#utility.yul\":15196:15199   */\n      dup3\n        /* \"#utility.yul\":15192:15204   */\n      add\n        /* \"#utility.yul\":15185:15204   */\n      swap2\n      pop\n        /* \"#utility.yul\":15214:15289   */\n      tag_561\n        /* \"#utility.yul\":15285:15288   */\n      dup3\n        /* \"#utility.yul\":15276:15282   */\n      dup5\n        /* \"#utility.yul\":15214:15289   */\n      tag_364\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":15314:15316   */\n      0x14\n        /* \"#utility.yul\":15309:15312   */\n      dup3\n        /* \"#utility.yul\":15305:15317   */\n      add\n        /* \"#utility.yul\":15298:15317   */\n      swap2\n      pop\n        /* \"#utility.yul\":15334:15337   */\n      dup2\n        /* \"#utility.yul\":15327:15337   */\n      swap1\n      pop\n        /* \"#utility.yul\":14946:15343   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15349:15529   */\n    tag_365:\n        /* \"#utility.yul\":15397:15474   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15394:15395   */\n      0x00\n        /* \"#utility.yul\":15387:15475   */\n      mstore\n        /* \"#utility.yul\":15494:15498   */\n      0x12\n        /* \"#utility.yul\":15491:15492   */\n      0x04\n        /* \"#utility.yul\":15484:15499   */\n      mstore\n        /* \"#utility.yul\":15518:15522   */\n      0x24\n        /* \"#utility.yul\":15515:15516   */\n      0x00\n        /* \"#utility.yul\":15508:15523   */\n      revert\n        /* \"#utility.yul\":15535:15711   */\n    tag_142:\n        /* \"#utility.yul\":15567:15568   */\n      0x00\n        /* \"#utility.yul\":15584:15604   */\n      tag_564\n        /* \"#utility.yul\":15602:15603   */\n      dup3\n        /* \"#utility.yul\":15584:15604   */\n      tag_328\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":15579:15604   */\n      swap2\n      pop\n        /* \"#utility.yul\":15618:15638   */\n      tag_565\n        /* \"#utility.yul\":15636:15637   */\n      dup4\n        /* \"#utility.yul\":15618:15638   */\n      tag_328\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":15613:15638   */\n      swap3\n      pop\n        /* \"#utility.yul\":15657:15658   */\n      dup3\n        /* \"#utility.yul\":15647:15682   */\n      tag_566\n      jumpi\n        /* \"#utility.yul\":15662:15680   */\n      tag_567\n      tag_365\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":15647:15682   */\n    tag_566:\n        /* \"#utility.yul\":15703:15704   */\n      dup3\n        /* \"#utility.yul\":15700:15701   */\n      dup3\n        /* \"#utility.yul\":15696:15705   */\n      mod\n        /* \"#utility.yul\":15691:15705   */\n      swap1\n      pop\n        /* \"#utility.yul\":15535:15711   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15717:15897   */\n    tag_366:\n        /* \"#utility.yul\":15765:15842   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15762:15763   */\n      0x00\n        /* \"#utility.yul\":15755:15843   */\n      mstore\n        /* \"#utility.yul\":15862:15866   */\n      0x11\n        /* \"#utility.yul\":15859:15860   */\n      0x04\n        /* \"#utility.yul\":15852:15867   */\n      mstore\n        /* \"#utility.yul\":15886:15890   */\n      0x24\n        /* \"#utility.yul\":15883:15884   */\n      0x00\n        /* \"#utility.yul\":15876:15891   */\n      revert\n        /* \"#utility.yul\":15903:16313   */\n    tag_146:\n        /* \"#utility.yul\":15943:15950   */\n      0x00\n        /* \"#utility.yul\":15966:15986   */\n      tag_570\n        /* \"#utility.yul\":15984:15985   */\n      dup3\n        /* \"#utility.yul\":15966:15986   */\n      tag_328\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":15961:15986   */\n      swap2\n      pop\n        /* \"#utility.yul\":16000:16020   */\n      tag_571\n        /* \"#utility.yul\":16018:16019   */\n      dup4\n        /* \"#utility.yul\":16000:16020   */\n      tag_328\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":15995:16020   */\n      swap3\n      pop\n        /* \"#utility.yul\":16055:16056   */\n      dup3\n        /* \"#utility.yul\":16052:16053   */\n      dup3\n        /* \"#utility.yul\":16048:16057   */\n      mul\n        /* \"#utility.yul\":16077:16107   */\n      tag_572\n        /* \"#utility.yul\":16095:16106   */\n      dup2\n        /* \"#utility.yul\":16077:16107   */\n      tag_328\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":16066:16107   */\n      swap2\n      pop\n        /* \"#utility.yul\":16256:16257   */\n      dup3\n        /* \"#utility.yul\":16247:16254   */\n      dup3\n        /* \"#utility.yul\":16243:16258   */\n      div\n        /* \"#utility.yul\":16240:16241   */\n      dup5\n        /* \"#utility.yul\":16237:16259   */\n      eq\n        /* \"#utility.yul\":16217:16218   */\n      dup4\n        /* \"#utility.yul\":16210:16219   */\n      iszero\n        /* \"#utility.yul\":16190:16273   */\n      or\n        /* \"#utility.yul\":16167:16306   */\n      tag_573\n      jumpi\n        /* \"#utility.yul\":16286:16304   */\n      tag_574\n      tag_366\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":16167:16306   */\n    tag_573:\n        /* \"#utility.yul\":15951:16313   */\n      pop\n        /* \"#utility.yul\":15903:16313   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16319:16477   */\n    tag_367:\n        /* \"#utility.yul\":16459:16469   */\n      0x596f7520776f6e21000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16455:16456   */\n      0x00\n        /* \"#utility.yul\":16447:16453   */\n      dup3\n        /* \"#utility.yul\":16443:16457   */\n      add\n        /* \"#utility.yul\":16436:16470   */\n      mstore\n        /* \"#utility.yul\":16319:16477   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16483:16848   */\n    tag_368:\n        /* \"#utility.yul\":16625:16628   */\n      0x00\n        /* \"#utility.yul\":16646:16712   */\n      tag_577\n        /* \"#utility.yul\":16710:16711   */\n      0x08\n        /* \"#utility.yul\":16705:16708   */\n      dup4\n        /* \"#utility.yul\":16646:16712   */\n      tag_317\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":16639:16712   */\n      swap2\n      pop\n        /* \"#utility.yul\":16721:16814   */\n      tag_578\n        /* \"#utility.yul\":16810:16813   */\n      dup3\n        /* \"#utility.yul\":16721:16814   */\n      tag_367\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":16839:16841   */\n      0x20\n        /* \"#utility.yul\":16834:16837   */\n      dup3\n        /* \"#utility.yul\":16830:16842   */\n      add\n        /* \"#utility.yul\":16823:16842   */\n      swap1\n      pop\n        /* \"#utility.yul\":16483:16848   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16854:17481   */\n    tag_149:\n        /* \"#utility.yul\":17070:17074   */\n      0x00\n        /* \"#utility.yul\":17108:17110   */\n      0x60\n        /* \"#utility.yul\":17097:17106   */\n      dup3\n        /* \"#utility.yul\":17093:17111   */\n      add\n        /* \"#utility.yul\":17085:17111   */\n      swap1\n      pop\n        /* \"#utility.yul\":17121:17192   */\n      tag_580\n        /* \"#utility.yul\":17189:17190   */\n      0x00\n        /* \"#utility.yul\":17178:17187   */\n      dup4\n        /* \"#utility.yul\":17174:17191   */\n      add\n        /* \"#utility.yul\":17165:17171   */\n      dup6\n        /* \"#utility.yul\":17121:17192   */\n      tag_335\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":17202:17268   */\n      tag_581\n        /* \"#utility.yul\":17264:17266   */\n      0x20\n        /* \"#utility.yul\":17253:17262   */\n      dup4\n        /* \"#utility.yul\":17249:17267   */\n      add\n        /* \"#utility.yul\":17240:17246   */\n      dup5\n        /* \"#utility.yul\":17202:17268   */\n      tag_332\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":17315:17324   */\n      dup2\n        /* \"#utility.yul\":17309:17313   */\n      dup2\n        /* \"#utility.yul\":17305:17325   */\n      sub\n        /* \"#utility.yul\":17300:17302   */\n      0x40\n        /* \"#utility.yul\":17289:17298   */\n      dup4\n        /* \"#utility.yul\":17285:17303   */\n      add\n        /* \"#utility.yul\":17278:17326   */\n      mstore\n        /* \"#utility.yul\":17343:17474   */\n      tag_582\n        /* \"#utility.yul\":17469:17473   */\n      dup2\n        /* \"#utility.yul\":17343:17474   */\n      tag_368\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":17335:17474   */\n      swap1\n      pop\n        /* \"#utility.yul\":16854:17481   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17487:17646   */\n    tag_369:\n        /* \"#utility.yul\":17627:17638   */\n      0x596f75206c6f7374210000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17623:17624   */\n      0x00\n        /* \"#utility.yul\":17615:17621   */\n      dup3\n        /* \"#utility.yul\":17611:17625   */\n      add\n        /* \"#utility.yul\":17604:17639   */\n      mstore\n        /* \"#utility.yul\":17487:17646   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17652:18017   */\n    tag_370:\n        /* \"#utility.yul\":17794:17797   */\n      0x00\n        /* \"#utility.yul\":17815:17881   */\n      tag_585\n        /* \"#utility.yul\":17879:17880   */\n      0x09\n        /* \"#utility.yul\":17874:17877   */\n      dup4\n        /* \"#utility.yul\":17815:17881   */\n      tag_317\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":17808:17881   */\n      swap2\n      pop\n        /* \"#utility.yul\":17890:17983   */\n      tag_586\n        /* \"#utility.yul\":17979:17982   */\n      dup3\n        /* \"#utility.yul\":17890:17983   */\n      tag_369\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":18008:18010   */\n      0x20\n        /* \"#utility.yul\":18003:18006   */\n      dup3\n        /* \"#utility.yul\":17999:18011   */\n      add\n        /* \"#utility.yul\":17992:18011   */\n      swap1\n      pop\n        /* \"#utility.yul\":17652:18017   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18023:18650   */\n    tag_153:\n        /* \"#utility.yul\":18239:18243   */\n      0x00\n        /* \"#utility.yul\":18277:18279   */\n      0x60\n        /* \"#utility.yul\":18266:18275   */\n      dup3\n        /* \"#utility.yul\":18262:18280   */\n      add\n        /* \"#utility.yul\":18254:18280   */\n      swap1\n      pop\n        /* \"#utility.yul\":18290:18361   */\n      tag_588\n        /* \"#utility.yul\":18358:18359   */\n      0x00\n        /* \"#utility.yul\":18347:18356   */\n      dup4\n        /* \"#utility.yul\":18343:18360   */\n      add\n        /* \"#utility.yul\":18334:18340   */\n      dup6\n        /* \"#utility.yul\":18290:18361   */\n      tag_335\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":18371:18437   */\n      tag_589\n        /* \"#utility.yul\":18433:18435   */\n      0x20\n        /* \"#utility.yul\":18422:18431   */\n      dup4\n        /* \"#utility.yul\":18418:18436   */\n      add\n        /* \"#utility.yul\":18409:18415   */\n      dup5\n        /* \"#utility.yul\":18371:18437   */\n      tag_332\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":18484:18493   */\n      dup2\n        /* \"#utility.yul\":18478:18482   */\n      dup2\n        /* \"#utility.yul\":18474:18494   */\n      sub\n        /* \"#utility.yul\":18469:18471   */\n      0x40\n        /* \"#utility.yul\":18458:18467   */\n      dup4\n        /* \"#utility.yul\":18454:18472   */\n      add\n        /* \"#utility.yul\":18447:18495   */\n      mstore\n        /* \"#utility.yul\":18512:18643   */\n      tag_590\n        /* \"#utility.yul\":18638:18642   */\n      dup2\n        /* \"#utility.yul\":18512:18643   */\n      tag_370\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":18504:18643   */\n      swap1\n      pop\n        /* \"#utility.yul\":18023:18650   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18656:18820   */\n    tag_371:\n        /* \"#utility.yul\":18796:18812   */\n      0x4974656d206e6f7420666f756e64000000000000000000000000000000000000\n        /* \"#utility.yul\":18792:18793   */\n      0x00\n        /* \"#utility.yul\":18784:18790   */\n      dup3\n        /* \"#utility.yul\":18780:18794   */\n      add\n        /* \"#utility.yul\":18773:18813   */\n      mstore\n        /* \"#utility.yul\":18656:18820   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18826:19192   */\n    tag_372:\n        /* \"#utility.yul\":18968:18971   */\n      0x00\n        /* \"#utility.yul\":18989:19056   */\n      tag_593\n        /* \"#utility.yul\":19053:19055   */\n      0x0e\n        /* \"#utility.yul\":19048:19051   */\n      dup4\n        /* \"#utility.yul\":18989:19056   */\n      tag_317\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":18982:19056   */\n      swap2\n      pop\n        /* \"#utility.yul\":19065:19158   */\n      tag_594\n        /* \"#utility.yul\":19154:19157   */\n      dup3\n        /* \"#utility.yul\":19065:19158   */\n      tag_371\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":19183:19185   */\n      0x20\n        /* \"#utility.yul\":19178:19181   */\n      dup3\n        /* \"#utility.yul\":19174:19186   */\n      add\n        /* \"#utility.yul\":19167:19186   */\n      swap1\n      pop\n        /* \"#utility.yul\":18826:19192   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19198:19617   */\n    tag_206:\n        /* \"#utility.yul\":19364:19368   */\n      0x00\n        /* \"#utility.yul\":19402:19404   */\n      0x20\n        /* \"#utility.yul\":19391:19400   */\n      dup3\n        /* \"#utility.yul\":19387:19405   */\n      add\n        /* \"#utility.yul\":19379:19405   */\n      swap1\n      pop\n        /* \"#utility.yul\":19451:19460   */\n      dup2\n        /* \"#utility.yul\":19445:19449   */\n      dup2\n        /* \"#utility.yul\":19441:19461   */\n      sub\n        /* \"#utility.yul\":19437:19438   */\n      0x00\n        /* \"#utility.yul\":19426:19435   */\n      dup4\n        /* \"#utility.yul\":19422:19439   */\n      add\n        /* \"#utility.yul\":19415:19462   */\n      mstore\n        /* \"#utility.yul\":19479:19610   */\n      tag_596\n        /* \"#utility.yul\":19605:19609   */\n      dup2\n        /* \"#utility.yul\":19479:19610   */\n      tag_372\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":19471:19610   */\n      swap1\n      pop\n        /* \"#utility.yul\":19198:19617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19623:19772   */\n    tag_373:\n        /* \"#utility.yul\":19672:19678   */\n      0x00\n        /* \"#utility.yul\":19706:19711   */\n      dup2\n        /* \"#utility.yul\":19700:19712   */\n      sload\n        /* \"#utility.yul\":19690:19712   */\n      swap1\n      pop\n        /* \"#utility.yul\":19732:19765   */\n      tag_598\n        /* \"#utility.yul\":19758:19764   */\n      dup2\n        /* \"#utility.yul\":19732:19765   */\n      tag_124\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":19722:19765   */\n      swap1\n      pop\n        /* \"#utility.yul\":19623:19772   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19778:19919   */\n    tag_374:\n        /* \"#utility.yul\":19827:19831   */\n      0x00\n        /* \"#utility.yul\":19850:19853   */\n      dup2\n        /* \"#utility.yul\":19842:19853   */\n      swap1\n      pop\n        /* \"#utility.yul\":19873:19876   */\n      dup2\n        /* \"#utility.yul\":19870:19871   */\n      0x00\n        /* \"#utility.yul\":19863:19877   */\n      mstore\n        /* \"#utility.yul\":19907:19911   */\n      0x20\n        /* \"#utility.yul\":19904:19905   */\n      0x00\n        /* \"#utility.yul\":19894:19912   */\n      keccak256\n        /* \"#utility.yul\":19886:19912   */\n      swap1\n      pop\n        /* \"#utility.yul\":19778:19919   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19925:20018   */\n    tag_375:\n        /* \"#utility.yul\":19962:19968   */\n      0x00\n        /* \"#utility.yul\":20009:20011   */\n      0x20\n        /* \"#utility.yul\":20004:20006   */\n      0x1f\n        /* \"#utility.yul\":19997:20002   */\n      dup4\n        /* \"#utility.yul\":19993:20007   */\n      add\n        /* \"#utility.yul\":19989:20012   */\n      div\n        /* \"#utility.yul\":19979:20012   */\n      swap1\n      pop\n        /* \"#utility.yul\":19925:20018   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20024:20131   */\n    tag_376:\n        /* \"#utility.yul\":20068:20076   */\n      0x00\n        /* \"#utility.yul\":20118:20123   */\n      dup3\n        /* \"#utility.yul\":20112:20116   */\n      dup3\n        /* \"#utility.yul\":20108:20124   */\n      shl\n        /* \"#utility.yul\":20087:20124   */\n      swap1\n      pop\n        /* \"#utility.yul\":20024:20131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20137:20530   */\n    tag_377:\n        /* \"#utility.yul\":20206:20212   */\n      0x00\n        /* \"#utility.yul\":20256:20257   */\n      0x08\n        /* \"#utility.yul\":20244:20254   */\n      dup4\n        /* \"#utility.yul\":20240:20258   */\n      mul\n        /* \"#utility.yul\":20279:20376   */\n      tag_603\n        /* \"#utility.yul\":20309:20375   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20298:20307   */\n      dup3\n        /* \"#utility.yul\":20279:20376   */\n      tag_376\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":20397:20436   */\n      tag_604\n        /* \"#utility.yul\":20427:20435   */\n      dup7\n        /* \"#utility.yul\":20416:20425   */\n      dup4\n        /* \"#utility.yul\":20397:20436   */\n      tag_376\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":20385:20436   */\n      swap6\n      pop\n        /* \"#utility.yul\":20469:20473   */\n      dup1\n        /* \"#utility.yul\":20465:20474   */\n      not\n        /* \"#utility.yul\":20458:20463   */\n      dup5\n        /* \"#utility.yul\":20454:20475   */\n      and\n        /* \"#utility.yul\":20445:20475   */\n      swap4\n      pop\n        /* \"#utility.yul\":20518:20522   */\n      dup1\n        /* \"#utility.yul\":20508:20516   */\n      dup7\n        /* \"#utility.yul\":20504:20523   */\n      and\n        /* \"#utility.yul\":20497:20502   */\n      dup5\n        /* \"#utility.yul\":20494:20524   */\n      or\n        /* \"#utility.yul\":20484:20524   */\n      swap3\n      pop\n        /* \"#utility.yul\":20213:20530   */\n      pop\n      pop\n        /* \"#utility.yul\":20137:20530   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20536:20596   */\n    tag_378:\n        /* \"#utility.yul\":20564:20567   */\n      0x00\n        /* \"#utility.yul\":20585:20590   */\n      dup2\n        /* \"#utility.yul\":20578:20590   */\n      swap1\n      pop\n        /* \"#utility.yul\":20536:20596   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20602:20744   */\n    tag_379:\n        /* \"#utility.yul\":20652:20661   */\n      0x00\n        /* \"#utility.yul\":20685:20738   */\n      tag_607\n        /* \"#utility.yul\":20703:20737   */\n      tag_608\n        /* \"#utility.yul\":20712:20736   */\n      tag_609\n        /* \"#utility.yul\":20730:20735   */\n      dup5\n        /* \"#utility.yul\":20712:20736   */\n      tag_328\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":20703:20737   */\n      tag_378\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":20685:20738   */\n      tag_328\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":20672:20738   */\n      swap1\n      pop\n        /* \"#utility.yul\":20602:20744   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20750:20825   */\n    tag_380:\n        /* \"#utility.yul\":20793:20796   */\n      0x00\n        /* \"#utility.yul\":20814:20819   */\n      dup2\n        /* \"#utility.yul\":20807:20819   */\n      swap1\n      pop\n        /* \"#utility.yul\":20750:20825   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20831:21100   */\n    tag_381:\n        /* \"#utility.yul\":20941:20980   */\n      tag_612\n        /* \"#utility.yul\":20972:20979   */\n      dup4\n        /* \"#utility.yul\":20941:20980   */\n      tag_379\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":21002:21093   */\n      tag_613\n        /* \"#utility.yul\":21051:21092   */\n      tag_614\n        /* \"#utility.yul\":21075:21091   */\n      dup3\n        /* \"#utility.yul\":21051:21092   */\n      tag_380\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":21043:21049   */\n      dup5\n        /* \"#utility.yul\":21036:21040   */\n      dup5\n        /* \"#utility.yul\":21030:21041   */\n      sload\n        /* \"#utility.yul\":21002:21093   */\n      tag_377\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":20996:21000   */\n      dup3\n        /* \"#utility.yul\":20989:21094   */\n      sstore\n        /* \"#utility.yul\":20907:21100   */\n      pop\n        /* \"#utility.yul\":20831:21100   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21106:21179   */\n    tag_382:\n        /* \"#utility.yul\":21151:21154   */\n      0x00\n        /* \"#utility.yul\":21106:21179   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":21185:21374   */\n    tag_383:\n        /* \"#utility.yul\":21262:21294   */\n      tag_617\n      tag_382\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":21303:21368   */\n      tag_618\n        /* \"#utility.yul\":21361:21367   */\n      dup2\n        /* \"#utility.yul\":21353:21359   */\n      dup5\n        /* \"#utility.yul\":21347:21351   */\n      dup5\n        /* \"#utility.yul\":21303:21368   */\n      tag_381\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":21238:21374   */\n      pop\n        /* \"#utility.yul\":21185:21374   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21380:21566   */\n    tag_384:\n        /* \"#utility.yul\":21440:21560   */\n    tag_620:\n        /* \"#utility.yul\":21457:21460   */\n      dup2\n        /* \"#utility.yul\":21450:21455   */\n      dup2\n        /* \"#utility.yul\":21447:21461   */\n      lt\n        /* \"#utility.yul\":21440:21560   */\n      iszero\n      tag_622\n      jumpi\n        /* \"#utility.yul\":21511:21550   */\n      tag_623\n        /* \"#utility.yul\":21548:21549   */\n      0x00\n        /* \"#utility.yul\":21541:21546   */\n      dup3\n        /* \"#utility.yul\":21511:21550   */\n      tag_383\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":21484:21485   */\n      0x01\n        /* \"#utility.yul\":21477:21482   */\n      dup2\n        /* \"#utility.yul\":21473:21486   */\n      add\n        /* \"#utility.yul\":21464:21486   */\n      swap1\n      pop\n        /* \"#utility.yul\":21440:21560   */\n      jump(tag_620)\n    tag_622:\n        /* \"#utility.yul\":21380:21566   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21572:22115   */\n    tag_385:\n        /* \"#utility.yul\":21673:21675   */\n      0x1f\n        /* \"#utility.yul\":21668:21671   */\n      dup3\n        /* \"#utility.yul\":21665:21676   */\n      gt\n        /* \"#utility.yul\":21662:22108   */\n      iszero\n      tag_625\n      jumpi\n        /* \"#utility.yul\":21707:21745   */\n      tag_626\n        /* \"#utility.yul\":21739:21744   */\n      dup2\n        /* \"#utility.yul\":21707:21745   */\n      tag_374\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":21791:21820   */\n      tag_627\n        /* \"#utility.yul\":21809:21819   */\n      dup5\n        /* \"#utility.yul\":21791:21820   */\n      tag_375\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":21781:21789   */\n      dup2\n        /* \"#utility.yul\":21777:21821   */\n      add\n        /* \"#utility.yul\":21974:21976   */\n      0x20\n        /* \"#utility.yul\":21962:21972   */\n      dup6\n        /* \"#utility.yul\":21959:21977   */\n      lt\n        /* \"#utility.yul\":21956:22005   */\n      iszero\n      tag_628\n      jumpi\n        /* \"#utility.yul\":21995:22003   */\n      dup2\n        /* \"#utility.yul\":21980:22003   */\n      swap1\n      pop\n        /* \"#utility.yul\":21956:22005   */\n    tag_628:\n        /* \"#utility.yul\":22018:22098   */\n      tag_629\n        /* \"#utility.yul\":22074:22096   */\n      tag_630\n        /* \"#utility.yul\":22092:22095   */\n      dup6\n        /* \"#utility.yul\":22074:22096   */\n      tag_375\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":22064:22072   */\n      dup4\n        /* \"#utility.yul\":22060:22097   */\n      add\n        /* \"#utility.yul\":22047:22058   */\n      dup3\n        /* \"#utility.yul\":22018:22098   */\n      tag_384\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":21677:22108   */\n      pop\n      pop\n        /* \"#utility.yul\":21662:22108   */\n    tag_625:\n        /* \"#utility.yul\":21572:22115   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22121:22238   */\n    tag_386:\n        /* \"#utility.yul\":22175:22183   */\n      0x00\n        /* \"#utility.yul\":22225:22230   */\n      dup3\n        /* \"#utility.yul\":22219:22223   */\n      dup3\n        /* \"#utility.yul\":22215:22231   */\n      shr\n        /* \"#utility.yul\":22194:22231   */\n      swap1\n      pop\n        /* \"#utility.yul\":22121:22238   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22244:22413   */\n    tag_387:\n        /* \"#utility.yul\":22288:22294   */\n      0x00\n        /* \"#utility.yul\":22321:22372   */\n      tag_633\n        /* \"#utility.yul\":22369:22370   */\n      0x00\n        /* \"#utility.yul\":22365:22371   */\n      not\n        /* \"#utility.yul\":22357:22362   */\n      dup5\n        /* \"#utility.yul\":22354:22355   */\n      0x08\n        /* \"#utility.yul\":22350:22363   */\n      mul\n        /* \"#utility.yul\":22321:22372   */\n      tag_386\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":22317:22373   */\n      not\n        /* \"#utility.yul\":22402:22406   */\n      dup1\n        /* \"#utility.yul\":22396:22400   */\n      dup4\n        /* \"#utility.yul\":22392:22407   */\n      and\n        /* \"#utility.yul\":22382:22407   */\n      swap2\n      pop\n        /* \"#utility.yul\":22295:22413   */\n      pop\n        /* \"#utility.yul\":22244:22413   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22418:22713   */\n    tag_388:\n        /* \"#utility.yul\":22494:22498   */\n      0x00\n        /* \"#utility.yul\":22640:22669   */\n      tag_635\n        /* \"#utility.yul\":22665:22668   */\n      dup4\n        /* \"#utility.yul\":22659:22663   */\n      dup4\n        /* \"#utility.yul\":22640:22669   */\n      tag_387\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":22632:22669   */\n      swap2\n      pop\n        /* \"#utility.yul\":22702:22705   */\n      dup3\n        /* \"#utility.yul\":22699:22700   */\n      0x02\n        /* \"#utility.yul\":22695:22706   */\n      mul\n        /* \"#utility.yul\":22689:22693   */\n      dup3\n        /* \"#utility.yul\":22686:22707   */\n      or\n        /* \"#utility.yul\":22678:22707   */\n      swap1\n      pop\n        /* \"#utility.yul\":22418:22713   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22718:24169   */\n    tag_213:\n        /* \"#utility.yul\":22829:22832   */\n      dup2\n        /* \"#utility.yul\":22823:22827   */\n      dup2\n        /* \"#utility.yul\":22820:22833   */\n      sub\n        /* \"#utility.yul\":22817:22843   */\n      tag_637\n      jumpi\n        /* \"#utility.yul\":22836:22841   */\n      pop\n      pop\n      jump(tag_636)\n        /* \"#utility.yul\":22817:22843   */\n    tag_637:\n        /* \"#utility.yul\":22867:22901   */\n      tag_638\n        /* \"#utility.yul\":22897:22900   */\n      dup3\n        /* \"#utility.yul\":22867:22901   */\n      tag_373\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":22966:22984   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":22958:22964   */\n      dup2\n        /* \"#utility.yul\":22955:22985   */\n      gt\n        /* \"#utility.yul\":22952:23008   */\n      iszero\n      tag_639\n      jumpi\n        /* \"#utility.yul\":22988:23006   */\n      tag_640\n      tag_233\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":22952:23008   */\n    tag_639:\n        /* \"#utility.yul\":23032:23070   */\n      tag_641\n        /* \"#utility.yul\":23064:23068   */\n      dup3\n        /* \"#utility.yul\":23058:23069   */\n      sload\n        /* \"#utility.yul\":23032:23070   */\n      tag_124\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":23117:23184   */\n      tag_642\n        /* \"#utility.yul\":23177:23183   */\n      dup3\n        /* \"#utility.yul\":23169:23175   */\n      dup3\n        /* \"#utility.yul\":23163:23167   */\n      dup6\n        /* \"#utility.yul\":23117:23184   */\n      tag_385\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":23211:23212   */\n      0x00\n        /* \"#utility.yul\":23240:23242   */\n      0x1f\n        /* \"#utility.yul\":23232:23238   */\n      dup4\n        /* \"#utility.yul\":23229:23243   */\n      gt\n        /* \"#utility.yul\":23257:23258   */\n      0x01\n        /* \"#utility.yul\":23252:23924   */\n      dup2\n      eq\n      tag_644\n      jumpi\n        /* \"#utility.yul\":23968:23969   */\n      0x00\n        /* \"#utility.yul\":23985:23991   */\n      dup5\n        /* \"#utility.yul\":23982:24059   */\n      iszero\n      tag_645\n      jumpi\n        /* \"#utility.yul\":24034:24043   */\n      dup3\n        /* \"#utility.yul\":24029:24032   */\n      dup8\n        /* \"#utility.yul\":24025:24044   */\n      add\n        /* \"#utility.yul\":24019:24045   */\n      sload\n        /* \"#utility.yul\":24010:24045   */\n      swap1\n      pop\n        /* \"#utility.yul\":23982:24059   */\n    tag_645:\n        /* \"#utility.yul\":24085:24152   */\n      tag_646\n        /* \"#utility.yul\":24145:24151   */\n      dup6\n        /* \"#utility.yul\":24138:24143   */\n      dup3\n        /* \"#utility.yul\":24085:24152   */\n      tag_388\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":24079:24083   */\n      dup7\n        /* \"#utility.yul\":24072:24153   */\n      sstore\n        /* \"#utility.yul\":23941:24163   */\n      pop\n        /* \"#utility.yul\":23222:24163   */\n      jump(tag_643)\n        /* \"#utility.yul\":23252:23924   */\n    tag_644:\n        /* \"#utility.yul\":23304:23308   */\n      0x1f\n        /* \"#utility.yul\":23300:23309   */\n      not\n        /* \"#utility.yul\":23292:23298   */\n      dup5\n        /* \"#utility.yul\":23288:23310   */\n      and\n        /* \"#utility.yul\":23330:23366   */\n      tag_647\n        /* \"#utility.yul\":23362:23365   */\n      dup8\n        /* \"#utility.yul\":23330:23366   */\n      tag_374\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":23323:23366   */\n      swap7\n      pop\n        /* \"#utility.yul\":23393:23430   */\n      tag_648\n        /* \"#utility.yul\":23425:23429   */\n      dup7\n        /* \"#utility.yul\":23393:23430   */\n      tag_374\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":23452:23453   */\n      0x00\n        /* \"#utility.yul\":23466:23673   */\n    tag_649:\n        /* \"#utility.yul\":23480:23487   */\n      dup3\n        /* \"#utility.yul\":23477:23478   */\n      dup2\n        /* \"#utility.yul\":23474:23488   */\n      lt\n        /* \"#utility.yul\":23466:23673   */\n      iszero\n      tag_651\n      jumpi\n        /* \"#utility.yul\":23559:23568   */\n      dup5\n        /* \"#utility.yul\":23554:23557   */\n      dup10\n        /* \"#utility.yul\":23550:23569   */\n      add\n        /* \"#utility.yul\":23544:23570   */\n      sload\n        /* \"#utility.yul\":23536:23542   */\n      dup3\n        /* \"#utility.yul\":23529:23571   */\n      sstore\n        /* \"#utility.yul\":23610:23611   */\n      0x01\n        /* \"#utility.yul\":23602:23608   */\n      dup3\n        /* \"#utility.yul\":23598:23612   */\n      add\n        /* \"#utility.yul\":23588:23612   */\n      swap2\n      pop\n        /* \"#utility.yul\":23657:23658   */\n      0x01\n        /* \"#utility.yul\":23646:23655   */\n      dup6\n        /* \"#utility.yul\":23642:23659   */\n      add\n        /* \"#utility.yul\":23629:23659   */\n      swap5\n      pop\n        /* \"#utility.yul\":23503:23507   */\n      0x20\n        /* \"#utility.yul\":23500:23501   */\n      dup2\n        /* \"#utility.yul\":23496:23508   */\n      add\n        /* \"#utility.yul\":23491:23508   */\n      swap1\n      pop\n        /* \"#utility.yul\":23466:23673   */\n      jump(tag_649)\n    tag_651:\n        /* \"#utility.yul\":23701:23707   */\n      dup7\n        /* \"#utility.yul\":23692:23699   */\n      dup4\n        /* \"#utility.yul\":23689:23708   */\n      lt\n        /* \"#utility.yul\":23686:23865   */\n      iszero\n      tag_652\n      jumpi\n        /* \"#utility.yul\":23759:23768   */\n      dup5\n        /* \"#utility.yul\":23754:23757   */\n      dup10\n        /* \"#utility.yul\":23750:23769   */\n      add\n        /* \"#utility.yul\":23744:23770   */\n      sload\n        /* \"#utility.yul\":23802:23850   */\n      tag_653\n        /* \"#utility.yul\":23844:23848   */\n      0x1f\n        /* \"#utility.yul\":23836:23842   */\n      dup10\n        /* \"#utility.yul\":23832:23849   */\n      and\n        /* \"#utility.yul\":23821:23830   */\n      dup3\n        /* \"#utility.yul\":23802:23850   */\n      tag_387\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":23794:23800   */\n      dup4\n        /* \"#utility.yul\":23787:23851   */\n      sstore\n        /* \"#utility.yul\":23709:23865   */\n      pop\n        /* \"#utility.yul\":23686:23865   */\n    tag_652:\n        /* \"#utility.yul\":23911:23912   */\n      0x01\n        /* \"#utility.yul\":23907:23908   */\n      0x02\n        /* \"#utility.yul\":23899:23905   */\n      dup9\n        /* \"#utility.yul\":23895:23909   */\n      mul\n        /* \"#utility.yul\":23891:23913   */\n      add\n        /* \"#utility.yul\":23885:23889   */\n      dup9\n        /* \"#utility.yul\":23878:23914   */\n      sstore\n        /* \"#utility.yul\":23259:23924   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":23222:24163   */\n    tag_643:\n      pop\n        /* \"#utility.yul\":22807:24169   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":22718:24169   */\n      pop\n      pop\n    tag_636:\n      jump\t// out\n        /* \"#utility.yul\":24199:25030   */\n    tag_389:\n        /* \"#utility.yul\":24284:24287   */\n      0x00\n        /* \"#utility.yul\":24321:24326   */\n      dup2\n        /* \"#utility.yul\":24315:24327   */\n      sload\n        /* \"#utility.yul\":24350:24386   */\n      tag_655\n        /* \"#utility.yul\":24376:24385   */\n      dup2\n        /* \"#utility.yul\":24350:24386   */\n      tag_124\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":24402:24473   */\n      tag_656\n        /* \"#utility.yul\":24466:24472   */\n      dup2\n        /* \"#utility.yul\":24461:24464   */\n      dup7\n        /* \"#utility.yul\":24402:24473   */\n      tag_317\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":24395:24473   */\n      swap5\n      pop\n        /* \"#utility.yul\":24504:24505   */\n      0x01\n        /* \"#utility.yul\":24493:24502   */\n      dup3\n        /* \"#utility.yul\":24489:24506   */\n      and\n        /* \"#utility.yul\":24520:24521   */\n      0x00\n        /* \"#utility.yul\":24515:24679   */\n      dup2\n      eq\n      tag_658\n      jumpi\n        /* \"#utility.yul\":24693:24694   */\n      0x01\n        /* \"#utility.yul\":24688:25024   */\n      dup2\n      eq\n      tag_659\n      jumpi\n        /* \"#utility.yul\":24482:25024   */\n      jump(tag_657)\n        /* \"#utility.yul\":24515:24679   */\n    tag_658:\n        /* \"#utility.yul\":24599:24603   */\n      0xff\n        /* \"#utility.yul\":24595:24604   */\n      not\n        /* \"#utility.yul\":24584:24593   */\n      dup4\n        /* \"#utility.yul\":24580:24605   */\n      and\n        /* \"#utility.yul\":24575:24578   */\n      dup7\n        /* \"#utility.yul\":24568:24606   */\n      mstore\n        /* \"#utility.yul\":24659:24665   */\n      dup2\n        /* \"#utility.yul\":24652:24666   */\n      iszero\n        /* \"#utility.yul\":24645:24667   */\n      iszero\n        /* \"#utility.yul\":24639:24643   */\n      0x20\n        /* \"#utility.yul\":24635:24668   */\n      mul\n        /* \"#utility.yul\":24630:24633   */\n      dup7\n        /* \"#utility.yul\":24626:24669   */\n      add\n        /* \"#utility.yul\":24619:24669   */\n      swap4\n      pop\n        /* \"#utility.yul\":24515:24679   */\n      jump(tag_657)\n        /* \"#utility.yul\":24688:25024   */\n    tag_659:\n        /* \"#utility.yul\":24755:24793   */\n      tag_660\n        /* \"#utility.yul\":24787:24792   */\n      dup6\n        /* \"#utility.yul\":24755:24793   */\n      tag_374\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":24815:24816   */\n      0x00\n        /* \"#utility.yul\":24829:24983   */\n    tag_661:\n        /* \"#utility.yul\":24843:24849   */\n      dup4\n        /* \"#utility.yul\":24840:24841   */\n      dup2\n        /* \"#utility.yul\":24837:24850   */\n      lt\n        /* \"#utility.yul\":24829:24983   */\n      iszero\n      tag_663\n      jumpi\n        /* \"#utility.yul\":24917:24924   */\n      dup2\n        /* \"#utility.yul\":24911:24925   */\n      sload\n        /* \"#utility.yul\":24907:24908   */\n      dup2\n        /* \"#utility.yul\":24902:24905   */\n      dup10\n        /* \"#utility.yul\":24898:24909   */\n      add\n        /* \"#utility.yul\":24891:24926   */\n      mstore\n        /* \"#utility.yul\":24967:24968   */\n      0x01\n        /* \"#utility.yul\":24958:24965   */\n      dup3\n        /* \"#utility.yul\":24954:24969   */\n      add\n        /* \"#utility.yul\":24943:24969   */\n      swap2\n      pop\n        /* \"#utility.yul\":24865:24869   */\n      0x20\n        /* \"#utility.yul\":24862:24863   */\n      dup2\n        /* \"#utility.yul\":24858:24870   */\n      add\n        /* \"#utility.yul\":24853:24870   */\n      swap1\n      pop\n        /* \"#utility.yul\":24829:24983   */\n      jump(tag_661)\n    tag_663:\n        /* \"#utility.yul\":25012:25013   */\n      dup1\n        /* \"#utility.yul\":25007:25010   */\n      dup9\n        /* \"#utility.yul\":25003:25014   */\n      add\n        /* \"#utility.yul\":24996:25014   */\n      swap6\n      pop\n        /* \"#utility.yul\":24695:25024   */\n      pop\n      pop\n        /* \"#utility.yul\":24482:25024   */\n    tag_657:\n      pop\n        /* \"#utility.yul\":24288:25030   */\n      pop\n      pop\n        /* \"#utility.yul\":24199:25030   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25036:25555   */\n    tag_215:\n        /* \"#utility.yul\":25198:25202   */\n      0x00\n        /* \"#utility.yul\":25236:25238   */\n      0x60\n        /* \"#utility.yul\":25225:25234   */\n      dup3\n        /* \"#utility.yul\":25221:25239   */\n      add\n        /* \"#utility.yul\":25213:25239   */\n      swap1\n      pop\n        /* \"#utility.yul\":25249:25316   */\n      tag_665\n        /* \"#utility.yul\":25313:25314   */\n      0x00\n        /* \"#utility.yul\":25302:25311   */\n      dup4\n        /* \"#utility.yul\":25298:25315   */\n      add\n        /* \"#utility.yul\":25289:25295   */\n      dup7\n        /* \"#utility.yul\":25249:25316   */\n      tag_337\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":25363:25372   */\n      dup2\n        /* \"#utility.yul\":25357:25361   */\n      dup2\n        /* \"#utility.yul\":25353:25373   */\n      sub\n        /* \"#utility.yul\":25348:25350   */\n      0x20\n        /* \"#utility.yul\":25337:25346   */\n      dup4\n        /* \"#utility.yul\":25333:25351   */\n      add\n        /* \"#utility.yul\":25326:25374   */\n      mstore\n        /* \"#utility.yul\":25391:25466   */\n      tag_666\n        /* \"#utility.yul\":25461:25465   */\n      dup2\n        /* \"#utility.yul\":25452:25458   */\n      dup6\n        /* \"#utility.yul\":25391:25466   */\n      tag_389\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":25383:25466   */\n      swap1\n      pop\n        /* \"#utility.yul\":25476:25548   */\n      tag_667\n        /* \"#utility.yul\":25544:25546   */\n      0x40\n        /* \"#utility.yul\":25533:25542   */\n      dup4\n        /* \"#utility.yul\":25529:25547   */\n      add\n        /* \"#utility.yul\":25520:25526   */\n      dup5\n        /* \"#utility.yul\":25476:25548   */\n      tag_335\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":25036:25555   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25561:25732   */\n    tag_390:\n        /* \"#utility.yul\":25701:25724   */\n      0x426f6e757320616c726561647920636c61696d65640000000000000000000000\n        /* \"#utility.yul\":25697:25698   */\n      0x00\n        /* \"#utility.yul\":25689:25695   */\n      dup3\n        /* \"#utility.yul\":25685:25699   */\n      add\n        /* \"#utility.yul\":25678:25725   */\n      mstore\n        /* \"#utility.yul\":25561:25732   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25738:26104   */\n    tag_391:\n        /* \"#utility.yul\":25880:25883   */\n      0x00\n        /* \"#utility.yul\":25901:25968   */\n      tag_670\n        /* \"#utility.yul\":25965:25967   */\n      0x15\n        /* \"#utility.yul\":25960:25963   */\n      dup4\n        /* \"#utility.yul\":25901:25968   */\n      tag_317\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":25894:25968   */\n      swap2\n      pop\n        /* \"#utility.yul\":25977:26070   */\n      tag_671\n        /* \"#utility.yul\":26066:26069   */\n      dup3\n        /* \"#utility.yul\":25977:26070   */\n      tag_390\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":26095:26097   */\n      0x20\n        /* \"#utility.yul\":26090:26093   */\n      dup3\n        /* \"#utility.yul\":26086:26098   */\n      add\n        /* \"#utility.yul\":26079:26098   */\n      swap1\n      pop\n        /* \"#utility.yul\":25738:26104   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26110:26529   */\n    tag_220:\n        /* \"#utility.yul\":26276:26280   */\n      0x00\n        /* \"#utility.yul\":26314:26316   */\n      0x20\n        /* \"#utility.yul\":26303:26312   */\n      dup3\n        /* \"#utility.yul\":26299:26317   */\n      add\n        /* \"#utility.yul\":26291:26317   */\n      swap1\n      pop\n        /* \"#utility.yul\":26363:26372   */\n      dup2\n        /* \"#utility.yul\":26357:26361   */\n      dup2\n        /* \"#utility.yul\":26353:26373   */\n      sub\n        /* \"#utility.yul\":26349:26350   */\n      0x00\n        /* \"#utility.yul\":26338:26347   */\n      dup4\n        /* \"#utility.yul\":26334:26351   */\n      add\n        /* \"#utility.yul\":26327:26374   */\n      mstore\n        /* \"#utility.yul\":26391:26522   */\n      tag_673\n        /* \"#utility.yul\":26517:26521   */\n      dup2\n        /* \"#utility.yul\":26391:26522   */\n      tag_391\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":26383:26522   */\n      swap1\n      pop\n        /* \"#utility.yul\":26110:26529   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26535:26715   */\n    tag_240:\n        /* \"#utility.yul\":26583:26660   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26580:26581   */\n      0x00\n        /* \"#utility.yul\":26573:26661   */\n      mstore\n        /* \"#utility.yul\":26680:26684   */\n      0x32\n        /* \"#utility.yul\":26677:26678   */\n      0x04\n        /* \"#utility.yul\":26670:26685   */\n      mstore\n        /* \"#utility.yul\":26704:26708   */\n      0x24\n        /* \"#utility.yul\":26701:26702   */\n      0x00\n        /* \"#utility.yul\":26694:26709   */\n      revert\n        /* \"#utility.yul\":26721:27163   */\n    tag_281:\n        /* \"#utility.yul\":26870:26874   */\n      0x00\n        /* \"#utility.yul\":26908:26910   */\n      0x60\n        /* \"#utility.yul\":26897:26906   */\n      dup3\n        /* \"#utility.yul\":26893:26911   */\n      add\n        /* \"#utility.yul\":26885:26911   */\n      swap1\n      pop\n        /* \"#utility.yul\":26921:26992   */\n      tag_676\n        /* \"#utility.yul\":26989:26990   */\n      0x00\n        /* \"#utility.yul\":26978:26987   */\n      dup4\n        /* \"#utility.yul\":26974:26991   */\n      add\n        /* \"#utility.yul\":26965:26971   */\n      dup7\n        /* \"#utility.yul\":26921:26992   */\n      tag_338\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":27002:27074   */\n      tag_677\n        /* \"#utility.yul\":27070:27072   */\n      0x20\n        /* \"#utility.yul\":27059:27068   */\n      dup4\n        /* \"#utility.yul\":27055:27073   */\n      add\n        /* \"#utility.yul\":27046:27052   */\n      dup6\n        /* \"#utility.yul\":27002:27074   */\n      tag_335\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":27084:27156   */\n      tag_678\n        /* \"#utility.yul\":27152:27154   */\n      0x40\n        /* \"#utility.yul\":27141:27150   */\n      dup4\n        /* \"#utility.yul\":27137:27155   */\n      add\n        /* \"#utility.yul\":27128:27134   */\n      dup5\n        /* \"#utility.yul\":27084:27156   */\n      tag_335\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":26721:27163   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27169:28564   */\n    tag_296:\n        /* \"#utility.yul\":27286:27323   */\n      tag_680\n        /* \"#utility.yul\":27319:27322   */\n      dup3\n        /* \"#utility.yul\":27286:27323   */\n      tag_316\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":27388:27406   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":27380:27386   */\n      dup2\n        /* \"#utility.yul\":27377:27407   */\n      gt\n        /* \"#utility.yul\":27374:27430   */\n      iszero\n      tag_681\n      jumpi\n        /* \"#utility.yul\":27410:27428   */\n      tag_682\n      tag_233\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":27374:27430   */\n    tag_681:\n        /* \"#utility.yul\":27454:27492   */\n      tag_683\n        /* \"#utility.yul\":27486:27490   */\n      dup3\n        /* \"#utility.yul\":27480:27491   */\n      sload\n        /* \"#utility.yul\":27454:27492   */\n      tag_124\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":27539:27606   */\n      tag_684\n        /* \"#utility.yul\":27599:27605   */\n      dup3\n        /* \"#utility.yul\":27591:27597   */\n      dup3\n        /* \"#utility.yul\":27585:27589   */\n      dup6\n        /* \"#utility.yul\":27539:27606   */\n      tag_385\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":27633:27634   */\n      0x00\n        /* \"#utility.yul\":27657:27661   */\n      0x20\n        /* \"#utility.yul\":27644:27661   */\n      swap1\n      pop\n        /* \"#utility.yul\":27689:27691   */\n      0x1f\n        /* \"#utility.yul\":27681:27687   */\n      dup4\n        /* \"#utility.yul\":27678:27692   */\n      gt\n        /* \"#utility.yul\":27706:27707   */\n      0x01\n        /* \"#utility.yul\":27701:28319   */\n      dup2\n      eq\n      tag_686\n      jumpi\n        /* \"#utility.yul\":28363:28364   */\n      0x00\n        /* \"#utility.yul\":28380:28386   */\n      dup5\n        /* \"#utility.yul\":28377:28454   */\n      iszero\n      tag_687\n      jumpi\n        /* \"#utility.yul\":28429:28438   */\n      dup3\n        /* \"#utility.yul\":28424:28427   */\n      dup8\n        /* \"#utility.yul\":28420:28439   */\n      add\n        /* \"#utility.yul\":28414:28440   */\n      mload\n        /* \"#utility.yul\":28405:28440   */\n      swap1\n      pop\n        /* \"#utility.yul\":28377:28454   */\n    tag_687:\n        /* \"#utility.yul\":28480:28547   */\n      tag_688\n        /* \"#utility.yul\":28540:28546   */\n      dup6\n        /* \"#utility.yul\":28533:28538   */\n      dup3\n        /* \"#utility.yul\":28480:28547   */\n      tag_388\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":28474:28478   */\n      dup7\n        /* \"#utility.yul\":28467:28548   */\n      sstore\n        /* \"#utility.yul\":28336:28558   */\n      pop\n        /* \"#utility.yul\":27671:28558   */\n      jump(tag_685)\n        /* \"#utility.yul\":27701:28319   */\n    tag_686:\n        /* \"#utility.yul\":27753:27757   */\n      0x1f\n        /* \"#utility.yul\":27749:27758   */\n      not\n        /* \"#utility.yul\":27741:27747   */\n      dup5\n        /* \"#utility.yul\":27737:27759   */\n      and\n        /* \"#utility.yul\":27787:27824   */\n      tag_689\n        /* \"#utility.yul\":27819:27823   */\n      dup7\n        /* \"#utility.yul\":27787:27824   */\n      tag_374\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":27846:27847   */\n      0x00\n        /* \"#utility.yul\":27860:28068   */\n    tag_690:\n        /* \"#utility.yul\":27874:27881   */\n      dup3\n        /* \"#utility.yul\":27871:27872   */\n      dup2\n        /* \"#utility.yul\":27868:27882   */\n      lt\n        /* \"#utility.yul\":27860:28068   */\n      iszero\n      tag_692\n      jumpi\n        /* \"#utility.yul\":27953:27962   */\n      dup5\n        /* \"#utility.yul\":27948:27951   */\n      dup10\n        /* \"#utility.yul\":27944:27963   */\n      add\n        /* \"#utility.yul\":27938:27964   */\n      mload\n        /* \"#utility.yul\":27930:27936   */\n      dup3\n        /* \"#utility.yul\":27923:27965   */\n      sstore\n        /* \"#utility.yul\":28004:28005   */\n      0x01\n        /* \"#utility.yul\":27996:28002   */\n      dup3\n        /* \"#utility.yul\":27992:28006   */\n      add\n        /* \"#utility.yul\":27982:28006   */\n      swap2\n      pop\n        /* \"#utility.yul\":28051:28053   */\n      0x20\n        /* \"#utility.yul\":28040:28049   */\n      dup6\n        /* \"#utility.yul\":28036:28054   */\n      add\n        /* \"#utility.yul\":28023:28054   */\n      swap5\n      pop\n        /* \"#utility.yul\":27897:27901   */\n      0x20\n        /* \"#utility.yul\":27894:27895   */\n      dup2\n        /* \"#utility.yul\":27890:27902   */\n      add\n        /* \"#utility.yul\":27885:27902   */\n      swap1\n      pop\n        /* \"#utility.yul\":27860:28068   */\n      jump(tag_690)\n    tag_692:\n        /* \"#utility.yul\":28096:28102   */\n      dup7\n        /* \"#utility.yul\":28087:28094   */\n      dup4\n        /* \"#utility.yul\":28084:28103   */\n      lt\n        /* \"#utility.yul\":28081:28260   */\n      iszero\n      tag_693\n      jumpi\n        /* \"#utility.yul\":28154:28163   */\n      dup5\n        /* \"#utility.yul\":28149:28152   */\n      dup10\n        /* \"#utility.yul\":28145:28164   */\n      add\n        /* \"#utility.yul\":28139:28165   */\n      mload\n        /* \"#utility.yul\":28197:28245   */\n      tag_694\n        /* \"#utility.yul\":28239:28243   */\n      0x1f\n        /* \"#utility.yul\":28231:28237   */\n      dup10\n        /* \"#utility.yul\":28227:28244   */\n      and\n        /* \"#utility.yul\":28216:28225   */\n      dup3\n        /* \"#utility.yul\":28197:28245   */\n      tag_387\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":28189:28195   */\n      dup4\n        /* \"#utility.yul\":28182:28246   */\n      sstore\n        /* \"#utility.yul\":28104:28260   */\n      pop\n        /* \"#utility.yul\":28081:28260   */\n    tag_693:\n        /* \"#utility.yul\":28306:28307   */\n      0x01\n        /* \"#utility.yul\":28302:28303   */\n      0x02\n        /* \"#utility.yul\":28294:28300   */\n      dup9\n        /* \"#utility.yul\":28290:28304   */\n      mul\n        /* \"#utility.yul\":28286:28308   */\n      add\n        /* \"#utility.yul\":28280:28284   */\n      dup9\n        /* \"#utility.yul\":28273:28309   */\n      sstore\n        /* \"#utility.yul\":27708:28319   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":27671:28558   */\n    tag_685:\n      pop\n        /* \"#utility.yul\":27261:28564   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":27169:28564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28570:28737   */\n    tag_298:\n        /* \"#utility.yul\":28607:28610   */\n      0x00\n        /* \"#utility.yul\":28630:28652   */\n      tag_696\n        /* \"#utility.yul\":28646:28651   */\n      dup3\n        /* \"#utility.yul\":28630:28652   */\n      tag_336\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":28621:28652   */\n      swap2\n      pop\n        /* \"#utility.yul\":28674:28678   */\n      0xff\n        /* \"#utility.yul\":28667:28672   */\n      dup3\n        /* \"#utility.yul\":28664:28679   */\n      sub\n        /* \"#utility.yul\":28661:28702   */\n      tag_697\n      jumpi\n        /* \"#utility.yul\":28682:28700   */\n      tag_698\n      tag_366\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":28661:28702   */\n    tag_697:\n        /* \"#utility.yul\":28729:28730   */\n      0x01\n        /* \"#utility.yul\":28722:28727   */\n      dup3\n        /* \"#utility.yul\":28718:28731   */\n      add\n        /* \"#utility.yul\":28711:28731   */\n      swap1\n      pop\n        /* \"#utility.yul\":28570:28737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28743:28934   */\n    tag_309:\n        /* \"#utility.yul\":28783:28786   */\n      0x00\n        /* \"#utility.yul\":28802:28822   */\n      tag_700\n        /* \"#utility.yul\":28820:28821   */\n      dup3\n        /* \"#utility.yul\":28802:28822   */\n      tag_328\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":28797:28822   */\n      swap2\n      pop\n        /* \"#utility.yul\":28836:28856   */\n      tag_701\n        /* \"#utility.yul\":28854:28855   */\n      dup4\n        /* \"#utility.yul\":28836:28856   */\n      tag_328\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":28831:28856   */\n      swap3\n      pop\n        /* \"#utility.yul\":28879:28880   */\n      dup3\n        /* \"#utility.yul\":28876:28877   */\n      dup3\n        /* \"#utility.yul\":28872:28881   */\n      add\n        /* \"#utility.yul\":28865:28881   */\n      swap1\n      pop\n        /* \"#utility.yul\":28900:28903   */\n      dup1\n        /* \"#utility.yul\":28897:28898   */\n      dup3\n        /* \"#utility.yul\":28894:28904   */\n      gt\n        /* \"#utility.yul\":28891:28927   */\n      iszero\n      tag_702\n      jumpi\n        /* \"#utility.yul\":28907:28925   */\n      tag_703\n      tag_366\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":28891:28927   */\n    tag_702:\n        /* \"#utility.yul\":28743:28934   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220875994130a6625aee2e303869d3548a2c8d70075d41367daad7272bff048ce0e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1057": {
									"entryPoint": null,
									"id": 1057,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_addItem_1107": {
									"entryPoint": 1387,
									"id": 1107,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1101,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_initializeItems_1086": {
									"entryPoint": 745,
									"id": 1086,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 1254,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_961": {
									"entryPoint": 1592,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 372,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 1639,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@mint_1122": {
									"entryPoint": 711,
									"id": 1122,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1599,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 567,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256_fromMemory": {
									"entryPoint": 2321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3354,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2807,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint8": {
									"entryPoint": 3248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3191,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2438,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2393,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2699,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2176,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 2564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2576,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2708,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2745,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8659:8",
										"nodeType": "YulBlock",
										"src": "0:8659:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "379:81:8",
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nativeSrc": "389:65:8",
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:8",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nativeSrc": "400:54:8",
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:8",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:8",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nativeSrc": "511:51:8",
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nativeSrc": "521:35:8",
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nativeSrc": "532:24:8",
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:8",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:8",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nativeSrc": "611:79:8",
													"nodeType": "YulBlock",
													"src": "611:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:8",
																"nodeType": "YulBlock",
																"src": "668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:8",
																					"nodeType": "YulLiteral",
																					"src": "677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:8",
																					"nodeType": "YulLiteral",
																					"src": "680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:8"
																			},
																			"nativeSrc": "670:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:8"
																		},
																		"nativeSrc": "670:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:8"
																				},
																				"nativeSrc": "641:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:8"
																		},
																		"nativeSrc": "631:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:8"
																},
																"nativeSrc": "624:43:8",
																"nodeType": "YulFunctionCall",
																"src": "624:43:8"
															},
															"nativeSrc": "621:63:8",
															"nodeType": "YulIf",
															"src": "621:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:8",
														"nodeType": "YulTypedName",
														"src": "604:5:8",
														"type": ""
													}
												],
												"src": "568:122:8"
											},
											{
												"body": {
													"nativeSrc": "759:80:8",
													"nodeType": "YulBlock",
													"src": "759:80:8",
													"statements": [
														{
															"nativeSrc": "769:22:8",
															"nodeType": "YulAssignment",
															"src": "769:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:8"
																},
																"nativeSrc": "778:13:8",
																"nodeType": "YulFunctionCall",
																"src": "778:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:8"
																},
																"nativeSrc": "800:33:8",
																"nodeType": "YulFunctionCall",
																"src": "800:33:8"
															},
															"nativeSrc": "800:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:8",
														"nodeType": "YulTypedName",
														"src": "737:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:8",
														"nodeType": "YulTypedName",
														"src": "745:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:8",
														"nodeType": "YulTypedName",
														"src": "753:5:8",
														"type": ""
													}
												],
												"src": "696:143:8"
											},
											{
												"body": {
													"nativeSrc": "890:32:8",
													"nodeType": "YulBlock",
													"src": "890:32:8",
													"statements": [
														{
															"nativeSrc": "900:16:8",
															"nodeType": "YulAssignment",
															"src": "900:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:8",
																"nodeType": "YulIdentifier",
																"src": "911:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:8",
														"nodeType": "YulTypedName",
														"src": "872:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:8",
														"nodeType": "YulTypedName",
														"src": "882:7:8",
														"type": ""
													}
												],
												"src": "845:77:8"
											},
											{
												"body": {
													"nativeSrc": "971:79:8",
													"nodeType": "YulBlock",
													"src": "971:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:8",
																"nodeType": "YulBlock",
																"src": "1028:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:8"
																			},
																			"nativeSrc": "1030:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:8"
																		},
																		"nativeSrc": "1030:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:8"
																				},
																				"nativeSrc": "1001:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:8"
																		},
																		"nativeSrc": "991:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:8"
																},
																"nativeSrc": "984:43:8",
																"nodeType": "YulFunctionCall",
																"src": "984:43:8"
															},
															"nativeSrc": "981:63:8",
															"nodeType": "YulIf",
															"src": "981:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:8",
														"nodeType": "YulTypedName",
														"src": "964:5:8",
														"type": ""
													}
												],
												"src": "928:122:8"
											},
											{
												"body": {
													"nativeSrc": "1119:80:8",
													"nodeType": "YulBlock",
													"src": "1119:80:8",
													"statements": [
														{
															"nativeSrc": "1129:22:8",
															"nodeType": "YulAssignment",
															"src": "1129:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:8"
																},
																"nativeSrc": "1138:13:8",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:8"
																},
																"nativeSrc": "1160:33:8",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:8"
															},
															"nativeSrc": "1160:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:8",
														"nodeType": "YulTypedName",
														"src": "1097:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:8",
														"nodeType": "YulTypedName",
														"src": "1105:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:8",
														"nodeType": "YulTypedName",
														"src": "1113:5:8",
														"type": ""
													}
												],
												"src": "1056:143:8"
											},
											{
												"body": {
													"nativeSrc": "1299:413:8",
													"nodeType": "YulBlock",
													"src": "1299:413:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1345:83:8",
																"nodeType": "YulBlock",
																"src": "1345:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1347:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "1347:77:8"
																			},
																			"nativeSrc": "1347:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1347:79:8"
																		},
																		"nativeSrc": "1347:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1347:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1320:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1320:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1329:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1329:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1316:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1316:3:8"
																		},
																		"nativeSrc": "1316:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1316:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1341:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1312:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1312:3:8"
																},
																"nativeSrc": "1312:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1312:32:8"
															},
															"nativeSrc": "1309:119:8",
															"nodeType": "YulIf",
															"src": "1309:119:8"
														},
														{
															"nativeSrc": "1438:128:8",
															"nodeType": "YulBlock",
															"src": "1438:128:8",
															"statements": [
																{
																	"nativeSrc": "1453:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1453:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1467:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1467:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1457:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1457:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1482:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1482:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1528:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1528:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1539:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1539:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1524:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1524:3:8"
																				},
																				"nativeSrc": "1524:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1524:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1548:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1548:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1492:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1492:31:8"
																		},
																		"nativeSrc": "1492:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1492:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1482:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1482:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1576:129:8",
															"nodeType": "YulBlock",
															"src": "1576:129:8",
															"statements": [
																{
																	"nativeSrc": "1591:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1591:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1605:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1605:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1595:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1595:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1621:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1621:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1667:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1667:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1678:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1678:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1663:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1663:3:8"
																				},
																				"nativeSrc": "1663:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1663:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1687:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1687:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1631:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1631:31:8"
																		},
																		"nativeSrc": "1631:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1631:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1621:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1621:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
												"nativeSrc": "1205:507:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1261:9:8",
														"nodeType": "YulTypedName",
														"src": "1261:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1272:7:8",
														"nodeType": "YulTypedName",
														"src": "1272:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1284:6:8",
														"nodeType": "YulTypedName",
														"src": "1284:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1292:6:8",
														"nodeType": "YulTypedName",
														"src": "1292:6:8",
														"type": ""
													}
												],
												"src": "1205:507:8"
											},
											{
												"body": {
													"nativeSrc": "1777:40:8",
													"nodeType": "YulBlock",
													"src": "1777:40:8",
													"statements": [
														{
															"nativeSrc": "1788:22:8",
															"nodeType": "YulAssignment",
															"src": "1788:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1804:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1804:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1798:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1798:5:8"
																},
																"nativeSrc": "1798:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1798:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1788:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1788:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1718:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1760:5:8",
														"nodeType": "YulTypedName",
														"src": "1760:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1770:6:8",
														"nodeType": "YulTypedName",
														"src": "1770:6:8",
														"type": ""
													}
												],
												"src": "1718:99:8"
											},
											{
												"body": {
													"nativeSrc": "1851:152:8",
													"nodeType": "YulBlock",
													"src": "1851:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1868:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1868:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1871:77:8",
																		"nodeType": "YulLiteral",
																		"src": "1871:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1861:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1861:6:8"
																},
																"nativeSrc": "1861:88:8",
																"nodeType": "YulFunctionCall",
																"src": "1861:88:8"
															},
															"nativeSrc": "1861:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "1861:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1965:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1965:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1968:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1968:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1958:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1958:6:8"
																},
																"nativeSrc": "1958:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1958:15:8"
															},
															"nativeSrc": "1958:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1958:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1989:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1989:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1992:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1992:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1982:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1982:6:8"
																},
																"nativeSrc": "1982:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1982:15:8"
															},
															"nativeSrc": "1982:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1982:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1823:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1823:180:8"
											},
											{
												"body": {
													"nativeSrc": "2037:152:8",
													"nodeType": "YulBlock",
													"src": "2037:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2054:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2054:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2057:77:8",
																		"nodeType": "YulLiteral",
																		"src": "2057:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2047:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2047:6:8"
																},
																"nativeSrc": "2047:88:8",
																"nodeType": "YulFunctionCall",
																"src": "2047:88:8"
															},
															"nativeSrc": "2047:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "2047:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2151:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2151:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2154:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2154:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2144:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2144:6:8"
																},
																"nativeSrc": "2144:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2144:15:8"
															},
															"nativeSrc": "2144:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2144:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2175:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2175:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2178:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2178:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2168:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2168:6:8"
																},
																"nativeSrc": "2168:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2168:15:8"
															},
															"nativeSrc": "2168:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2168:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "2009:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "2009:180:8"
											},
											{
												"body": {
													"nativeSrc": "2246:269:8",
													"nodeType": "YulBlock",
													"src": "2246:269:8",
													"statements": [
														{
															"nativeSrc": "2256:22:8",
															"nodeType": "YulAssignment",
															"src": "2256:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2270:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2270:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2276:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2276:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2266:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2266:3:8"
																},
																"nativeSrc": "2266:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2266:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2256:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2256:6:8"
																}
															]
														},
														{
															"nativeSrc": "2287:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2287:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2317:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2317:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2323:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2323:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2313:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2313:3:8"
																},
																"nativeSrc": "2313:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2313:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2291:18:8",
																	"nodeType": "YulTypedName",
																	"src": "2291:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2364:51:8",
																"nodeType": "YulBlock",
																"src": "2364:51:8",
																"statements": [
																	{
																		"nativeSrc": "2378:27:8",
																		"nodeType": "YulAssignment",
																		"src": "2378:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2392:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2392:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2400:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2400:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2388:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2388:3:8"
																			},
																			"nativeSrc": "2388:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2388:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2378:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2378:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2344:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2344:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2337:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2337:6:8"
																},
																"nativeSrc": "2337:26:8",
																"nodeType": "YulFunctionCall",
																"src": "2337:26:8"
															},
															"nativeSrc": "2334:81:8",
															"nodeType": "YulIf",
															"src": "2334:81:8"
														},
														{
															"body": {
																"nativeSrc": "2467:42:8",
																"nodeType": "YulBlock",
																"src": "2467:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2481:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "2481:16:8"
																			},
																			"nativeSrc": "2481:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2481:18:8"
																		},
																		"nativeSrc": "2481:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2481:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2431:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2431:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2454:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2454:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2462:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2462:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2451:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2451:2:8"
																		},
																		"nativeSrc": "2451:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2451:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2428:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2428:2:8"
																},
																"nativeSrc": "2428:38:8",
																"nodeType": "YulFunctionCall",
																"src": "2428:38:8"
															},
															"nativeSrc": "2425:84:8",
															"nodeType": "YulIf",
															"src": "2425:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2195:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2230:4:8",
														"nodeType": "YulTypedName",
														"src": "2230:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2239:6:8",
														"nodeType": "YulTypedName",
														"src": "2239:6:8",
														"type": ""
													}
												],
												"src": "2195:320:8"
											},
											{
												"body": {
													"nativeSrc": "2575:87:8",
													"nodeType": "YulBlock",
													"src": "2575:87:8",
													"statements": [
														{
															"nativeSrc": "2585:11:8",
															"nodeType": "YulAssignment",
															"src": "2585:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "2593:3:8",
																"nodeType": "YulIdentifier",
																"src": "2593:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2585:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2585:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2613:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2613:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2616:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2616:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2606:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2606:6:8"
																},
																"nativeSrc": "2606:14:8",
																"nodeType": "YulFunctionCall",
																"src": "2606:14:8"
															},
															"nativeSrc": "2606:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "2606:14:8"
														},
														{
															"nativeSrc": "2629:26:8",
															"nodeType": "YulAssignment",
															"src": "2629:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2647:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2647:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2650:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2650:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2637:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "2637:9:8"
																},
																"nativeSrc": "2637:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2637:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2629:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2629:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2521:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2562:3:8",
														"nodeType": "YulTypedName",
														"src": "2562:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2570:4:8",
														"nodeType": "YulTypedName",
														"src": "2570:4:8",
														"type": ""
													}
												],
												"src": "2521:141:8"
											},
											{
												"body": {
													"nativeSrc": "2712:49:8",
													"nodeType": "YulBlock",
													"src": "2712:49:8",
													"statements": [
														{
															"nativeSrc": "2722:33:8",
															"nodeType": "YulAssignment",
															"src": "2722:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2740:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2740:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2747:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2747:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2736:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2736:3:8"
																		},
																		"nativeSrc": "2736:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2736:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2752:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2752:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2732:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2732:3:8"
																},
																"nativeSrc": "2732:23:8",
																"nodeType": "YulFunctionCall",
																"src": "2732:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2722:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2722:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2668:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2695:5:8",
														"nodeType": "YulTypedName",
														"src": "2695:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2705:6:8",
														"nodeType": "YulTypedName",
														"src": "2705:6:8",
														"type": ""
													}
												],
												"src": "2668:93:8"
											},
											{
												"body": {
													"nativeSrc": "2820:54:8",
													"nodeType": "YulBlock",
													"src": "2820:54:8",
													"statements": [
														{
															"nativeSrc": "2830:37:8",
															"nodeType": "YulAssignment",
															"src": "2830:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2855:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2855:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2861:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2861:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2851:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2851:3:8"
																},
																"nativeSrc": "2851:16:8",
																"nodeType": "YulFunctionCall",
																"src": "2851:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2830:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "2830:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2767:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2795:4:8",
														"nodeType": "YulTypedName",
														"src": "2795:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2801:5:8",
														"nodeType": "YulTypedName",
														"src": "2801:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2811:8:8",
														"nodeType": "YulTypedName",
														"src": "2811:8:8",
														"type": ""
													}
												],
												"src": "2767:107:8"
											},
											{
												"body": {
													"nativeSrc": "2956:317:8",
													"nodeType": "YulBlock",
													"src": "2956:317:8",
													"statements": [
														{
															"nativeSrc": "2966:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2966:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2987:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "2987:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2999:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2999:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2983:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2983:3:8"
																},
																"nativeSrc": "2983:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2983:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2970:9:8",
																	"nodeType": "YulTypedName",
																	"src": "2970:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3010:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3010:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3041:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3041:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3052:66:8",
																		"nodeType": "YulLiteral",
																		"src": "3052:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3022:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3022:18:8"
																},
																"nativeSrc": "3022:97:8",
																"nodeType": "YulFunctionCall",
																"src": "3022:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3014:4:8",
																	"nodeType": "YulTypedName",
																	"src": "3014:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3128:51:8",
															"nodeType": "YulAssignment",
															"src": "3128:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3159:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3159:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "3170:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "3170:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3140:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3140:18:8"
																},
																"nativeSrc": "3140:39:8",
																"nodeType": "YulFunctionCall",
																"src": "3140:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "3128:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "3128:8:8"
																}
															]
														},
														{
															"nativeSrc": "3188:30:8",
															"nodeType": "YulAssignment",
															"src": "3188:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3201:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3201:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3212:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "3212:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3208:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3208:3:8"
																		},
																		"nativeSrc": "3208:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3208:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3197:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3197:3:8"
																},
																"nativeSrc": "3197:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3197:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3188:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3188:5:8"
																}
															]
														},
														{
															"nativeSrc": "3227:40:8",
															"nodeType": "YulAssignment",
															"src": "3227:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3240:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3240:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "3251:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "3251:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "3261:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "3261:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3247:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3247:3:8"
																		},
																		"nativeSrc": "3247:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3247:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3237:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3237:2:8"
																},
																"nativeSrc": "3237:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3237:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3227:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3227:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2880:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2917:5:8",
														"nodeType": "YulTypedName",
														"src": "2917:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2924:10:8",
														"nodeType": "YulTypedName",
														"src": "2924:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2936:8:8",
														"nodeType": "YulTypedName",
														"src": "2936:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2949:6:8",
														"nodeType": "YulTypedName",
														"src": "2949:6:8",
														"type": ""
													}
												],
												"src": "2880:393:8"
											},
											{
												"body": {
													"nativeSrc": "3311:28:8",
													"nodeType": "YulBlock",
													"src": "3311:28:8",
													"statements": [
														{
															"nativeSrc": "3321:12:8",
															"nodeType": "YulAssignment",
															"src": "3321:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "3328:5:8",
																"nodeType": "YulIdentifier",
																"src": "3328:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3321:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3321:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3279:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3297:5:8",
														"nodeType": "YulTypedName",
														"src": "3297:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3307:3:8",
														"nodeType": "YulTypedName",
														"src": "3307:3:8",
														"type": ""
													}
												],
												"src": "3279:60:8"
											},
											{
												"body": {
													"nativeSrc": "3405:82:8",
													"nodeType": "YulBlock",
													"src": "3405:82:8",
													"statements": [
														{
															"nativeSrc": "3415:66:8",
															"nodeType": "YulAssignment",
															"src": "3415:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3473:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3473:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3455:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "3455:17:8"
																				},
																				"nativeSrc": "3455:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3455:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3446:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "3446:8:8"
																		},
																		"nativeSrc": "3446:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3446:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3428:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "3428:17:8"
																},
																"nativeSrc": "3428:53:8",
																"nodeType": "YulFunctionCall",
																"src": "3428:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3415:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "3415:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3345:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3385:5:8",
														"nodeType": "YulTypedName",
														"src": "3385:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3395:9:8",
														"nodeType": "YulTypedName",
														"src": "3395:9:8",
														"type": ""
													}
												],
												"src": "3345:142:8"
											},
											{
												"body": {
													"nativeSrc": "3540:28:8",
													"nodeType": "YulBlock",
													"src": "3540:28:8",
													"statements": [
														{
															"nativeSrc": "3550:12:8",
															"nodeType": "YulAssignment",
															"src": "3550:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "3557:5:8",
																"nodeType": "YulIdentifier",
																"src": "3557:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3550:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3550:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3493:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3526:5:8",
														"nodeType": "YulTypedName",
														"src": "3526:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3536:3:8",
														"nodeType": "YulTypedName",
														"src": "3536:3:8",
														"type": ""
													}
												],
												"src": "3493:75:8"
											},
											{
												"body": {
													"nativeSrc": "3650:193:8",
													"nodeType": "YulBlock",
													"src": "3650:193:8",
													"statements": [
														{
															"nativeSrc": "3660:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3660:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3715:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "3715:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3684:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "3684:30:8"
																},
																"nativeSrc": "3684:39:8",
																"nodeType": "YulFunctionCall",
																"src": "3684:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3664:16:8",
																	"nodeType": "YulTypedName",
																	"src": "3664:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3739:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3739:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3779:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "3779:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3773:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "3773:5:8"
																				},
																				"nativeSrc": "3773:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3773:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3786:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3786:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3818:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "3818:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3794:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "3794:23:8"
																				},
																				"nativeSrc": "3794:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3794:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3745:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "3745:27:8"
																		},
																		"nativeSrc": "3745:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3745:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3732:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3732:6:8"
																},
																"nativeSrc": "3732:105:8",
																"nodeType": "YulFunctionCall",
																"src": "3732:105:8"
															},
															"nativeSrc": "3732:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "3732:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3574:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3627:4:8",
														"nodeType": "YulTypedName",
														"src": "3627:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3633:6:8",
														"nodeType": "YulTypedName",
														"src": "3633:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3641:7:8",
														"nodeType": "YulTypedName",
														"src": "3641:7:8",
														"type": ""
													}
												],
												"src": "3574:269:8"
											},
											{
												"body": {
													"nativeSrc": "3898:24:8",
													"nodeType": "YulBlock",
													"src": "3898:24:8",
													"statements": [
														{
															"nativeSrc": "3908:8:8",
															"nodeType": "YulAssignment",
															"src": "3908:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "3915:1:8",
																"nodeType": "YulLiteral",
																"src": "3915:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3908:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3908:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3849:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3894:3:8",
														"nodeType": "YulTypedName",
														"src": "3894:3:8",
														"type": ""
													}
												],
												"src": "3849:73:8"
											},
											{
												"body": {
													"nativeSrc": "3981:136:8",
													"nodeType": "YulBlock",
													"src": "3981:136:8",
													"statements": [
														{
															"nativeSrc": "3991:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3991:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "4005:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "4005:30:8"
																},
																"nativeSrc": "4005:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4005:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3995:6:8",
																	"nodeType": "YulTypedName",
																	"src": "3995:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4090:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4090:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4096:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4096:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "4104:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4104:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "4046:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "4046:43:8"
																},
																"nativeSrc": "4046:65:8",
																"nodeType": "YulFunctionCall",
																"src": "4046:65:8"
															},
															"nativeSrc": "4046:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "4046:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3928:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3967:4:8",
														"nodeType": "YulTypedName",
														"src": "3967:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3973:6:8",
														"nodeType": "YulTypedName",
														"src": "3973:6:8",
														"type": ""
													}
												],
												"src": "3928:189:8"
											},
											{
												"body": {
													"nativeSrc": "4173:136:8",
													"nodeType": "YulBlock",
													"src": "4173:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4240:63:8",
																"nodeType": "YulBlock",
																"src": "4240:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4284:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4284:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4291:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4291:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4254:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "4254:29:8"
																			},
																			"nativeSrc": "4254:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4254:39:8"
																		},
																		"nativeSrc": "4254:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4254:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4193:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4193:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4200:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4200:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4190:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4190:2:8"
																},
																"nativeSrc": "4190:14:8",
																"nodeType": "YulFunctionCall",
																"src": "4190:14:8"
															},
															"nativeSrc": "4183:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4205:26:8",
																"nodeType": "YulBlock",
																"src": "4205:26:8",
																"statements": [
																	{
																		"nativeSrc": "4207:22:8",
																		"nodeType": "YulAssignment",
																		"src": "4207:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4220:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4220:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4227:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4227:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4216:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4216:3:8"
																			},
																			"nativeSrc": "4216:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4216:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4207:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4207:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4187:2:8",
																"nodeType": "YulBlock",
																"src": "4187:2:8",
																"statements": []
															},
															"src": "4183:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4123:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4161:5:8",
														"nodeType": "YulTypedName",
														"src": "4161:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4168:3:8",
														"nodeType": "YulTypedName",
														"src": "4168:3:8",
														"type": ""
													}
												],
												"src": "4123:186:8"
											},
											{
												"body": {
													"nativeSrc": "4394:464:8",
													"nodeType": "YulBlock",
													"src": "4394:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4420:431:8",
																"nodeType": "YulBlock",
																"src": "4420:431:8",
																"statements": [
																	{
																		"nativeSrc": "4434:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4434:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4482:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4482:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4450:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "4450:31:8"
																			},
																			"nativeSrc": "4450:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4450:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4438:8:8",
																				"nodeType": "YulTypedName",
																				"src": "4438:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4501:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4501:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4524:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "4524:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4552:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "4552:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4534:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "4534:17:8"
																					},
																					"nativeSrc": "4534:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4534:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4520:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4520:3:8"
																			},
																			"nativeSrc": "4520:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4520:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4505:11:8",
																				"nodeType": "YulTypedName",
																				"src": "4505:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4721:27:8",
																			"nodeType": "YulBlock",
																			"src": "4721:27:8",
																			"statements": [
																				{
																					"nativeSrc": "4723:23:8",
																					"nodeType": "YulAssignment",
																					"src": "4723:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4738:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "4738:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4723:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "4723:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4705:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "4705:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4717:2:8",
																					"nodeType": "YulLiteral",
																					"src": "4717:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4702:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "4702:2:8"
																			},
																			"nativeSrc": "4702:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4702:18:8"
																		},
																		"nativeSrc": "4699:49:8",
																		"nodeType": "YulIf",
																		"src": "4699:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4790:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "4790:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4807:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "4807:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4835:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "4835:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4817:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "4817:17:8"
																							},
																							"nativeSrc": "4817:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "4817:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4803:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "4803:3:8"
																					},
																					"nativeSrc": "4803:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4803:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4761:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "4761:28:8"
																			},
																			"nativeSrc": "4761:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4761:80:8"
																		},
																		"nativeSrc": "4761:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4761:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4411:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4411:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4416:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4416:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4408:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4408:2:8"
																},
																"nativeSrc": "4408:11:8",
																"nodeType": "YulFunctionCall",
																"src": "4408:11:8"
															},
															"nativeSrc": "4405:446:8",
															"nodeType": "YulIf",
															"src": "4405:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4315:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4370:5:8",
														"nodeType": "YulTypedName",
														"src": "4370:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4377:3:8",
														"nodeType": "YulTypedName",
														"src": "4377:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4382:10:8",
														"nodeType": "YulTypedName",
														"src": "4382:10:8",
														"type": ""
													}
												],
												"src": "4315:543:8"
											},
											{
												"body": {
													"nativeSrc": "4927:54:8",
													"nodeType": "YulBlock",
													"src": "4927:54:8",
													"statements": [
														{
															"nativeSrc": "4937:37:8",
															"nodeType": "YulAssignment",
															"src": "4937:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4962:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4962:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4968:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4968:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4958:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4958:3:8"
																},
																"nativeSrc": "4958:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4958:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4937:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "4937:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4864:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4902:4:8",
														"nodeType": "YulTypedName",
														"src": "4902:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4908:5:8",
														"nodeType": "YulTypedName",
														"src": "4908:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4918:8:8",
														"nodeType": "YulTypedName",
														"src": "4918:8:8",
														"type": ""
													}
												],
												"src": "4864:117:8"
											},
											{
												"body": {
													"nativeSrc": "5038:118:8",
													"nodeType": "YulBlock",
													"src": "5038:118:8",
													"statements": [
														{
															"nativeSrc": "5048:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5048:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5097:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5097:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "5100:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "5100:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5093:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5093:3:8"
																				},
																				"nativeSrc": "5093:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5093:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5112:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5112:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5108:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5108:3:8"
																				},
																				"nativeSrc": "5108:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5108:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "5064:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "5064:28:8"
																		},
																		"nativeSrc": "5064:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5064:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "5060:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5060:3:8"
																},
																"nativeSrc": "5060:56:8",
																"nodeType": "YulFunctionCall",
																"src": "5060:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5052:4:8",
																	"nodeType": "YulTypedName",
																	"src": "5052:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5125:25:8",
															"nodeType": "YulAssignment",
															"src": "5125:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5139:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5139:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5145:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5145:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5135:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5135:3:8"
																},
																"nativeSrc": "5135:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5135:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5125:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5125:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4987:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5015:4:8",
														"nodeType": "YulTypedName",
														"src": "5015:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "5021:5:8",
														"nodeType": "YulTypedName",
														"src": "5021:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5031:6:8",
														"nodeType": "YulTypedName",
														"src": "5031:6:8",
														"type": ""
													}
												],
												"src": "4987:169:8"
											},
											{
												"body": {
													"nativeSrc": "5242:214:8",
													"nodeType": "YulBlock",
													"src": "5242:214:8",
													"statements": [
														{
															"nativeSrc": "5375:37:8",
															"nodeType": "YulAssignment",
															"src": "5375:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5402:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5402:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5408:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5408:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5383:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "5383:18:8"
																},
																"nativeSrc": "5383:29:8",
																"nodeType": "YulFunctionCall",
																"src": "5383:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5375:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5375:4:8"
																}
															]
														},
														{
															"nativeSrc": "5421:29:8",
															"nodeType": "YulAssignment",
															"src": "5421:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5432:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5432:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5442:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5442:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5445:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "5445:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5438:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5438:3:8"
																		},
																		"nativeSrc": "5438:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5438:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5429:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5429:2:8"
																},
																"nativeSrc": "5429:21:8",
																"nodeType": "YulFunctionCall",
																"src": "5429:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5421:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5421:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5161:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5223:4:8",
														"nodeType": "YulTypedName",
														"src": "5223:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5229:3:8",
														"nodeType": "YulTypedName",
														"src": "5229:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5237:4:8",
														"nodeType": "YulTypedName",
														"src": "5237:4:8",
														"type": ""
													}
												],
												"src": "5161:295:8"
											},
											{
												"body": {
													"nativeSrc": "5553:1303:8",
													"nodeType": "YulBlock",
													"src": "5553:1303:8",
													"statements": [
														{
															"nativeSrc": "5564:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5564:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5611:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5611:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5578:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "5578:32:8"
																},
																"nativeSrc": "5578:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5578:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5568:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5568:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5700:22:8",
																"nodeType": "YulBlock",
																"src": "5700:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5702:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5702:16:8"
																			},
																			"nativeSrc": "5702:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5702:18:8"
																		},
																		"nativeSrc": "5702:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5702:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5672:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5672:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5680:18:8",
																		"nodeType": "YulLiteral",
																		"src": "5680:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5669:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5669:2:8"
																},
																"nativeSrc": "5669:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5669:30:8"
															},
															"nativeSrc": "5666:56:8",
															"nodeType": "YulIf",
															"src": "5666:56:8"
														},
														{
															"nativeSrc": "5732:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5732:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5778:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "5778:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5772:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "5772:5:8"
																		},
																		"nativeSrc": "5772:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5772:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5746:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "5746:25:8"
																},
																"nativeSrc": "5746:38:8",
																"nodeType": "YulFunctionCall",
																"src": "5746:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5736:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5736:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5877:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5877:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5883:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5883:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5891:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5891:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5831:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "5831:45:8"
																},
																"nativeSrc": "5831:67:8",
																"nodeType": "YulFunctionCall",
																"src": "5831:67:8"
															},
															"nativeSrc": "5831:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "5831:67:8"
														},
														{
															"nativeSrc": "5908:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5908:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "5925:1:8",
																"nodeType": "YulLiteral",
																"src": "5925:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5912:9:8",
																	"nodeType": "YulTypedName",
																	"src": "5912:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5936:17:8",
															"nodeType": "YulAssignment",
															"src": "5936:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "5949:4:8",
																"nodeType": "YulLiteral",
																"src": "5949:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5936:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "5936:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6000:611:8",
																		"nodeType": "YulBlock",
																		"src": "6000:611:8",
																		"statements": [
																			{
																				"nativeSrc": "6014:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6014:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "6033:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "6033:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6045:4:8",
																									"nodeType": "YulLiteral",
																									"src": "6045:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "6041:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "6041:3:8"
																							},
																							"nativeSrc": "6041:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6041:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "6029:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "6029:3:8"
																					},
																					"nativeSrc": "6029:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6029:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "6018:7:8",
																						"nodeType": "YulTypedName",
																						"src": "6018:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6065:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6065:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6111:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6111:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "6079:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "6079:31:8"
																					},
																					"nativeSrc": "6079:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6079:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "6069:6:8",
																						"nodeType": "YulTypedName",
																						"src": "6069:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6129:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6129:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6138:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6138:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6133:1:8",
																						"nodeType": "YulTypedName",
																						"src": "6133:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6197:163:8",
																					"nodeType": "YulBlock",
																					"src": "6197:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6222:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6222:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6240:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "6240:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6245:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "6245:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6236:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "6236:3:8"
																												},
																												"nativeSrc": "6236:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "6236:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6230:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "6230:5:8"
																										},
																										"nativeSrc": "6230:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6230:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6215:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6215:6:8"
																								},
																								"nativeSrc": "6215:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6215:42:8"
																							},
																							"nativeSrc": "6215:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "6215:42:8"
																						},
																						{
																							"nativeSrc": "6274:24:8",
																							"nodeType": "YulAssignment",
																							"src": "6274:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6288:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6288:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6296:1:8",
																										"nodeType": "YulLiteral",
																										"src": "6296:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6284:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6284:3:8"
																								},
																								"nativeSrc": "6284:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6284:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6274:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6274:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6315:31:8",
																							"nodeType": "YulAssignment",
																							"src": "6315:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6332:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "6332:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6343:2:8",
																										"nodeType": "YulLiteral",
																										"src": "6343:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6328:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6328:3:8"
																								},
																								"nativeSrc": "6328:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6328:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6315:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "6315:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6163:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "6163:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6166:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "6166:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6160:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "6160:2:8"
																					},
																					"nativeSrc": "6160:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6160:14:8"
																				},
																				"nativeSrc": "6152:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6175:21:8",
																					"nodeType": "YulBlock",
																					"src": "6175:21:8",
																					"statements": [
																						{
																							"nativeSrc": "6177:17:8",
																							"nodeType": "YulAssignment",
																							"src": "6177:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6186:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "6186:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6189:4:8",
																										"nodeType": "YulLiteral",
																										"src": "6189:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6182:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6182:3:8"
																								},
																								"nativeSrc": "6182:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6182:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6177:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "6177:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6156:3:8",
																					"nodeType": "YulBlock",
																					"src": "6156:3:8",
																					"statements": []
																				},
																				"src": "6152:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "6396:156:8",
																					"nodeType": "YulBlock",
																					"src": "6396:156:8",
																					"statements": [
																						{
																							"nativeSrc": "6414:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6414:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6441:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "6441:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6446:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6446:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6437:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "6437:3:8"
																										},
																										"nativeSrc": "6437:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6437:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6431:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6431:5:8"
																								},
																								"nativeSrc": "6431:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6431:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6418:9:8",
																									"nodeType": "YulTypedName",
																									"src": "6418:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6481:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6481:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6508:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6508:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6523:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "6523:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6531:4:8",
																														"nodeType": "YulLiteral",
																														"src": "6531:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6519:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "6519:3:8"
																												},
																												"nativeSrc": "6519:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "6519:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6489:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "6489:18:8"
																										},
																										"nativeSrc": "6489:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6489:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6474:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6474:6:8"
																								},
																								"nativeSrc": "6474:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6474:64:8"
																							},
																							"nativeSrc": "6474:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "6474:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6379:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "6379:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6388:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "6388:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6376:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "6376:2:8"
																					},
																					"nativeSrc": "6376:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6376:19:8"
																				},
																				"nativeSrc": "6373:179:8",
																				"nodeType": "YulIf",
																				"src": "6373:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6572:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6572:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6586:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "6586:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6594:1:8",
																											"nodeType": "YulLiteral",
																											"src": "6594:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6582:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "6582:3:8"
																									},
																									"nativeSrc": "6582:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "6582:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6598:1:8",
																									"nodeType": "YulLiteral",
																									"src": "6598:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6578:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "6578:3:8"
																							},
																							"nativeSrc": "6578:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6578:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6565:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6565:6:8"
																					},
																					"nativeSrc": "6565:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6565:36:8"
																				},
																				"nativeSrc": "6565:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6565:36:8"
																			}
																		]
																	},
																	"nativeSrc": "5993:618:8",
																	"nodeType": "YulCase",
																	"src": "5993:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5998:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5998:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6628:222:8",
																		"nodeType": "YulBlock",
																		"src": "6628:222:8",
																		"statements": [
																			{
																				"nativeSrc": "6642:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6642:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6655:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6655:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6646:5:8",
																						"nodeType": "YulTypedName",
																						"src": "6646:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6679:67:8",
																					"nodeType": "YulBlock",
																					"src": "6679:67:8",
																					"statements": [
																						{
																							"nativeSrc": "6697:35:8",
																							"nodeType": "YulAssignment",
																							"src": "6697:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6716:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "6716:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6721:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6721:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6712:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "6712:3:8"
																										},
																										"nativeSrc": "6712:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6712:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6706:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6706:5:8"
																								},
																								"nativeSrc": "6706:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6706:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6697:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6697:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6672:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6672:6:8"
																				},
																				"nativeSrc": "6669:77:8",
																				"nodeType": "YulIf",
																				"src": "6669:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6766:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6766:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6825:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6825:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6832:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6832:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6772:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "6772:52:8"
																							},
																							"nativeSrc": "6772:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6772:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6759:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6759:6:8"
																					},
																					"nativeSrc": "6759:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6759:81:8"
																				},
																				"nativeSrc": "6759:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6759:81:8"
																			}
																		]
																	},
																	"nativeSrc": "6620:230:8",
																	"nodeType": "YulCase",
																	"src": "6620:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5973:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5973:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5981:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5981:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5970:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5970:2:8"
																},
																"nativeSrc": "5970:14:8",
																"nodeType": "YulFunctionCall",
																"src": "5970:14:8"
															},
															"nativeSrc": "5963:887:8",
															"nodeType": "YulSwitch",
															"src": "5963:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5461:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5542:4:8",
														"nodeType": "YulTypedName",
														"src": "5542:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5548:3:8",
														"nodeType": "YulTypedName",
														"src": "5548:3:8",
														"type": ""
													}
												],
												"src": "5461:1395:8"
											},
											{
												"body": {
													"nativeSrc": "6927:53:8",
													"nodeType": "YulBlock",
													"src": "6927:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6944:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6944:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6967:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6967:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6949:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "6949:17:8"
																		},
																		"nativeSrc": "6949:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6949:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6937:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6937:6:8"
																},
																"nativeSrc": "6937:37:8",
																"nodeType": "YulFunctionCall",
																"src": "6937:37:8"
															},
															"nativeSrc": "6937:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "6937:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6862:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6915:5:8",
														"nodeType": "YulTypedName",
														"src": "6915:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6922:3:8",
														"nodeType": "YulTypedName",
														"src": "6922:3:8",
														"type": ""
													}
												],
												"src": "6862:118:8"
											},
											{
												"body": {
													"nativeSrc": "7084:124:8",
													"nodeType": "YulBlock",
													"src": "7084:124:8",
													"statements": [
														{
															"nativeSrc": "7094:26:8",
															"nodeType": "YulAssignment",
															"src": "7094:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7106:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7106:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7117:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7117:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7102:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7102:3:8"
																},
																"nativeSrc": "7102:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7102:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7094:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7094:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7174:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7174:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7187:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7187:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7198:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7198:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7183:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7183:3:8"
																		},
																		"nativeSrc": "7183:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7183:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7130:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7130:43:8"
																},
																"nativeSrc": "7130:71:8",
																"nodeType": "YulFunctionCall",
																"src": "7130:71:8"
															},
															"nativeSrc": "7130:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "7130:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6986:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7056:9:8",
														"nodeType": "YulTypedName",
														"src": "7056:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7068:6:8",
														"nodeType": "YulTypedName",
														"src": "7068:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7079:4:8",
														"nodeType": "YulTypedName",
														"src": "7079:4:8",
														"type": ""
													}
												],
												"src": "6986:222:8"
											},
											{
												"body": {
													"nativeSrc": "7242:152:8",
													"nodeType": "YulBlock",
													"src": "7242:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7259:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7259:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7262:77:8",
																		"nodeType": "YulLiteral",
																		"src": "7262:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7252:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7252:6:8"
																},
																"nativeSrc": "7252:88:8",
																"nodeType": "YulFunctionCall",
																"src": "7252:88:8"
															},
															"nativeSrc": "7252:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "7252:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7356:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7356:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7359:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7359:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7349:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7349:6:8"
																},
																"nativeSrc": "7349:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7349:15:8"
															},
															"nativeSrc": "7349:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7349:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7380:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7380:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7383:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7383:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7373:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7373:6:8"
																},
																"nativeSrc": "7373:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7373:15:8"
															},
															"nativeSrc": "7373:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7373:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7214:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "7214:180:8"
											},
											{
												"body": {
													"nativeSrc": "7443:43:8",
													"nodeType": "YulBlock",
													"src": "7443:43:8",
													"statements": [
														{
															"nativeSrc": "7453:27:8",
															"nodeType": "YulAssignment",
															"src": "7453:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7468:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7468:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7475:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7475:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7464:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7464:3:8"
																},
																"nativeSrc": "7464:16:8",
																"nodeType": "YulFunctionCall",
																"src": "7464:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7453:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "7453:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "7400:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7425:5:8",
														"nodeType": "YulTypedName",
														"src": "7425:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7435:7:8",
														"nodeType": "YulTypedName",
														"src": "7435:7:8",
														"type": ""
													}
												],
												"src": "7400:86:8"
											},
											{
												"body": {
													"nativeSrc": "7533:126:8",
													"nodeType": "YulBlock",
													"src": "7533:126:8",
													"statements": [
														{
															"nativeSrc": "7543:31:8",
															"nodeType": "YulAssignment",
															"src": "7543:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7568:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7568:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "7552:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "7552:15:8"
																},
																"nativeSrc": "7552:22:8",
																"nodeType": "YulFunctionCall",
																"src": "7552:22:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7543:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "7543:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7602:22:8",
																"nodeType": "YulBlock",
																"src": "7602:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7604:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "7604:16:8"
																			},
																			"nativeSrc": "7604:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7604:18:8"
																		},
																		"nativeSrc": "7604:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7604:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7589:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7589:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7596:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7596:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7586:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7586:2:8"
																},
																"nativeSrc": "7586:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7586:15:8"
															},
															"nativeSrc": "7583:41:8",
															"nodeType": "YulIf",
															"src": "7583:41:8"
														},
														{
															"nativeSrc": "7633:20:8",
															"nodeType": "YulAssignment",
															"src": "7633:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7644:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7644:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7651:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7651:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7640:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7640:3:8"
																},
																"nativeSrc": "7640:13:8",
																"nodeType": "YulFunctionCall",
																"src": "7640:13:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7633:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7633:3:8"
																}
															]
														}
													]
												},
												"name": "increment_t_uint8",
												"nativeSrc": "7492:167:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7519:5:8",
														"nodeType": "YulTypedName",
														"src": "7519:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7529:3:8",
														"nodeType": "YulTypedName",
														"src": "7529:3:8",
														"type": ""
													}
												],
												"src": "7492:167:8"
											},
											{
												"body": {
													"nativeSrc": "7709:147:8",
													"nodeType": "YulBlock",
													"src": "7709:147:8",
													"statements": [
														{
															"nativeSrc": "7719:25:8",
															"nodeType": "YulAssignment",
															"src": "7719:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7742:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7742:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7724:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7724:17:8"
																},
																"nativeSrc": "7724:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7724:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7719:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7719:1:8"
																}
															]
														},
														{
															"nativeSrc": "7753:25:8",
															"nodeType": "YulAssignment",
															"src": "7753:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7776:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7776:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7758:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7758:17:8"
																},
																"nativeSrc": "7758:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7758:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7753:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7753:1:8"
																}
															]
														},
														{
															"nativeSrc": "7787:16:8",
															"nodeType": "YulAssignment",
															"src": "7787:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7798:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7798:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7801:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7801:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7794:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7794:3:8"
																},
																"nativeSrc": "7794:9:8",
																"nodeType": "YulFunctionCall",
																"src": "7794:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7787:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7787:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7827:22:8",
																"nodeType": "YulBlock",
																"src": "7827:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7829:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "7829:16:8"
																			},
																			"nativeSrc": "7829:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7829:18:8"
																		},
																		"nativeSrc": "7829:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7829:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7819:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7819:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7822:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7822:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7816:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7816:2:8"
																},
																"nativeSrc": "7816:10:8",
																"nodeType": "YulFunctionCall",
																"src": "7816:10:8"
															},
															"nativeSrc": "7813:36:8",
															"nodeType": "YulIf",
															"src": "7813:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7665:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7696:1:8",
														"nodeType": "YulTypedName",
														"src": "7696:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7699:1:8",
														"nodeType": "YulTypedName",
														"src": "7699:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7705:3:8",
														"nodeType": "YulTypedName",
														"src": "7705:3:8",
														"type": ""
													}
												],
												"src": "7665:191:8"
											},
											{
												"body": {
													"nativeSrc": "7927:53:8",
													"nodeType": "YulBlock",
													"src": "7927:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7944:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7944:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7967:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7967:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7949:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "7949:17:8"
																		},
																		"nativeSrc": "7949:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7949:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7937:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7937:6:8"
																},
																"nativeSrc": "7937:37:8",
																"nodeType": "YulFunctionCall",
																"src": "7937:37:8"
															},
															"nativeSrc": "7937:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "7937:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "7862:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7915:5:8",
														"nodeType": "YulTypedName",
														"src": "7915:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7922:3:8",
														"nodeType": "YulTypedName",
														"src": "7922:3:8",
														"type": ""
													}
												],
												"src": "7862:118:8"
											},
											{
												"body": {
													"nativeSrc": "8140:288:8",
													"nodeType": "YulBlock",
													"src": "8140:288:8",
													"statements": [
														{
															"nativeSrc": "8150:26:8",
															"nodeType": "YulAssignment",
															"src": "8150:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8162:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8162:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8173:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8173:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8158:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8158:3:8"
																},
																"nativeSrc": "8158:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8158:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8150:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8150:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8230:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8230:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8243:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8243:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8254:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8254:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8239:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8239:3:8"
																		},
																		"nativeSrc": "8239:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8239:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8186:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8186:43:8"
																},
																"nativeSrc": "8186:71:8",
																"nodeType": "YulFunctionCall",
																"src": "8186:71:8"
															},
															"nativeSrc": "8186:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "8186:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8311:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8311:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8324:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8324:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8335:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8335:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8320:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8320:3:8"
																		},
																		"nativeSrc": "8320:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8320:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8267:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8267:43:8"
																},
																"nativeSrc": "8267:72:8",
																"nodeType": "YulFunctionCall",
																"src": "8267:72:8"
															},
															"nativeSrc": "8267:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "8267:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8393:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8393:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8406:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8406:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8417:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8417:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8402:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8402:3:8"
																		},
																		"nativeSrc": "8402:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8402:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8349:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8349:43:8"
																},
																"nativeSrc": "8349:72:8",
																"nodeType": "YulFunctionCall",
																"src": "8349:72:8"
															},
															"nativeSrc": "8349:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "8349:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7986:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8096:9:8",
														"nodeType": "YulTypedName",
														"src": "8096:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8108:6:8",
														"nodeType": "YulTypedName",
														"src": "8108:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8116:6:8",
														"nodeType": "YulTypedName",
														"src": "8116:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8124:6:8",
														"nodeType": "YulTypedName",
														"src": "8124:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8135:4:8",
														"nodeType": "YulTypedName",
														"src": "8135:4:8",
														"type": ""
													}
												],
												"src": "7986:442:8"
											},
											{
												"body": {
													"nativeSrc": "8532:124:8",
													"nodeType": "YulBlock",
													"src": "8532:124:8",
													"statements": [
														{
															"nativeSrc": "8542:26:8",
															"nodeType": "YulAssignment",
															"src": "8542:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8554:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8554:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8565:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8565:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8550:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8550:3:8"
																},
																"nativeSrc": "8550:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8550:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8542:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8542:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8622:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8622:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8635:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8635:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8646:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8646:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8631:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8631:3:8"
																		},
																		"nativeSrc": "8631:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8631:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8578:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8578:43:8"
																},
																"nativeSrc": "8578:71:8",
																"nodeType": "YulFunctionCall",
																"src": "8578:71:8"
															},
															"nativeSrc": "8578:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "8578:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "8434:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8504:9:8",
														"nodeType": "YulTypedName",
														"src": "8504:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8516:6:8",
														"nodeType": "YulTypedName",
														"src": "8516:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8527:4:8",
														"nodeType": "YulTypedName",
														"src": "8527:4:8",
														"type": ""
													}
												],
												"src": "8434:222:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function increment_t_uint8(value) -> ret {\n        value := cleanup_t_uint8(value)\n        if eq(value, 0xff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x34FB CODESIZE SUB DUP1 PUSH2 0x34FB DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x911 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x446567656E000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44474E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xB80 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0xB80 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x174 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x14F DUP3 PUSH2 0x237 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x15F DUP3 DUP3 PUSH2 0x2C7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x16D PUSH2 0x2E9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0xD68 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x245 PUSH2 0x44D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2B5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C4 DUP2 PUSH2 0x174 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2D5 PUSH2 0x44D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x2E5 DUP3 DUP3 PUSH2 0x4E6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x32F PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E6F76696365204E6176696761746F7200000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x64 PUSH2 0x56B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x376 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D7974686963204D6176657269636B0000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2BC PUSH2 0x56B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3BD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43656C65737469616C2043727573686572000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x4B0 PUSH2 0x56B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x404 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x41737472616C2041636500000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x898 PUSH2 0x56B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x44B PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x446976696E6520446F6D696E61746F7200000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x960 PUSH2 0x56B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x45B PUSH2 0x638 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x47F PUSH2 0x63F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4E4 JUMPI PUSH2 0x4A8 PUSH2 0x638 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DB SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x556 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54D SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x567 PUSH0 DUP4 DUP4 PUSH2 0x667 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x5CF SWAP2 SWAP1 PUSH2 0xB80 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x8 PUSH0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x61B SWAP1 PUSH2 0xCB0 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6B7 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6AB SWAP2 SWAP1 PUSH2 0xCD8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x785 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x740 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x737 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7CC JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x816 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x873 SWAP2 SWAP1 PUSH2 0xD4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8AD DUP3 PUSH2 0x884 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8BD DUP2 PUSH2 0x8A3 JUMP JUMPDEST DUP2 EQ PUSH2 0x8C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x8D8 DUP2 PUSH2 0x8B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8F0 DUP2 PUSH2 0x8DE JUMP JUMPDEST DUP2 EQ PUSH2 0x8FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x90B DUP2 PUSH2 0x8E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x927 JUMPI PUSH2 0x926 PUSH2 0x880 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x934 DUP6 DUP3 DUP7 ADD PUSH2 0x8CA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x945 DUP6 DUP3 DUP7 ADD PUSH2 0x8FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x9CA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x9DD JUMPI PUSH2 0x9DC PUSH2 0x986 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0xA3F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0xA04 JUMP JUMPDEST PUSH2 0xA49 DUP7 DUP4 PUSH2 0xA04 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA84 PUSH2 0xA7F PUSH2 0xA7A DUP5 PUSH2 0x8DE JUMP JUMPDEST PUSH2 0xA61 JUMP JUMPDEST PUSH2 0x8DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA9D DUP4 PUSH2 0xA6A JUMP JUMPDEST PUSH2 0xAB1 PUSH2 0xAA9 DUP3 PUSH2 0xA8B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0xA10 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0xAC5 PUSH2 0xAB9 JUMP JUMPDEST PUSH2 0xAD0 DUP2 DUP5 DUP5 PUSH2 0xA94 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAF3 JUMPI PUSH2 0xAE8 PUSH0 DUP3 PUSH2 0xABD JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xAD6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xB38 JUMPI PUSH2 0xB09 DUP2 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0xB12 DUP5 PUSH2 0x9F5 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xB21 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xB35 PUSH2 0xB2D DUP6 PUSH2 0x9F5 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0xAD5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB58 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xB3D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB70 DUP4 DUP4 PUSH2 0xB49 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB89 DUP3 PUSH2 0x94F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBA2 JUMPI PUSH2 0xBA1 PUSH2 0x959 JUMP JUMPDEST JUMPDEST PUSH2 0xBAC DUP3 SLOAD PUSH2 0x9B3 JUMP JUMPDEST PUSH2 0xBB7 DUP3 DUP3 DUP6 PUSH2 0xAF7 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xBE8 JUMPI PUSH0 DUP5 ISZERO PUSH2 0xBD6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xBE0 DUP6 DUP3 PUSH2 0xB65 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xC47 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xBF6 DUP7 PUSH2 0x9E3 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xC1D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xBF8 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xC3A JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xC36 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xB49 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC58 DUP2 PUSH2 0x8A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC71 PUSH0 DUP4 ADD DUP5 PUSH2 0xC4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCBA DUP3 PUSH2 0xCA4 JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 SUB PUSH2 0xCCD JUMPI PUSH2 0xCCC PUSH2 0xC77 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCE2 DUP3 PUSH2 0x8DE JUMP JUMPDEST SWAP2 POP PUSH2 0xCED DUP4 PUSH2 0x8DE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD05 JUMPI PUSH2 0xD04 PUSH2 0xC77 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD14 DUP2 PUSH2 0x8DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD2D PUSH0 DUP4 ADD DUP7 PUSH2 0xC4F JUMP JUMPDEST PUSH2 0xD3A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD0B JUMP JUMPDEST PUSH2 0xD47 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD0B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD62 PUSH0 DUP4 ADD DUP5 PUSH2 0xD0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2786 DUP1 PUSH2 0xD75 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x156 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xC81D7604 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xC81D7604 EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0xCE6019B4 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xD917BD27 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0xE3AF42E1 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x453 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0xAF3BCB7D EQ PUSH2 0x380 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x4C738909 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x6D1B229D EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BE JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x9CEB537 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x1072CBEA EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FE JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x162 PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x19F2 JUMP JUMPDEST PUSH2 0x521 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0x67F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E8 PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x236 PUSH2 0x710 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x1AC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0x718 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x282 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x1ADC JUMP JUMPDEST PUSH2 0x72E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28C PUSH2 0x742 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x1ADC JUMP JUMPDEST PUSH2 0x751 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x1B07 JUMP JUMPDEST PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F6 PUSH2 0x7ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x312 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0x800 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31C PUSH2 0x820 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33A PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x395 SWAP2 SWAP1 PUSH2 0x1B84 JUMP JUMPDEST PUSH2 0x8FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A4 PUSH2 0xB2A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0x1B07 JUMP JUMPDEST PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0x1C66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0x1B84 JUMP JUMPDEST PUSH2 0xD85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FE SWAP3 SWAP2 SWAP1 PUSH2 0x1C86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x421 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41C SWAP2 SWAP1 PUSH2 0x1CB4 JUMP JUMPDEST PUSH2 0xE75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x451 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x1E1E JUMP JUMPDEST PUSH2 0xEF7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x468 SWAP2 SWAP1 PUSH2 0x1B07 JUMP JUMPDEST PUSH2 0xF0D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x47E SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4AA SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4F5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4CC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4F5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4D8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x509 PUSH2 0xF91 JUMP JUMPDEST SWAP1 POP PUSH2 0x516 DUP2 DUP6 DUP6 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x52B CALLER PUSH2 0x7A8 JUMP JUMPDEST LT ISZERO PUSH2 0x56C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x563 SWAP1 PUSH2 0x1F1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA TIMESTAMP CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x582 SWAP3 SWAP2 SWAP1 PUSH2 0x1FA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH0 SHR PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0x1FFA JUMP JUMPDEST SWAP1 POP PUSH1 0x5 DUP2 LT ISZERO ISZERO DUP4 ISZERO ISZERO SUB PUSH2 0x620 JUMPI PUSH2 0x5CA CALLER PUSH1 0x2 DUP5 PUSH2 0x5C5 SWAP2 SWAP1 PUSH2 0x2057 JUMP JUMPDEST PUSH2 0xFAA JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD04D9689D8E43BC0BACEA67661EF472DCF321F34F08AF72F651AF30C4C866587 DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x613 SWAP3 SWAP2 SWAP1 PUSH2 0x20E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x67A JUMP JUMPDEST PUSH2 0x629 DUP3 PUSH2 0x72E JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD04D9689D8E43BC0BACEA67661EF472DCF321F34F08AF72F651AF30C4C866587 DUP3 PUSH0 PUSH1 0x40 MLOAD PUSH2 0x671 SWAP3 SWAP2 SWAP1 PUSH2 0x2166 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x689 CALLER PUSH2 0x7A8 JUMP JUMPDEST LT ISZERO PUSH2 0x6CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C1 SWAP1 PUSH2 0x1F1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6D5 CALLER DUP4 DUP4 PUSH2 0x1029 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6EC PUSH2 0xF91 JUMP JUMPDEST SWAP1 POP PUSH2 0x6F9 DUP6 DUP3 DUP6 PUSH2 0x1119 JUMP JUMPDEST PUSH2 0x704 DUP6 DUP6 DUP6 PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x720 PUSH2 0x11AB JUMP JUMPDEST PUSH2 0x72A DUP3 DUP3 PUSH2 0xFAA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x73F PUSH2 0x739 PUSH2 0xF91 JUMP JUMPDEST DUP3 PUSH2 0x1232 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x74C CALLER PUSH2 0x7A8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x75B CALLER PUSH2 0x7A8 JUMP JUMPDEST LT ISZERO PUSH2 0x79C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x793 SWAP1 PUSH2 0x1F1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A5 DUP2 PUSH2 0x72E JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7F5 PUSH2 0x11AB JUMP JUMPDEST PUSH2 0x7FE PUSH0 PUSH2 0x12B1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x812 DUP3 PUSH2 0x80C PUSH2 0xF91 JUMP JUMPDEST DUP4 PUSH2 0x1119 JUMP JUMPDEST PUSH2 0x81C DUP3 DUP3 PUSH2 0x1232 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x857 SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x883 SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8CE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8A5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8CE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8B1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8E2 PUSH2 0xF91 JUMP JUMPDEST SWAP1 POP PUSH2 0x8EF DUP2 DUP6 DUP6 PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD GT PUSH2 0x956 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94D SWAP1 PUSH2 0x21EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x97A CALLER PUSH2 0x7A8 JUMP JUMPDEST LT ISZERO PUSH2 0x9BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B2 SWAP1 PUSH2 0x1F1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9DE PUSH1 0x6 PUSH0 DUP4 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x72E JUMP JUMPDEST PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x6 PUSH0 DUP4 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0xA6A SWAP2 SWAP1 PUSH2 0x23BA JUMP JUMPDEST POP PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP3 ADD SLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BEDD141782C49139782BD92BD7A760A0BCB544FFECFD2B25F00366FAE06598E DUP3 PUSH1 0x6 PUSH0 DUP6 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH1 0x6 PUSH0 DUP7 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xB1F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2520 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH2 0xB34 CALLER PUSH2 0x7A8 JUMP JUMPDEST EQ PUSH2 0xB74 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6B SWAP1 PUSH2 0x25A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB7F CALLER PUSH1 0x32 PUSH2 0xFAA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xCC5 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD DUP1 SLOAD PUSH2 0xC10 SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC3C SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC87 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC5E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC87 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC6A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xBE0 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH0 DUP2 MLOAD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCEB JUMPI PUSH2 0xCEA PUSH2 0x1CFA JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD19 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xD79 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xD39 JUMPI PUSH2 0xD38 PUSH2 0x25C4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD58 JUMPI PUSH2 0xD57 PUSH2 0x25C4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0xFF AND SWAP1 DUP2 PUSH1 0xFF AND DUP2 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xD1E JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 PUSH1 0x6 PUSH0 DUP6 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD DUP1 SLOAD PUSH2 0xDBA SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDE6 SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE31 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE08 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE31 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE14 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH0 ADD MLOAD DUP2 PUSH1 0x40 ADD MLOAD SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEFF PUSH2 0x11AB JUMP JUMPDEST PUSH2 0xF09 DUP3 DUP3 PUSH2 0x1374 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xF15 PUSH2 0x11AB JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF85 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF7C SWAP2 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF8E DUP2 PUSH2 0x12B1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFA5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1441 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x101A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1011 SWAP2 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1025 PUSH0 DUP4 DUP4 PUSH2 0x1610 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1099 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1090 SWAP2 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1109 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1100 SWAP2 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1114 DUP4 DUP4 DUP4 PUSH2 0x1610 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1124 DUP5 DUP5 PUSH2 0xE75 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x11A5 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1196 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11A4 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1441 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x11B3 PUSH2 0xF91 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11D1 PUSH2 0x820 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1230 JUMPI PUSH2 0x11F4 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1227 SWAP2 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12A2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1299 SWAP2 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12AD DUP3 PUSH0 DUP4 PUSH2 0x1610 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x13D8 SWAP2 SWAP1 PUSH2 0x2626 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x8 PUSH0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1424 SWAP1 PUSH2 0x26F5 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14B1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14A8 SWAP2 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1521 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1518 SWAP2 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x160A JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1601 SWAP2 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1660 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1654 SWAP2 SWAP1 PUSH2 0x271D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x172E JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x16E9 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1775 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x17BF JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x181C SWAP2 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x186B DUP3 PUSH2 0x1829 JUMP JUMPDEST PUSH2 0x1875 DUP2 DUP6 PUSH2 0x1833 JUMP JUMPDEST SWAP4 POP PUSH2 0x1885 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1843 JUMP JUMPDEST PUSH2 0x188E DUP2 PUSH2 0x1851 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18B1 DUP2 DUP5 PUSH2 0x1861 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18F3 DUP3 PUSH2 0x18CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1903 DUP2 PUSH2 0x18E9 JUMP JUMPDEST DUP2 EQ PUSH2 0x190D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x191E DUP2 PUSH2 0x18FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1936 DUP2 PUSH2 0x1924 JUMP JUMPDEST DUP2 EQ PUSH2 0x1940 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1951 DUP2 PUSH2 0x192D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x196D JUMPI PUSH2 0x196C PUSH2 0x18C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x197A DUP6 DUP3 DUP7 ADD PUSH2 0x1910 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x198B DUP6 DUP3 DUP7 ADD PUSH2 0x1943 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19A9 DUP2 PUSH2 0x1995 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19C2 PUSH0 DUP4 ADD DUP5 PUSH2 0x19A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19D1 DUP2 PUSH2 0x1995 JUMP JUMPDEST DUP2 EQ PUSH2 0x19DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19EC DUP2 PUSH2 0x19C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A08 JUMPI PUSH2 0x1A07 PUSH2 0x18C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A15 DUP6 DUP3 DUP7 ADD PUSH2 0x19DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A26 DUP6 DUP3 DUP7 ADD PUSH2 0x1943 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A39 DUP2 PUSH2 0x1924 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A52 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A6F JUMPI PUSH2 0x1A6E PUSH2 0x18C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A7C DUP7 DUP3 DUP8 ADD PUSH2 0x1910 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A8D DUP7 DUP3 DUP8 ADD PUSH2 0x1910 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A9E DUP7 DUP3 DUP8 ADD PUSH2 0x1943 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ABD DUP2 PUSH2 0x1AA8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AD6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AB4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AF1 JUMPI PUSH2 0x1AF0 PUSH2 0x18C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AFE DUP5 DUP3 DUP6 ADD PUSH2 0x1943 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B1C JUMPI PUSH2 0x1B1B PUSH2 0x18C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B29 DUP5 DUP3 DUP6 ADD PUSH2 0x1910 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B3B DUP2 PUSH2 0x18E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B54 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B63 DUP2 PUSH2 0x1AA8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B6D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B7E DUP2 PUSH2 0x1B5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B99 JUMPI PUSH2 0x1B98 PUSH2 0x18C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BA6 DUP5 DUP3 DUP6 ADD PUSH2 0x1B70 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BE1 DUP2 PUSH2 0x1AA8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BF2 DUP4 DUP4 PUSH2 0x1BD8 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C14 DUP3 PUSH2 0x1BAF JUMP JUMPDEST PUSH2 0x1C1E DUP2 DUP6 PUSH2 0x1BB9 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C29 DUP4 PUSH2 0x1BC9 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C59 JUMPI DUP2 MLOAD PUSH2 0x1C40 DUP9 DUP3 PUSH2 0x1BE7 JUMP JUMPDEST SWAP8 POP PUSH2 0x1C4B DUP4 PUSH2 0x1BFE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1C2C JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C7E DUP2 DUP5 PUSH2 0x1C0A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C9E DUP2 DUP6 PUSH2 0x1861 JUMP JUMPDEST SWAP1 POP PUSH2 0x1CAD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A30 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CCA JUMPI PUSH2 0x1CC9 PUSH2 0x18C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CD7 DUP6 DUP3 DUP7 ADD PUSH2 0x1910 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CE8 DUP6 DUP3 DUP7 ADD PUSH2 0x1910 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1D30 DUP3 PUSH2 0x1851 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1D4F JUMPI PUSH2 0x1D4E PUSH2 0x1CFA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D61 PUSH2 0x18B9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D6D DUP3 DUP3 PUSH2 0x1D27 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D8C JUMPI PUSH2 0x1D8B PUSH2 0x1CFA JUMP JUMPDEST JUMPDEST PUSH2 0x1D95 DUP3 PUSH2 0x1851 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1DC2 PUSH2 0x1DBD DUP5 PUSH2 0x1D72 JUMP JUMPDEST PUSH2 0x1D58 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1DDE JUMPI PUSH2 0x1DDD PUSH2 0x1CF6 JUMP JUMPDEST JUMPDEST PUSH2 0x1DE9 DUP5 DUP3 DUP6 PUSH2 0x1DA2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E05 JUMPI PUSH2 0x1E04 PUSH2 0x1CF2 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E15 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1DB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E34 JUMPI PUSH2 0x1E33 PUSH2 0x18C2 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E51 JUMPI PUSH2 0x1E50 PUSH2 0x18C6 JUMP JUMPDEST JUMPDEST PUSH2 0x1E5D DUP6 DUP3 DUP7 ADD PUSH2 0x1DF1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E6E DUP6 DUP3 DUP7 ADD PUSH2 0x1943 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1EBC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1ECF JUMPI PUSH2 0x1ECE PUSH2 0x1E78 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F09 PUSH1 0x14 DUP4 PUSH2 0x1833 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F14 DUP3 PUSH2 0x1ED5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F36 DUP2 PUSH2 0x1EFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F57 PUSH2 0x1F52 DUP3 PUSH2 0x1924 JUMP JUMPDEST PUSH2 0x1F3D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F73 DUP3 PUSH2 0x1F5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F84 DUP3 PUSH2 0x1F69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F9C PUSH2 0x1F97 DUP3 PUSH2 0x18E9 JUMP JUMPDEST PUSH2 0x1F7A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FAD DUP3 DUP6 PUSH2 0x1F46 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x1FBD DUP3 DUP5 PUSH2 0x1F8B JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2004 DUP3 PUSH2 0x1924 JUMP JUMPDEST SWAP2 POP PUSH2 0x200F DUP4 PUSH2 0x1924 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x201F JUMPI PUSH2 0x201E PUSH2 0x1FCD JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2061 DUP3 PUSH2 0x1924 JUMP JUMPDEST SWAP2 POP PUSH2 0x206C DUP4 PUSH2 0x1924 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x207A DUP2 PUSH2 0x1924 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2091 JUMPI PUSH2 0x2090 PUSH2 0x202A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F7520776F6E21000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20CC PUSH1 0x8 DUP4 PUSH2 0x1833 JUMP JUMPDEST SWAP2 POP PUSH2 0x20D7 DUP3 PUSH2 0x2098 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x20F5 PUSH0 DUP4 ADD DUP6 PUSH2 0x1A30 JUMP JUMPDEST PUSH2 0x2102 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19A0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2113 DUP2 PUSH2 0x20C0 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x596F75206C6F7374210000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2150 PUSH1 0x9 DUP4 PUSH2 0x1833 JUMP JUMPDEST SWAP2 POP PUSH2 0x215B DUP3 PUSH2 0x211C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2179 PUSH0 DUP4 ADD DUP6 PUSH2 0x1A30 JUMP JUMPDEST PUSH2 0x2186 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19A0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2197 DUP2 PUSH2 0x2144 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4974656D206E6F7420666F756E64000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21D4 PUSH1 0xE DUP4 PUSH2 0x1833 JUMP JUMPDEST SWAP2 POP PUSH2 0x21DF DUP3 PUSH2 0x21A0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2201 DUP2 PUSH2 0x21C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SLOAD SWAP1 POP PUSH2 0x2216 DUP2 PUSH2 0x1EA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2279 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x223E JUMP JUMPDEST PUSH2 0x2283 DUP7 DUP4 PUSH2 0x223E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22BE PUSH2 0x22B9 PUSH2 0x22B4 DUP5 PUSH2 0x1924 JUMP JUMPDEST PUSH2 0x229B JUMP JUMPDEST PUSH2 0x1924 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22D7 DUP4 PUSH2 0x22A4 JUMP JUMPDEST PUSH2 0x22EB PUSH2 0x22E3 DUP3 PUSH2 0x22C5 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x224A JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x22FF PUSH2 0x22F3 JUMP JUMPDEST PUSH2 0x230A DUP2 DUP5 DUP5 PUSH2 0x22CE JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x232D JUMPI PUSH2 0x2322 PUSH0 DUP3 PUSH2 0x22F7 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2310 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2372 JUMPI PUSH2 0x2343 DUP2 PUSH2 0x221D JUMP JUMPDEST PUSH2 0x234C DUP5 PUSH2 0x222F JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x235B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x236F PUSH2 0x2367 DUP6 PUSH2 0x222F JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x230F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2392 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2377 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23AA DUP4 DUP4 PUSH2 0x2383 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0x23C8 JUMPI POP POP PUSH2 0x249D JUMP JUMPDEST PUSH2 0x23D1 DUP3 PUSH2 0x2208 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23EA JUMPI PUSH2 0x23E9 PUSH2 0x1CFA JUMP JUMPDEST JUMPDEST PUSH2 0x23F4 DUP3 SLOAD PUSH2 0x1EA5 JUMP JUMPDEST PUSH2 0x23FF DUP3 DUP3 DUP6 PUSH2 0x2331 JUMP JUMPDEST PUSH0 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x242C JUMPI PUSH0 DUP5 ISZERO PUSH2 0x241A JUMPI DUP3 DUP8 ADD SLOAD SWAP1 POP JUMPDEST PUSH2 0x2424 DUP6 DUP3 PUSH2 0x239F JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2496 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x243A DUP8 PUSH2 0x221D JUMP JUMPDEST SWAP7 POP PUSH2 0x2445 DUP7 PUSH2 0x221D JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x246C JUMPI DUP5 DUP10 ADD SLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2447 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2489 JUMPI DUP5 DUP10 ADD SLOAD PUSH2 0x2485 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2383 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH0 DUP2 SLOAD PUSH2 0x24AB DUP2 PUSH2 0x1EA5 JUMP JUMPDEST PUSH2 0x24B5 DUP2 DUP7 PUSH2 0x1833 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH0 DUP2 EQ PUSH2 0x24CF JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x24E5 JUMPI PUSH2 0x2517 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x2517 JUMP JUMPDEST PUSH2 0x24EE DUP6 PUSH2 0x221D JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x250F JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x24F0 JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2533 PUSH0 DUP4 ADD DUP7 PUSH2 0x1AB4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2545 DUP2 DUP6 PUSH2 0x249F JUMP JUMPDEST SWAP1 POP PUSH2 0x2554 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A30 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x426F6E757320616C726561647920636C61696D65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2590 PUSH1 0x15 DUP4 PUSH2 0x1833 JUMP JUMPDEST SWAP2 POP PUSH2 0x259B DUP3 PUSH2 0x255C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25BD DUP2 PUSH2 0x2584 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2604 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B32 JUMP JUMPDEST PUSH2 0x2611 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A30 JUMP JUMPDEST PUSH2 0x261E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A30 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x262F DUP3 PUSH2 0x1829 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2648 JUMPI PUSH2 0x2647 PUSH2 0x1CFA JUMP JUMPDEST JUMPDEST PUSH2 0x2652 DUP3 SLOAD PUSH2 0x1EA5 JUMP JUMPDEST PUSH2 0x265D DUP3 DUP3 DUP6 PUSH2 0x2331 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x268E JUMPI PUSH0 DUP5 ISZERO PUSH2 0x267C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2686 DUP6 DUP3 PUSH2 0x239F JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x26ED JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x269C DUP7 PUSH2 0x221D JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x26C3 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x269E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x26E0 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x26DC PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2383 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x26FF DUP3 PUSH2 0x1AA8 JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 SUB PUSH2 0x2712 JUMPI PUSH2 0x2711 PUSH2 0x202A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2727 DUP3 PUSH2 0x1924 JUMP JUMPDEST SWAP2 POP PUSH2 0x2732 DUP4 PUSH2 0x1924 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x274A JUMPI PUSH2 0x2749 PUSH2 0x202A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 MSIZE SWAP5 SGT EXP PUSH7 0x25AEE2E303869D CALLDATALOAD BASEFEE LOG2 0xC8 0xD7 STOP PUSH22 0xD41367DAAD7272BFF048CE0E64736F6C634300081A00 CALLER ",
							"sourceMap": "243:3972:7:-:0;;;703:220;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;790:12;1896:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;814:31:7::2;832:12;814:17;;;:31;;:::i;:::-;855:33;860:12;874:13;855:4;;;:33;;:::i;:::-;898:18;:16;;;:18;;:::i;:::-;703:220:::0;;243:3972;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2543:215::-;1531:13;:11;;;:13;;:::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;;;:28;;:::i;:::-;2543:215:::0;:::o;1457:93:7:-;1531:13:0;:11;;;:13;;:::i;:::-;1526:17:7::1;1532:2;1536:6;1526:5;;;:17;;:::i;:::-;1457:93:::0;;:::o;976:256::-;1023:33;;;;;;;;;;;;;;;;;;1052:3;1023:8;;;:33;;:::i;:::-;1066:32;;;;;;;;;;;;;;;;;;1094:3;1066:8;;;:32;;:::i;:::-;1108:35;;;;;;;;;;;;;;;;;;1138:4;1108:8;;;:35;;:::i;:::-;1153:28;;;;;;;;;;;;;;;;;;1176:4;1153:8;;;:28;;:::i;:::-;1191:34;;;;;;;;;;;;;;;;;;1220:4;1191:8;;;:34;;:::i;:::-;976:256::o;1796:162:0:-;1866:12;:10;;;:12;;:::i;:::-;1855:23;;:7;:5;;;:7;;:::i;:::-;:23;;;1851:101;;1928:12;:10;;;:12;;:::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;1278:150:7:-;1370:29;;;;;;;;1375:4;1370:29;;;;1381:10;;;;;;;;;;;1370:29;;;;;;1393:5;1370:29;;;1350:5;:17;1356:10;;;;;;;;;;;1350:17;;;;;;;;;;;;;;;:49;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1409:10;;:12;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;1278:150;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;6271:1107:2:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;88:117:8:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:507::-;1284:6;1292;1341:2;1329:9;1320:7;1316:23;1312:32;1309:119;;;1347:79;;:::i;:::-;1309:119;1467:1;1492:64;1548:7;1539:6;1528:9;1524:22;1492:64;:::i;:::-;1482:74;;1438:128;1605:2;1631:64;1687:7;1678:6;1667:9;1663:22;1631:64;:::i;:::-;1621:74;;1576:129;1205:507;;;;;:::o;1718:99::-;1770:6;1804:5;1798:12;1788:22;;1718:99;;;:::o;1823:180::-;1871:77;1868:1;1861:88;1968:4;1965:1;1958:15;1992:4;1989:1;1982:15;2009:180;2057:77;2054:1;2047:88;2154:4;2151:1;2144:15;2178:4;2175:1;2168:15;2195:320;2239:6;2276:1;2270:4;2266:12;2256:22;;2323:1;2317:4;2313:12;2344:18;2334:81;;2400:4;2392:6;2388:17;2378:27;;2334:81;2462:2;2454:6;2451:14;2431:18;2428:38;2425:84;;2481:18;;:::i;:::-;2425:84;2246:269;2195:320;;;:::o;2521:141::-;2570:4;2593:3;2585:11;;2616:3;2613:1;2606:14;2650:4;2647:1;2637:18;2629:26;;2521:141;;;:::o;2668:93::-;2705:6;2752:2;2747;2740:5;2736:14;2732:23;2722:33;;2668:93;;;:::o;2767:107::-;2811:8;2861:5;2855:4;2851:16;2830:37;;2767:107;;;;:::o;2880:393::-;2949:6;2999:1;2987:10;2983:18;3022:97;3052:66;3041:9;3022:97;:::i;:::-;3140:39;3170:8;3159:9;3140:39;:::i;:::-;3128:51;;3212:4;3208:9;3201:5;3197:21;3188:30;;3261:4;3251:8;3247:19;3240:5;3237:30;3227:40;;2956:317;;2880:393;;;;;:::o;3279:60::-;3307:3;3328:5;3321:12;;3279:60;;;:::o;3345:142::-;3395:9;3428:53;3446:34;3455:24;3473:5;3455:24;:::i;:::-;3446:34;:::i;:::-;3428:53;:::i;:::-;3415:66;;3345:142;;;:::o;3493:75::-;3536:3;3557:5;3550:12;;3493:75;;;:::o;3574:269::-;3684:39;3715:7;3684:39;:::i;:::-;3745:91;3794:41;3818:16;3794:41;:::i;:::-;3786:6;3779:4;3773:11;3745:91;:::i;:::-;3739:4;3732:105;3650:193;3574:269;;;:::o;3849:73::-;3894:3;3849:73;:::o;3928:189::-;4005:32;;:::i;:::-;4046:65;4104:6;4096;4090:4;4046:65;:::i;:::-;3981:136;3928:189;;:::o;4123:186::-;4183:120;4200:3;4193:5;4190:14;4183:120;;;4254:39;4291:1;4284:5;4254:39;:::i;:::-;4227:1;4220:5;4216:13;4207:22;;4183:120;;;4123:186;;:::o;4315:543::-;4416:2;4411:3;4408:11;4405:446;;;4450:38;4482:5;4450:38;:::i;:::-;4534:29;4552:10;4534:29;:::i;:::-;4524:8;4520:44;4717:2;4705:10;4702:18;4699:49;;;4738:8;4723:23;;4699:49;4761:80;4817:22;4835:3;4817:22;:::i;:::-;4807:8;4803:37;4790:11;4761:80;:::i;:::-;4420:431;;4405:446;4315:543;;;:::o;4864:117::-;4918:8;4968:5;4962:4;4958:16;4937:37;;4864:117;;;;:::o;4987:169::-;5031:6;5064:51;5112:1;5108:6;5100:5;5097:1;5093:13;5064:51;:::i;:::-;5060:56;5145:4;5139;5135:15;5125:25;;5038:118;4987:169;;;;:::o;5161:295::-;5237:4;5383:29;5408:3;5402:4;5383:29;:::i;:::-;5375:37;;5445:3;5442:1;5438:11;5432:4;5429:21;5421:29;;5161:295;;;;:::o;5461:1395::-;5578:37;5611:3;5578:37;:::i;:::-;5680:18;5672:6;5669:30;5666:56;;;5702:18;;:::i;:::-;5666:56;5746:38;5778:4;5772:11;5746:38;:::i;:::-;5831:67;5891:6;5883;5877:4;5831:67;:::i;:::-;5925:1;5949:4;5936:17;;5981:2;5973:6;5970:14;5998:1;5993:618;;;;6655:1;6672:6;6669:77;;;6721:9;6716:3;6712:19;6706:26;6697:35;;6669:77;6772:67;6832:6;6825:5;6772:67;:::i;:::-;6766:4;6759:81;6628:222;5963:887;;5993:618;6045:4;6041:9;6033:6;6029:22;6079:37;6111:4;6079:37;:::i;:::-;6138:1;6152:208;6166:7;6163:1;6160:14;6152:208;;;6245:9;6240:3;6236:19;6230:26;6222:6;6215:42;6296:1;6288:6;6284:14;6274:24;;6343:2;6332:9;6328:18;6315:31;;6189:4;6186:1;6182:12;6177:17;;6152:208;;;6388:6;6379:7;6376:19;6373:179;;;6446:9;6441:3;6437:19;6431:26;6489:48;6531:4;6523:6;6519:17;6508:9;6489:48;:::i;:::-;6481:6;6474:64;6396:156;6373:179;6598:1;6594;6586:6;6582:14;6578:22;6572:4;6565:36;6000:611;;;5963:887;;5553:1303;;;5461:1395;;:::o;6862:118::-;6949:24;6967:5;6949:24;:::i;:::-;6944:3;6937:37;6862:118;;:::o;6986:222::-;7079:4;7117:2;7106:9;7102:18;7094:26;;7130:71;7198:1;7187:9;7183:17;7174:6;7130:71;:::i;:::-;6986:222;;;;:::o;7214:180::-;7262:77;7259:1;7252:88;7359:4;7356:1;7349:15;7383:4;7380:1;7373:15;7400:86;7435:7;7475:4;7468:5;7464:16;7453:27;;7400:86;;;:::o;7492:167::-;7529:3;7552:22;7568:5;7552:22;:::i;:::-;7543:31;;7596:4;7589:5;7586:15;7583:41;;7604:18;;:::i;:::-;7583:41;7651:1;7644:5;7640:13;7633:20;;7492:167;;;:::o;7665:191::-;7705:3;7724:20;7742:1;7724:20;:::i;:::-;7719:25;;7758:20;7776:1;7758:20;:::i;:::-;7753:25;;7801:1;7798;7794:9;7787:16;;7822:3;7819:1;7816:10;7813:36;;;7829:18;;:::i;:::-;7813:36;7665:191;;;;:::o;7862:118::-;7949:24;7967:5;7949:24;:::i;:::-;7944:3;7937:37;7862:118;;:::o;7986:442::-;8135:4;8173:2;8162:9;8158:18;8150:26;;8186:71;8254:1;8243:9;8239:17;8230:6;8186:71;:::i;:::-;8267:72;8335:2;8324:9;8320:18;8311:6;8267:72;:::i;:::-;8349;8417:2;8406:9;8402:18;8393:6;8349:72;:::i;:::-;7986:442;;;;;;:::o;8434:222::-;8527:4;8565:2;8554:9;8550:18;8542:26;;8578:71;8646:1;8635:9;8631:17;8622:6;8578:71;:::i;:::-;8434:222;;;;:::o;243:3972:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_addItem_1107": {
									"entryPoint": 4980,
									"id": 1107,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_approve_690": {
									"entryPoint": 3992,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 5185,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 4658,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4523,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 4010,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_961": {
									"entryPoint": 3985,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 4377,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4785,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 4137,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 5648,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addItemToStore_1182": {
									"entryPoint": 3831,
									"id": 1182,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 3701,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1279,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 1960,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@betOnRandomNumber_1254": {
									"entryPoint": 1313,
									"id": 1254,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burnFrom_922": {
									"entryPoint": 2048,
									"id": 922,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burnTokens_1425": {
									"entryPoint": 1873,
									"id": 1425,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@burn_901": {
									"entryPoint": 1838,
									"id": 901,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 1808,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getItemDetails_1394": {
									"entryPoint": 3461,
									"id": 1394,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@getMyBalance_1405": {
									"entryPoint": 1858,
									"id": 1405,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getUserItems_1371": {
									"entryPoint": 2945,
									"id": 1371,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_1122": {
									"entryPoint": 1816,
									"id": 1122,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1135,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2080,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@purchaseItem_1314": {
									"entryPoint": 2298,
									"id": 1314,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@redeemWelcomeBonus_1167": {
									"entryPoint": 2858,
									"id": 1167,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2029,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 2120,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 1753,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1762,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 3853,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferToken_1147": {
									"entryPoint": 1663,
									"id": 1147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 2264,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 7600,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 7665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 7024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_boolt_uint256": {
									"entryPoint": 6642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256": {
									"entryPoint": 7710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8": {
									"entryPoint": 7044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint8_to_t_uint8": {
									"entryPoint": 7143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 8075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint8_$dyn_memory_ptr_to_t_array$_t_uint8_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9914c8f708f9d185c71b065e1b7086f49300a27304777e454a822b899aef6387_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b6793b6145548c1707973fa6fff27243076d3f64d47e7c1951b141bde79f7643_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e4e32a093f922415ec967630dd3d29e7177524111a79166bb989f4c2dcbc3a12_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack": {
									"entryPoint": 8006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8": {
									"entryPoint": 7128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_uint256_t_address__to_t_uint256_t_address__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8098,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9713,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint8_$dyn_memory_ptr__to_t_array$_t_uint8_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 7302,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7967,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e4e32a093f922415ec967630dd3d29e7177524111a79166bb989f4c2dcbc3a12__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bool_t_stringliteral_9914c8f708f9d185c71b065e1b7086f49300a27304777e454a822b899aef6387__to_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8418,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bool_t_stringliteral_b6793b6145548c1707973fa6fff27243076d3f64d47e7c1951b141bde79f7643__to_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8550,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8_t_string_storage_t_uint256__to_t_uint8_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 9504,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6329,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 7538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint8_$dyn_memory_ptr": {
									"entryPoint": 7113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 8733,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint8_$dyn_memory_ptr": {
									"entryPoint": 7087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_storage": {
									"entryPoint": 8712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint8_$dyn_memory_ptr": {
									"entryPoint": 7166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint8_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 9009,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 6377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 8975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 8868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 9766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_storage_to_t_string_storage": {
									"entryPoint": 9146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7586,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6211,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 8751,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 9119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 8859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint8": {
									"entryPoint": 9973,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 8058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 8041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint256": {
									"entryPoint": 7997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 9091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 8186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8234,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8141,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7800,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9668,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7418,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 8901,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7410,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7414,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6342,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6338,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_96": {
									"entryPoint": 8029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 8766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 9079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 8951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 7893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9914c8f708f9d185c71b065e1b7086f49300a27304777e454a822b899aef6387": {
									"entryPoint": 8344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c": {
									"entryPoint": 8608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b6793b6145548c1707973fa6fff27243076d3f64d47e7c1951b141bde79f7643": {
									"entryPoint": 8476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e4e32a093f922415ec967630dd3d29e7177524111a79166bb989f4c2dcbc3a12": {
									"entryPoint": 9564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 8778,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 8910,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 7002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 8947,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:28937:8",
										"nodeType": "YulBlock",
										"src": "0:28937:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:8",
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nativeSrc": "77:22:8",
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nativeSrc": "87:12:8",
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:8",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:8",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nativeSrc": "208:73:8",
													"nodeType": "YulBlock",
													"src": "208:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:8"
																},
																"nativeSrc": "218:19:8",
																"nodeType": "YulFunctionCall",
																"src": "218:19:8"
															},
															"nativeSrc": "218:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:8"
														},
														{
															"nativeSrc": "246:29:8",
															"nodeType": "YulAssignment",
															"src": "246:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:8",
																		"nodeType": "YulLiteral",
																		"src": "270:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:8"
																},
																"nativeSrc": "261:14:8",
																"nodeType": "YulFunctionCall",
																"src": "261:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:8",
														"nodeType": "YulTypedName",
														"src": "180:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:8",
														"nodeType": "YulTypedName",
														"src": "185:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:8",
														"nodeType": "YulTypedName",
														"src": "196:11:8",
														"type": ""
													}
												],
												"src": "112:169:8"
											},
											{
												"body": {
													"nativeSrc": "349:77:8",
													"nodeType": "YulBlock",
													"src": "349:77:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:8"
																},
																"nativeSrc": "360:23:8",
																"nodeType": "YulFunctionCall",
																"src": "360:23:8"
															},
															"nativeSrc": "360:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:8"
																		},
																		"nativeSrc": "399:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:8",
																		"nodeType": "YulLiteral",
																		"src": "417:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:8"
																},
																"nativeSrc": "392:27:8",
																"nodeType": "YulFunctionCall",
																"src": "392:27:8"
															},
															"nativeSrc": "392:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:8",
														"nodeType": "YulTypedName",
														"src": "331:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:8",
														"nodeType": "YulTypedName",
														"src": "336:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:8",
														"nodeType": "YulTypedName",
														"src": "341:6:8",
														"type": ""
													}
												],
												"src": "287:139:8"
											},
											{
												"body": {
													"nativeSrc": "480:54:8",
													"nodeType": "YulBlock",
													"src": "480:54:8",
													"statements": [
														{
															"nativeSrc": "490:38:8",
															"nodeType": "YulAssignment",
															"src": "490:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:8",
																				"nodeType": "YulLiteral",
																				"src": "515:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:8"
																		},
																		"nativeSrc": "504:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:8",
																				"nodeType": "YulLiteral",
																				"src": "524:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:8"
																		},
																		"nativeSrc": "520:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:8"
																},
																"nativeSrc": "500:28:8",
																"nodeType": "YulFunctionCall",
																"src": "500:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:8",
														"nodeType": "YulTypedName",
														"src": "463:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:8",
														"nodeType": "YulTypedName",
														"src": "473:6:8",
														"type": ""
													}
												],
												"src": "432:102:8"
											},
											{
												"body": {
													"nativeSrc": "632:285:8",
													"nodeType": "YulBlock",
													"src": "632:285:8",
													"statements": [
														{
															"nativeSrc": "642:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:8"
																},
																"nativeSrc": "656:39:8",
																"nodeType": "YulFunctionCall",
																"src": "656:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:8",
																	"nodeType": "YulTypedName",
																	"src": "646:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:8",
															"nodeType": "YulAssignment",
															"src": "704:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:8"
																},
																"nativeSrc": "711:71:8",
																"nodeType": "YulFunctionCall",
																"src": "711:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:8",
																				"nodeType": "YulLiteral",
																				"src": "837:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:8"
																		},
																		"nativeSrc": "826:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:8"
																},
																"nativeSrc": "791:65:8",
																"nodeType": "YulFunctionCall",
																"src": "791:65:8"
															},
															"nativeSrc": "791:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:8"
														},
														{
															"nativeSrc": "865:46:8",
															"nodeType": "YulAssignment",
															"src": "865:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:8"
																		},
																		"nativeSrc": "881:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:8"
																},
																"nativeSrc": "872:39:8",
																"nodeType": "YulFunctionCall",
																"src": "872:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:8",
														"nodeType": "YulTypedName",
														"src": "613:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:8",
														"nodeType": "YulTypedName",
														"src": "620:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:8",
														"nodeType": "YulTypedName",
														"src": "628:3:8",
														"type": ""
													}
												],
												"src": "540:377:8"
											},
											{
												"body": {
													"nativeSrc": "1041:195:8",
													"nodeType": "YulBlock",
													"src": "1041:195:8",
													"statements": [
														{
															"nativeSrc": "1051:26:8",
															"nodeType": "YulAssignment",
															"src": "1051:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:8"
																},
																"nativeSrc": "1059:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:8"
																		},
																		"nativeSrc": "1094:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:8"
																		},
																		"nativeSrc": "1113:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:8"
																},
																"nativeSrc": "1087:47:8",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:8"
															},
															"nativeSrc": "1087:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:8"
														},
														{
															"nativeSrc": "1143:86:8",
															"nodeType": "YulAssignment",
															"src": "1143:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:8"
																},
																"nativeSrc": "1151:78:8",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:8",
														"nodeType": "YulTypedName",
														"src": "1013:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:8",
														"nodeType": "YulTypedName",
														"src": "1025:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:8",
														"nodeType": "YulTypedName",
														"src": "1036:4:8",
														"type": ""
													}
												],
												"src": "923:313:8"
											},
											{
												"body": {
													"nativeSrc": "1282:35:8",
													"nodeType": "YulBlock",
													"src": "1282:35:8",
													"statements": [
														{
															"nativeSrc": "1292:19:8",
															"nodeType": "YulAssignment",
															"src": "1292:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:8"
																},
																"nativeSrc": "1302:9:8",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:8",
														"nodeType": "YulTypedName",
														"src": "1275:6:8",
														"type": ""
													}
												],
												"src": "1242:75:8"
											},
											{
												"body": {
													"nativeSrc": "1412:28:8",
													"nodeType": "YulBlock",
													"src": "1412:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:8"
																},
																"nativeSrc": "1422:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:8"
															},
															"nativeSrc": "1422:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:8"
											},
											{
												"body": {
													"nativeSrc": "1535:28:8",
													"nodeType": "YulBlock",
													"src": "1535:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:8"
																},
																"nativeSrc": "1545:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:8"
															},
															"nativeSrc": "1545:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:8"
											},
											{
												"body": {
													"nativeSrc": "1614:81:8",
													"nodeType": "YulBlock",
													"src": "1614:81:8",
													"statements": [
														{
															"nativeSrc": "1624:65:8",
															"nodeType": "YulAssignment",
															"src": "1624:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:8",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:8"
																},
																"nativeSrc": "1635:54:8",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:8",
														"nodeType": "YulTypedName",
														"src": "1596:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:8",
														"nodeType": "YulTypedName",
														"src": "1606:7:8",
														"type": ""
													}
												],
												"src": "1569:126:8"
											},
											{
												"body": {
													"nativeSrc": "1746:51:8",
													"nodeType": "YulBlock",
													"src": "1746:51:8",
													"statements": [
														{
															"nativeSrc": "1756:35:8",
															"nodeType": "YulAssignment",
															"src": "1756:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:8"
																},
																"nativeSrc": "1767:24:8",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:8",
														"nodeType": "YulTypedName",
														"src": "1728:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:8",
														"nodeType": "YulTypedName",
														"src": "1738:7:8",
														"type": ""
													}
												],
												"src": "1701:96:8"
											},
											{
												"body": {
													"nativeSrc": "1846:79:8",
													"nodeType": "YulBlock",
													"src": "1846:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:8",
																"nodeType": "YulBlock",
																"src": "1903:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:8"
																			},
																			"nativeSrc": "1905:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:8"
																		},
																		"nativeSrc": "1905:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:8"
																				},
																				"nativeSrc": "1876:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:8"
																		},
																		"nativeSrc": "1866:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:8"
																},
																"nativeSrc": "1859:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:8"
															},
															"nativeSrc": "1856:63:8",
															"nodeType": "YulIf",
															"src": "1856:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:8",
														"nodeType": "YulTypedName",
														"src": "1839:5:8",
														"type": ""
													}
												],
												"src": "1803:122:8"
											},
											{
												"body": {
													"nativeSrc": "1983:87:8",
													"nodeType": "YulBlock",
													"src": "1983:87:8",
													"statements": [
														{
															"nativeSrc": "1993:29:8",
															"nodeType": "YulAssignment",
															"src": "1993:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:8"
																},
																"nativeSrc": "2002:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:8"
																},
																"nativeSrc": "2031:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:8"
															},
															"nativeSrc": "2031:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:8",
														"nodeType": "YulTypedName",
														"src": "1961:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:8",
														"nodeType": "YulTypedName",
														"src": "1969:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:8",
														"nodeType": "YulTypedName",
														"src": "1977:5:8",
														"type": ""
													}
												],
												"src": "1931:139:8"
											},
											{
												"body": {
													"nativeSrc": "2121:32:8",
													"nodeType": "YulBlock",
													"src": "2121:32:8",
													"statements": [
														{
															"nativeSrc": "2131:16:8",
															"nodeType": "YulAssignment",
															"src": "2131:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:8",
																"nodeType": "YulIdentifier",
																"src": "2142:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:8",
														"nodeType": "YulTypedName",
														"src": "2103:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:8",
														"nodeType": "YulTypedName",
														"src": "2113:7:8",
														"type": ""
													}
												],
												"src": "2076:77:8"
											},
											{
												"body": {
													"nativeSrc": "2202:79:8",
													"nodeType": "YulBlock",
													"src": "2202:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:8",
																"nodeType": "YulBlock",
																"src": "2259:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:8"
																			},
																			"nativeSrc": "2261:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:8"
																		},
																		"nativeSrc": "2261:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:8"
																				},
																				"nativeSrc": "2232:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:8"
																		},
																		"nativeSrc": "2222:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:8"
																},
																"nativeSrc": "2215:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:8"
															},
															"nativeSrc": "2212:63:8",
															"nodeType": "YulIf",
															"src": "2212:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:8",
														"nodeType": "YulTypedName",
														"src": "2195:5:8",
														"type": ""
													}
												],
												"src": "2159:122:8"
											},
											{
												"body": {
													"nativeSrc": "2339:87:8",
													"nodeType": "YulBlock",
													"src": "2339:87:8",
													"statements": [
														{
															"nativeSrc": "2349:29:8",
															"nodeType": "YulAssignment",
															"src": "2349:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:8"
																},
																"nativeSrc": "2358:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:8"
																},
																"nativeSrc": "2387:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:8"
															},
															"nativeSrc": "2387:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:8",
														"nodeType": "YulTypedName",
														"src": "2317:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:8",
														"nodeType": "YulTypedName",
														"src": "2325:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:8",
														"nodeType": "YulTypedName",
														"src": "2333:5:8",
														"type": ""
													}
												],
												"src": "2287:139:8"
											},
											{
												"body": {
													"nativeSrc": "2515:391:8",
													"nodeType": "YulBlock",
													"src": "2515:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:8",
																"nodeType": "YulBlock",
																"src": "2561:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:8"
																			},
																			"nativeSrc": "2563:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:8"
																		},
																		"nativeSrc": "2563:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:8"
																		},
																		"nativeSrc": "2532:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:8"
																},
																"nativeSrc": "2528:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:8"
															},
															"nativeSrc": "2525:119:8",
															"nodeType": "YulIf",
															"src": "2525:119:8"
														},
														{
															"nativeSrc": "2654:117:8",
															"nodeType": "YulBlock",
															"src": "2654:117:8",
															"statements": [
																{
																	"nativeSrc": "2669:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:8"
																				},
																				"nativeSrc": "2729:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:8"
																		},
																		"nativeSrc": "2708:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:8",
															"nodeType": "YulBlock",
															"src": "2781:118:8",
															"statements": [
																{
																	"nativeSrc": "2796:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:8"
																				},
																				"nativeSrc": "2857:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:8"
																		},
																		"nativeSrc": "2836:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:8",
														"nodeType": "YulTypedName",
														"src": "2477:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:8",
														"nodeType": "YulTypedName",
														"src": "2488:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:8",
														"nodeType": "YulTypedName",
														"src": "2500:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:8",
														"nodeType": "YulTypedName",
														"src": "2508:6:8",
														"type": ""
													}
												],
												"src": "2432:474:8"
											},
											{
												"body": {
													"nativeSrc": "2954:48:8",
													"nodeType": "YulBlock",
													"src": "2954:48:8",
													"statements": [
														{
															"nativeSrc": "2964:32:8",
															"nodeType": "YulAssignment",
															"src": "2964:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:8"
																		},
																		"nativeSrc": "2982:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:8"
																},
																"nativeSrc": "2975:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:8",
														"nodeType": "YulTypedName",
														"src": "2936:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:8",
														"nodeType": "YulTypedName",
														"src": "2946:7:8",
														"type": ""
													}
												],
												"src": "2912:90:8"
											},
											{
												"body": {
													"nativeSrc": "3067:50:8",
													"nodeType": "YulBlock",
													"src": "3067:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:8"
																		},
																		"nativeSrc": "3089:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:8"
																},
																"nativeSrc": "3077:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:8"
															},
															"nativeSrc": "3077:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:8",
														"nodeType": "YulTypedName",
														"src": "3055:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:8",
														"nodeType": "YulTypedName",
														"src": "3062:3:8",
														"type": ""
													}
												],
												"src": "3008:109:8"
											},
											{
												"body": {
													"nativeSrc": "3215:118:8",
													"nodeType": "YulBlock",
													"src": "3215:118:8",
													"statements": [
														{
															"nativeSrc": "3225:26:8",
															"nodeType": "YulAssignment",
															"src": "3225:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:8"
																},
																"nativeSrc": "3233:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:8"
																		},
																		"nativeSrc": "3308:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:8"
																},
																"nativeSrc": "3261:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:8"
															},
															"nativeSrc": "3261:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:8",
														"nodeType": "YulTypedName",
														"src": "3187:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:8",
														"nodeType": "YulTypedName",
														"src": "3199:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:8",
														"nodeType": "YulTypedName",
														"src": "3210:4:8",
														"type": ""
													}
												],
												"src": "3123:210:8"
											},
											{
												"body": {
													"nativeSrc": "3379:76:8",
													"nodeType": "YulBlock",
													"src": "3379:76:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3433:16:8",
																"nodeType": "YulBlock",
																"src": "3433:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3442:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3442:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3445:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3445:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3435:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3435:6:8"
																			},
																			"nativeSrc": "3435:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3435:12:8"
																		},
																		"nativeSrc": "3435:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3435:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3402:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3402:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3424:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3424:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "3409:14:8",
																					"nodeType": "YulIdentifier",
																					"src": "3409:14:8"
																				},
																				"nativeSrc": "3409:21:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3409:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3399:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3399:2:8"
																		},
																		"nativeSrc": "3399:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3399:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3392:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3392:6:8"
																},
																"nativeSrc": "3392:40:8",
																"nodeType": "YulFunctionCall",
																"src": "3392:40:8"
															},
															"nativeSrc": "3389:60:8",
															"nodeType": "YulIf",
															"src": "3389:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "3339:116:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3372:5:8",
														"nodeType": "YulTypedName",
														"src": "3372:5:8",
														"type": ""
													}
												],
												"src": "3339:116:8"
											},
											{
												"body": {
													"nativeSrc": "3510:84:8",
													"nodeType": "YulBlock",
													"src": "3510:84:8",
													"statements": [
														{
															"nativeSrc": "3520:29:8",
															"nodeType": "YulAssignment",
															"src": "3520:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3542:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3542:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3529:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3529:12:8"
																},
																"nativeSrc": "3529:20:8",
																"nodeType": "YulFunctionCall",
																"src": "3529:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3520:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3520:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3582:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3582:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "3558:23:8",
																	"nodeType": "YulIdentifier",
																	"src": "3558:23:8"
																},
																"nativeSrc": "3558:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3558:30:8"
															},
															"nativeSrc": "3558:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "3558:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "3461:133:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3488:6:8",
														"nodeType": "YulTypedName",
														"src": "3488:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3496:3:8",
														"nodeType": "YulTypedName",
														"src": "3496:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3504:5:8",
														"nodeType": "YulTypedName",
														"src": "3504:5:8",
														"type": ""
													}
												],
												"src": "3461:133:8"
											},
											{
												"body": {
													"nativeSrc": "3680:388:8",
													"nodeType": "YulBlock",
													"src": "3680:388:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3726:83:8",
																"nodeType": "YulBlock",
																"src": "3726:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3728:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3728:77:8"
																			},
																			"nativeSrc": "3728:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3728:79:8"
																		},
																		"nativeSrc": "3728:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3728:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3701:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3701:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3710:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3710:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3697:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3697:3:8"
																		},
																		"nativeSrc": "3697:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3697:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3722:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3722:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3693:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3693:3:8"
																},
																"nativeSrc": "3693:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3693:32:8"
															},
															"nativeSrc": "3690:119:8",
															"nodeType": "YulIf",
															"src": "3690:119:8"
														},
														{
															"nativeSrc": "3819:114:8",
															"nodeType": "YulBlock",
															"src": "3819:114:8",
															"statements": [
																{
																	"nativeSrc": "3834:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3834:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3848:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3848:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3838:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3838:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3863:60:8",
																	"nodeType": "YulAssignment",
																	"src": "3863:60:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3895:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3895:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3906:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3906:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3891:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3891:3:8"
																				},
																				"nativeSrc": "3891:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3891:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3915:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3915:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "3873:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "3873:17:8"
																		},
																		"nativeSrc": "3873:50:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3873:50:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3863:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3863:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3943:118:8",
															"nodeType": "YulBlock",
															"src": "3943:118:8",
															"statements": [
																{
																	"nativeSrc": "3958:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3958:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3972:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3972:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3962:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3962:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3988:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3988:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4023:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4023:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4034:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4034:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4019:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4019:3:8"
																				},
																				"nativeSrc": "4019:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4019:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4043:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4043:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3998:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3998:20:8"
																		},
																		"nativeSrc": "3998:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3998:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3988:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3988:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_boolt_uint256",
												"nativeSrc": "3600:468:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3642:9:8",
														"nodeType": "YulTypedName",
														"src": "3642:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3653:7:8",
														"nodeType": "YulTypedName",
														"src": "3653:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3665:6:8",
														"nodeType": "YulTypedName",
														"src": "3665:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3673:6:8",
														"nodeType": "YulTypedName",
														"src": "3673:6:8",
														"type": ""
													}
												],
												"src": "3600:468:8"
											},
											{
												"body": {
													"nativeSrc": "4139:53:8",
													"nodeType": "YulBlock",
													"src": "4139:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4156:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4156:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4179:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4179:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4161:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "4161:17:8"
																		},
																		"nativeSrc": "4161:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4161:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4149:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4149:6:8"
																},
																"nativeSrc": "4149:37:8",
																"nodeType": "YulFunctionCall",
																"src": "4149:37:8"
															},
															"nativeSrc": "4149:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "4149:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4074:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4127:5:8",
														"nodeType": "YulTypedName",
														"src": "4127:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4134:3:8",
														"nodeType": "YulTypedName",
														"src": "4134:3:8",
														"type": ""
													}
												],
												"src": "4074:118:8"
											},
											{
												"body": {
													"nativeSrc": "4296:124:8",
													"nodeType": "YulBlock",
													"src": "4296:124:8",
													"statements": [
														{
															"nativeSrc": "4306:26:8",
															"nodeType": "YulAssignment",
															"src": "4306:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4318:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4318:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4329:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4329:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4314:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4314:3:8"
																},
																"nativeSrc": "4314:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4314:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4306:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4306:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4386:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4386:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4399:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4399:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4410:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4410:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4395:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4395:3:8"
																		},
																		"nativeSrc": "4395:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4395:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4342:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "4342:43:8"
																},
																"nativeSrc": "4342:71:8",
																"nodeType": "YulFunctionCall",
																"src": "4342:71:8"
															},
															"nativeSrc": "4342:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "4342:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4198:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4268:9:8",
														"nodeType": "YulTypedName",
														"src": "4268:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4280:6:8",
														"nodeType": "YulTypedName",
														"src": "4280:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4291:4:8",
														"nodeType": "YulTypedName",
														"src": "4291:4:8",
														"type": ""
													}
												],
												"src": "4198:222:8"
											},
											{
												"body": {
													"nativeSrc": "4526:519:8",
													"nodeType": "YulBlock",
													"src": "4526:519:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4572:83:8",
																"nodeType": "YulBlock",
																"src": "4572:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4574:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4574:77:8"
																			},
																			"nativeSrc": "4574:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4574:79:8"
																		},
																		"nativeSrc": "4574:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4574:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4547:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4547:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4556:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4556:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4543:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4543:3:8"
																		},
																		"nativeSrc": "4543:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4543:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4568:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4568:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4539:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4539:3:8"
																},
																"nativeSrc": "4539:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4539:32:8"
															},
															"nativeSrc": "4536:119:8",
															"nodeType": "YulIf",
															"src": "4536:119:8"
														},
														{
															"nativeSrc": "4665:117:8",
															"nodeType": "YulBlock",
															"src": "4665:117:8",
															"statements": [
																{
																	"nativeSrc": "4680:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4680:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4694:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4694:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4684:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4684:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4709:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4709:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4744:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4744:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4755:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4755:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4740:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4740:3:8"
																				},
																				"nativeSrc": "4740:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4740:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4764:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4764:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4719:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4719:20:8"
																		},
																		"nativeSrc": "4719:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4719:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4709:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4709:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4792:118:8",
															"nodeType": "YulBlock",
															"src": "4792:118:8",
															"statements": [
																{
																	"nativeSrc": "4807:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4807:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4821:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4821:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4811:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4811:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4837:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4837:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4872:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4872:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4883:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4883:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4868:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4868:3:8"
																				},
																				"nativeSrc": "4868:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4868:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4892:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4892:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4847:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4847:20:8"
																		},
																		"nativeSrc": "4847:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4847:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4837:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4837:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4920:118:8",
															"nodeType": "YulBlock",
															"src": "4920:118:8",
															"statements": [
																{
																	"nativeSrc": "4935:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4935:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4949:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4949:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4939:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4939:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4965:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4965:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5000:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5000:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5011:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5011:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4996:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4996:3:8"
																				},
																				"nativeSrc": "4996:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4996:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5020:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5020:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4975:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4975:20:8"
																		},
																		"nativeSrc": "4975:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4975:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4965:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4965:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4426:619:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4480:9:8",
														"nodeType": "YulTypedName",
														"src": "4480:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4491:7:8",
														"nodeType": "YulTypedName",
														"src": "4491:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4503:6:8",
														"nodeType": "YulTypedName",
														"src": "4503:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4511:6:8",
														"nodeType": "YulTypedName",
														"src": "4511:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4519:6:8",
														"nodeType": "YulTypedName",
														"src": "4519:6:8",
														"type": ""
													}
												],
												"src": "4426:619:8"
											},
											{
												"body": {
													"nativeSrc": "5094:43:8",
													"nodeType": "YulBlock",
													"src": "5094:43:8",
													"statements": [
														{
															"nativeSrc": "5104:27:8",
															"nodeType": "YulAssignment",
															"src": "5104:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5119:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5119:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5126:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5126:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5115:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5115:3:8"
																},
																"nativeSrc": "5115:16:8",
																"nodeType": "YulFunctionCall",
																"src": "5115:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5104:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "5104:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5051:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5076:5:8",
														"nodeType": "YulTypedName",
														"src": "5076:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5086:7:8",
														"nodeType": "YulTypedName",
														"src": "5086:7:8",
														"type": ""
													}
												],
												"src": "5051:86:8"
											},
											{
												"body": {
													"nativeSrc": "5204:51:8",
													"nodeType": "YulBlock",
													"src": "5204:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5221:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5221:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5242:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5242:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5226:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "5226:15:8"
																		},
																		"nativeSrc": "5226:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5226:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5214:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5214:6:8"
																},
																"nativeSrc": "5214:35:8",
																"nodeType": "YulFunctionCall",
																"src": "5214:35:8"
															},
															"nativeSrc": "5214:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "5214:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5143:112:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5192:5:8",
														"nodeType": "YulTypedName",
														"src": "5192:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5199:3:8",
														"nodeType": "YulTypedName",
														"src": "5199:3:8",
														"type": ""
													}
												],
												"src": "5143:112:8"
											},
											{
												"body": {
													"nativeSrc": "5355:120:8",
													"nodeType": "YulBlock",
													"src": "5355:120:8",
													"statements": [
														{
															"nativeSrc": "5365:26:8",
															"nodeType": "YulAssignment",
															"src": "5365:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5377:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5377:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5388:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5388:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5373:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5373:3:8"
																},
																"nativeSrc": "5373:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5373:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5365:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5365:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5441:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5441:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5454:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5454:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5465:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5465:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5450:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5450:3:8"
																		},
																		"nativeSrc": "5450:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5450:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5401:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "5401:39:8"
																},
																"nativeSrc": "5401:67:8",
																"nodeType": "YulFunctionCall",
																"src": "5401:67:8"
															},
															"nativeSrc": "5401:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "5401:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5261:214:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5327:9:8",
														"nodeType": "YulTypedName",
														"src": "5327:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5339:6:8",
														"nodeType": "YulTypedName",
														"src": "5339:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5350:4:8",
														"nodeType": "YulTypedName",
														"src": "5350:4:8",
														"type": ""
													}
												],
												"src": "5261:214:8"
											},
											{
												"body": {
													"nativeSrc": "5547:263:8",
													"nodeType": "YulBlock",
													"src": "5547:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5593:83:8",
																"nodeType": "YulBlock",
																"src": "5593:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5595:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5595:77:8"
																			},
																			"nativeSrc": "5595:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5595:79:8"
																		},
																		"nativeSrc": "5595:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5595:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5568:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5568:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5577:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5577:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5564:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5564:3:8"
																		},
																		"nativeSrc": "5564:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5564:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5589:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5589:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5560:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5560:3:8"
																},
																"nativeSrc": "5560:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5560:32:8"
															},
															"nativeSrc": "5557:119:8",
															"nodeType": "YulIf",
															"src": "5557:119:8"
														},
														{
															"nativeSrc": "5686:117:8",
															"nodeType": "YulBlock",
															"src": "5686:117:8",
															"statements": [
																{
																	"nativeSrc": "5701:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5701:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5715:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5715:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5705:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5705:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5730:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5730:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5765:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5765:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5776:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5776:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5761:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5761:3:8"
																				},
																				"nativeSrc": "5761:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5761:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5785:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5785:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5740:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5740:20:8"
																		},
																		"nativeSrc": "5740:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5740:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5730:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5730:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5481:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5517:9:8",
														"nodeType": "YulTypedName",
														"src": "5517:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5528:7:8",
														"nodeType": "YulTypedName",
														"src": "5528:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5540:6:8",
														"nodeType": "YulTypedName",
														"src": "5540:6:8",
														"type": ""
													}
												],
												"src": "5481:329:8"
											},
											{
												"body": {
													"nativeSrc": "5882:263:8",
													"nodeType": "YulBlock",
													"src": "5882:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5928:83:8",
																"nodeType": "YulBlock",
																"src": "5928:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5930:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5930:77:8"
																			},
																			"nativeSrc": "5930:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5930:79:8"
																		},
																		"nativeSrc": "5930:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5930:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5903:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5903:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5912:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5912:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5899:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5899:3:8"
																		},
																		"nativeSrc": "5899:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5899:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5924:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5924:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5895:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5895:3:8"
																},
																"nativeSrc": "5895:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5895:32:8"
															},
															"nativeSrc": "5892:119:8",
															"nodeType": "YulIf",
															"src": "5892:119:8"
														},
														{
															"nativeSrc": "6021:117:8",
															"nodeType": "YulBlock",
															"src": "6021:117:8",
															"statements": [
																{
																	"nativeSrc": "6036:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6036:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6050:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6050:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6040:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6040:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6065:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6065:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6100:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6100:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6111:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6111:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6096:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6096:3:8"
																				},
																				"nativeSrc": "6096:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6096:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6120:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6120:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6075:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6075:20:8"
																		},
																		"nativeSrc": "6075:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6075:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6065:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6065:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5816:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5852:9:8",
														"nodeType": "YulTypedName",
														"src": "5852:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5863:7:8",
														"nodeType": "YulTypedName",
														"src": "5863:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5875:6:8",
														"nodeType": "YulTypedName",
														"src": "5875:6:8",
														"type": ""
													}
												],
												"src": "5816:329:8"
											},
											{
												"body": {
													"nativeSrc": "6216:53:8",
													"nodeType": "YulBlock",
													"src": "6216:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6233:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6233:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6256:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6256:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6238:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "6238:17:8"
																		},
																		"nativeSrc": "6238:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6238:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6226:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6226:6:8"
																},
																"nativeSrc": "6226:37:8",
																"nodeType": "YulFunctionCall",
																"src": "6226:37:8"
															},
															"nativeSrc": "6226:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "6226:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6151:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6204:5:8",
														"nodeType": "YulTypedName",
														"src": "6204:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6211:3:8",
														"nodeType": "YulTypedName",
														"src": "6211:3:8",
														"type": ""
													}
												],
												"src": "6151:118:8"
											},
											{
												"body": {
													"nativeSrc": "6373:124:8",
													"nodeType": "YulBlock",
													"src": "6373:124:8",
													"statements": [
														{
															"nativeSrc": "6383:26:8",
															"nodeType": "YulAssignment",
															"src": "6383:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6395:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6395:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6406:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6406:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6391:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6391:3:8"
																},
																"nativeSrc": "6391:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6391:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6383:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6383:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6463:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6463:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6476:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6476:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6487:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6487:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6472:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6472:3:8"
																		},
																		"nativeSrc": "6472:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6472:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6419:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6419:43:8"
																},
																"nativeSrc": "6419:71:8",
																"nodeType": "YulFunctionCall",
																"src": "6419:71:8"
															},
															"nativeSrc": "6419:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "6419:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6275:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6345:9:8",
														"nodeType": "YulTypedName",
														"src": "6345:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6357:6:8",
														"nodeType": "YulTypedName",
														"src": "6357:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6368:4:8",
														"nodeType": "YulTypedName",
														"src": "6368:4:8",
														"type": ""
													}
												],
												"src": "6275:222:8"
											},
											{
												"body": {
													"nativeSrc": "6544:77:8",
													"nodeType": "YulBlock",
													"src": "6544:77:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6599:16:8",
																"nodeType": "YulBlock",
																"src": "6599:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6608:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6608:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6611:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6611:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6601:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6601:6:8"
																			},
																			"nativeSrc": "6601:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6601:12:8"
																		},
																		"nativeSrc": "6601:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6601:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6567:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6567:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6590:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "6590:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "6574:15:8",
																					"nodeType": "YulIdentifier",
																					"src": "6574:15:8"
																				},
																				"nativeSrc": "6574:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6574:22:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6564:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "6564:2:8"
																		},
																		"nativeSrc": "6564:33:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6564:33:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6557:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6557:6:8"
																},
																"nativeSrc": "6557:41:8",
																"nodeType": "YulFunctionCall",
																"src": "6557:41:8"
															},
															"nativeSrc": "6554:61:8",
															"nodeType": "YulIf",
															"src": "6554:61:8"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "6503:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6537:5:8",
														"nodeType": "YulTypedName",
														"src": "6537:5:8",
														"type": ""
													}
												],
												"src": "6503:118:8"
											},
											{
												"body": {
													"nativeSrc": "6677:85:8",
													"nodeType": "YulBlock",
													"src": "6677:85:8",
													"statements": [
														{
															"nativeSrc": "6687:29:8",
															"nodeType": "YulAssignment",
															"src": "6687:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6709:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6709:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6696:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "6696:12:8"
																},
																"nativeSrc": "6696:20:8",
																"nodeType": "YulFunctionCall",
																"src": "6696:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6687:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "6687:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6750:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6750:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "6725:24:8",
																	"nodeType": "YulIdentifier",
																	"src": "6725:24:8"
																},
																"nativeSrc": "6725:31:8",
																"nodeType": "YulFunctionCall",
																"src": "6725:31:8"
															},
															"nativeSrc": "6725:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "6725:31:8"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nativeSrc": "6627:135:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6655:6:8",
														"nodeType": "YulTypedName",
														"src": "6655:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6663:3:8",
														"nodeType": "YulTypedName",
														"src": "6663:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6671:5:8",
														"nodeType": "YulTypedName",
														"src": "6671:5:8",
														"type": ""
													}
												],
												"src": "6627:135:8"
											},
											{
												"body": {
													"nativeSrc": "6832:261:8",
													"nodeType": "YulBlock",
													"src": "6832:261:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6878:83:8",
																"nodeType": "YulBlock",
																"src": "6878:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6880:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "6880:77:8"
																			},
																			"nativeSrc": "6880:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6880:79:8"
																		},
																		"nativeSrc": "6880:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6880:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6853:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6853:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6862:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6862:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6849:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6849:3:8"
																		},
																		"nativeSrc": "6849:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6849:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6874:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6874:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6845:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6845:3:8"
																},
																"nativeSrc": "6845:32:8",
																"nodeType": "YulFunctionCall",
																"src": "6845:32:8"
															},
															"nativeSrc": "6842:119:8",
															"nodeType": "YulIf",
															"src": "6842:119:8"
														},
														{
															"nativeSrc": "6971:115:8",
															"nodeType": "YulBlock",
															"src": "6971:115:8",
															"statements": [
																{
																	"nativeSrc": "6986:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6986:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7000:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7000:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6990:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6990:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7015:61:8",
																	"nodeType": "YulAssignment",
																	"src": "7015:61:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7048:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "7048:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7059:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "7059:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7044:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7044:3:8"
																				},
																				"nativeSrc": "7044:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7044:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7068:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7068:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nativeSrc": "7025:18:8",
																			"nodeType": "YulIdentifier",
																			"src": "7025:18:8"
																		},
																		"nativeSrc": "7025:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7025:51:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7015:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "7015:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8",
												"nativeSrc": "6768:325:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6802:9:8",
														"nodeType": "YulTypedName",
														"src": "6802:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6813:7:8",
														"nodeType": "YulTypedName",
														"src": "6813:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6825:6:8",
														"nodeType": "YulTypedName",
														"src": "6825:6:8",
														"type": ""
													}
												],
												"src": "6768:325:8"
											},
											{
												"body": {
													"nativeSrc": "7171:40:8",
													"nodeType": "YulBlock",
													"src": "7171:40:8",
													"statements": [
														{
															"nativeSrc": "7182:22:8",
															"nodeType": "YulAssignment",
															"src": "7182:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7198:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7198:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7192:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "7192:5:8"
																},
																"nativeSrc": "7192:12:8",
																"nodeType": "YulFunctionCall",
																"src": "7192:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7182:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7182:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint8_$dyn_memory_ptr",
												"nativeSrc": "7099:112:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7154:5:8",
														"nodeType": "YulTypedName",
														"src": "7154:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7164:6:8",
														"nodeType": "YulTypedName",
														"src": "7164:6:8",
														"type": ""
													}
												],
												"src": "7099:112:8"
											},
											{
												"body": {
													"nativeSrc": "7326:73:8",
													"nodeType": "YulBlock",
													"src": "7326:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7343:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7343:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7348:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7348:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7336:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7336:6:8"
																},
																"nativeSrc": "7336:19:8",
																"nodeType": "YulFunctionCall",
																"src": "7336:19:8"
															},
															"nativeSrc": "7336:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "7336:19:8"
														},
														{
															"nativeSrc": "7364:29:8",
															"nodeType": "YulAssignment",
															"src": "7364:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7383:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7383:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7388:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7388:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7379:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7379:3:8"
																},
																"nativeSrc": "7379:14:8",
																"nodeType": "YulFunctionCall",
																"src": "7379:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7364:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "7364:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint8_$dyn_memory_ptr_fromStack",
												"nativeSrc": "7217:182:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7298:3:8",
														"nodeType": "YulTypedName",
														"src": "7298:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7303:6:8",
														"nodeType": "YulTypedName",
														"src": "7303:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7314:11:8",
														"nodeType": "YulTypedName",
														"src": "7314:11:8",
														"type": ""
													}
												],
												"src": "7217:182:8"
											},
											{
												"body": {
													"nativeSrc": "7475:60:8",
													"nodeType": "YulBlock",
													"src": "7475:60:8",
													"statements": [
														{
															"nativeSrc": "7485:11:8",
															"nodeType": "YulAssignment",
															"src": "7485:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "7493:3:8",
																"nodeType": "YulIdentifier",
																"src": "7493:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7485:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7485:4:8"
																}
															]
														},
														{
															"nativeSrc": "7506:22:8",
															"nodeType": "YulAssignment",
															"src": "7506:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "7518:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7518:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7523:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7523:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7514:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7514:3:8"
																},
																"nativeSrc": "7514:14:8",
																"nodeType": "YulFunctionCall",
																"src": "7514:14:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7506:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7506:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint8_$dyn_memory_ptr",
												"nativeSrc": "7405:130:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "7462:3:8",
														"nodeType": "YulTypedName",
														"src": "7462:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "7470:4:8",
														"nodeType": "YulTypedName",
														"src": "7470:4:8",
														"type": ""
													}
												],
												"src": "7405:130:8"
											},
											{
												"body": {
													"nativeSrc": "7592:51:8",
													"nodeType": "YulBlock",
													"src": "7592:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7609:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7609:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7630:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7630:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "7614:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "7614:15:8"
																		},
																		"nativeSrc": "7614:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7614:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7602:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7602:6:8"
																},
																"nativeSrc": "7602:35:8",
																"nodeType": "YulFunctionCall",
																"src": "7602:35:8"
															},
															"nativeSrc": "7602:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "7602:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8",
												"nativeSrc": "7541:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7580:5:8",
														"nodeType": "YulTypedName",
														"src": "7580:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7587:3:8",
														"nodeType": "YulTypedName",
														"src": "7587:3:8",
														"type": ""
													}
												],
												"src": "7541:102:8"
											},
											{
												"body": {
													"nativeSrc": "7725:95:8",
													"nodeType": "YulBlock",
													"src": "7725:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7765:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7765:6:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7773:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7773:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8",
																	"nativeSrc": "7735:29:8",
																	"nodeType": "YulIdentifier",
																	"src": "7735:29:8"
																},
																"nativeSrc": "7735:42:8",
																"nodeType": "YulFunctionCall",
																"src": "7735:42:8"
															},
															"nativeSrc": "7735:42:8",
															"nodeType": "YulExpressionStatement",
															"src": "7735:42:8"
														},
														{
															"nativeSrc": "7786:28:8",
															"nodeType": "YulAssignment",
															"src": "7786:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7804:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7804:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7809:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7809:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7800:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7800:3:8"
																},
																"nativeSrc": "7800:14:8",
																"nodeType": "YulFunctionCall",
																"src": "7800:14:8"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "7786:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "7786:10:8"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint8_to_t_uint8",
												"nativeSrc": "7649:171:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "7698:6:8",
														"nodeType": "YulTypedName",
														"src": "7698:6:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7706:3:8",
														"nodeType": "YulTypedName",
														"src": "7706:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "7714:10:8",
														"nodeType": "YulTypedName",
														"src": "7714:10:8",
														"type": ""
													}
												],
												"src": "7649:171:8"
											},
											{
												"body": {
													"nativeSrc": "7899:38:8",
													"nodeType": "YulBlock",
													"src": "7899:38:8",
													"statements": [
														{
															"nativeSrc": "7909:22:8",
															"nodeType": "YulAssignment",
															"src": "7909:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "7921:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7921:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7926:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7926:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7917:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7917:3:8"
																},
																"nativeSrc": "7917:14:8",
																"nodeType": "YulFunctionCall",
																"src": "7917:14:8"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "7909:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7909:4:8"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint8_$dyn_memory_ptr",
												"nativeSrc": "7826:111:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "7886:3:8",
														"nodeType": "YulTypedName",
														"src": "7886:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "7894:4:8",
														"nodeType": "YulTypedName",
														"src": "7894:4:8",
														"type": ""
													}
												],
												"src": "7826:111:8"
											},
											{
												"body": {
													"nativeSrc": "8089:596:8",
													"nodeType": "YulBlock",
													"src": "8089:596:8",
													"statements": [
														{
															"nativeSrc": "8099:66:8",
															"nodeType": "YulVariableDeclaration",
															"src": "8099:66:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8159:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8159:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint8_$dyn_memory_ptr",
																	"nativeSrc": "8113:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "8113:45:8"
																},
																"nativeSrc": "8113:52:8",
																"nodeType": "YulFunctionCall",
																"src": "8113:52:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8103:6:8",
																	"nodeType": "YulTypedName",
																	"src": "8103:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8174:91:8",
															"nodeType": "YulAssignment",
															"src": "8174:91:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8253:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8253:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8258:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8258:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint8_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "8181:71:8",
																	"nodeType": "YulIdentifier",
																	"src": "8181:71:8"
																},
																"nativeSrc": "8181:84:8",
																"nodeType": "YulFunctionCall",
																"src": "8181:84:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8174:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8174:3:8"
																}
															]
														},
														{
															"nativeSrc": "8274:69:8",
															"nodeType": "YulVariableDeclaration",
															"src": "8274:69:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8337:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8337:5:8"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint8_$dyn_memory_ptr",
																	"nativeSrc": "8289:47:8",
																	"nodeType": "YulIdentifier",
																	"src": "8289:47:8"
																},
																"nativeSrc": "8289:54:8",
																"nodeType": "YulFunctionCall",
																"src": "8289:54:8"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "8278:7:8",
																	"nodeType": "YulTypedName",
																	"src": "8278:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8352:21:8",
															"nodeType": "YulVariableDeclaration",
															"src": "8352:21:8",
															"value": {
																"name": "baseRef",
																"nativeSrc": "8366:7:8",
																"nodeType": "YulIdentifier",
																"src": "8366:7:8"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "8356:6:8",
																	"nodeType": "YulTypedName",
																	"src": "8356:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8442:218:8",
																"nodeType": "YulBlock",
																"src": "8442:218:8",
																"statements": [
																	{
																		"nativeSrc": "8456:34:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8456:34:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "8483:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "8483:6:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8477:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8477:5:8"
																			},
																			"nativeSrc": "8477:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8477:13:8"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "8460:13:8",
																				"nodeType": "YulTypedName",
																				"src": "8460:13:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "8503:66:8",
																		"nodeType": "YulAssignment",
																		"src": "8503:66:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "8550:13:8",
																					"nodeType": "YulIdentifier",
																					"src": "8550:13:8"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "8565:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8565:3:8"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint8_to_t_uint8",
																				"nativeSrc": "8510:39:8",
																				"nodeType": "YulIdentifier",
																				"src": "8510:39:8"
																			},
																			"nativeSrc": "8510:59:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8510:59:8"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "8503:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "8503:3:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8582:68:8",
																		"nodeType": "YulAssignment",
																		"src": "8582:68:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "8643:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "8643:6:8"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint8_$dyn_memory_ptr",
																				"nativeSrc": "8592:50:8",
																				"nodeType": "YulIdentifier",
																				"src": "8592:50:8"
																			},
																			"nativeSrc": "8592:58:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8592:58:8"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "8582:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8582:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "8404:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8404:1:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8407:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8407:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8401:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8401:2:8"
																},
																"nativeSrc": "8401:13:8",
																"nodeType": "YulFunctionCall",
																"src": "8401:13:8"
															},
															"nativeSrc": "8382:278:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8415:18:8",
																"nodeType": "YulBlock",
																"src": "8415:18:8",
																"statements": [
																	{
																		"nativeSrc": "8417:14:8",
																		"nodeType": "YulAssignment",
																		"src": "8417:14:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "8426:1:8",
																					"nodeType": "YulIdentifier",
																					"src": "8426:1:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8429:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8429:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8422:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "8422:3:8"
																			},
																			"nativeSrc": "8422:9:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8422:9:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "8417:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "8417:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "8386:14:8",
																"nodeType": "YulBlock",
																"src": "8386:14:8",
																"statements": [
																	{
																		"nativeSrc": "8388:10:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8388:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8397:1:8",
																			"nodeType": "YulLiteral",
																			"src": "8397:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "8392:1:8",
																				"nodeType": "YulTypedName",
																				"src": "8392:1:8",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "8382:278:8"
														},
														{
															"nativeSrc": "8669:10:8",
															"nodeType": "YulAssignment",
															"src": "8669:10:8",
															"value": {
																"name": "pos",
																"nativeSrc": "8676:3:8",
																"nodeType": "YulIdentifier",
																"src": "8676:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8669:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8669:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint8_$dyn_memory_ptr_to_t_array$_t_uint8_$dyn_memory_ptr_fromStack",
												"nativeSrc": "7969:716:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8068:5:8",
														"nodeType": "YulTypedName",
														"src": "8068:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8075:3:8",
														"nodeType": "YulTypedName",
														"src": "8075:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8084:3:8",
														"nodeType": "YulTypedName",
														"src": "8084:3:8",
														"type": ""
													}
												],
												"src": "7969:716:8"
											},
											{
												"body": {
													"nativeSrc": "8835:221:8",
													"nodeType": "YulBlock",
													"src": "8835:221:8",
													"statements": [
														{
															"nativeSrc": "8845:26:8",
															"nodeType": "YulAssignment",
															"src": "8845:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8857:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8857:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8868:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8868:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8853:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8853:3:8"
																},
																"nativeSrc": "8853:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8853:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8845:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8845:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8892:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8892:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8903:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8903:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8888:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8888:3:8"
																		},
																		"nativeSrc": "8888:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8888:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8911:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8911:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8917:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8917:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8907:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8907:3:8"
																		},
																		"nativeSrc": "8907:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8907:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8881:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8881:6:8"
																},
																"nativeSrc": "8881:47:8",
																"nodeType": "YulFunctionCall",
																"src": "8881:47:8"
															},
															"nativeSrc": "8881:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "8881:47:8"
														},
														{
															"nativeSrc": "8937:112:8",
															"nodeType": "YulAssignment",
															"src": "8937:112:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9035:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9035:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "9044:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9044:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint8_$dyn_memory_ptr_to_t_array$_t_uint8_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "8945:89:8",
																	"nodeType": "YulIdentifier",
																	"src": "8945:89:8"
																},
																"nativeSrc": "8945:104:8",
																"nodeType": "YulFunctionCall",
																"src": "8945:104:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8937:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8937:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint8_$dyn_memory_ptr__to_t_array$_t_uint8_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "8691:365:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8807:9:8",
														"nodeType": "YulTypedName",
														"src": "8807:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8819:6:8",
														"nodeType": "YulTypedName",
														"src": "8819:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8830:4:8",
														"nodeType": "YulTypedName",
														"src": "8830:4:8",
														"type": ""
													}
												],
												"src": "8691:365:8"
											},
											{
												"body": {
													"nativeSrc": "9208:277:8",
													"nodeType": "YulBlock",
													"src": "9208:277:8",
													"statements": [
														{
															"nativeSrc": "9218:26:8",
															"nodeType": "YulAssignment",
															"src": "9218:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9230:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9230:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9241:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9241:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9226:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9226:3:8"
																},
																"nativeSrc": "9226:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9226:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9218:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9218:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9265:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9265:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9276:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9276:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9261:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9261:3:8"
																		},
																		"nativeSrc": "9261:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9261:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9284:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9284:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9290:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9290:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9280:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9280:3:8"
																		},
																		"nativeSrc": "9280:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9280:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9254:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9254:6:8"
																},
																"nativeSrc": "9254:47:8",
																"nodeType": "YulFunctionCall",
																"src": "9254:47:8"
															},
															"nativeSrc": "9254:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "9254:47:8"
														},
														{
															"nativeSrc": "9310:86:8",
															"nodeType": "YulAssignment",
															"src": "9310:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9382:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9382:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "9391:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9391:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9318:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "9318:63:8"
																},
																"nativeSrc": "9318:78:8",
																"nodeType": "YulFunctionCall",
																"src": "9318:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9310:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9310:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9450:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9450:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9463:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9463:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9474:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9474:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9459:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9459:3:8"
																		},
																		"nativeSrc": "9459:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9459:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9406:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9406:43:8"
																},
																"nativeSrc": "9406:72:8",
																"nodeType": "YulFunctionCall",
																"src": "9406:72:8"
															},
															"nativeSrc": "9406:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "9406:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "9062:423:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9172:9:8",
														"nodeType": "YulTypedName",
														"src": "9172:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9184:6:8",
														"nodeType": "YulTypedName",
														"src": "9184:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9192:6:8",
														"nodeType": "YulTypedName",
														"src": "9192:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9203:4:8",
														"nodeType": "YulTypedName",
														"src": "9203:4:8",
														"type": ""
													}
												],
												"src": "9062:423:8"
											},
											{
												"body": {
													"nativeSrc": "9574:391:8",
													"nodeType": "YulBlock",
													"src": "9574:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "9620:83:8",
																"nodeType": "YulBlock",
																"src": "9620:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9622:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "9622:77:8"
																			},
																			"nativeSrc": "9622:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9622:79:8"
																		},
																		"nativeSrc": "9622:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9622:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9595:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "9595:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9604:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9604:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9591:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9591:3:8"
																		},
																		"nativeSrc": "9591:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9591:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9616:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9616:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9587:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9587:3:8"
																},
																"nativeSrc": "9587:32:8",
																"nodeType": "YulFunctionCall",
																"src": "9587:32:8"
															},
															"nativeSrc": "9584:119:8",
															"nodeType": "YulIf",
															"src": "9584:119:8"
														},
														{
															"nativeSrc": "9713:117:8",
															"nodeType": "YulBlock",
															"src": "9713:117:8",
															"statements": [
																{
																	"nativeSrc": "9728:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9728:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9742:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9742:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9732:6:8",
																			"nodeType": "YulTypedName",
																			"src": "9732:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9757:63:8",
																	"nodeType": "YulAssignment",
																	"src": "9757:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9792:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "9792:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9803:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "9803:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9788:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "9788:3:8"
																				},
																				"nativeSrc": "9788:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9788:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9812:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "9812:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9767:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "9767:20:8"
																		},
																		"nativeSrc": "9767:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9767:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9757:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "9757:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9840:118:8",
															"nodeType": "YulBlock",
															"src": "9840:118:8",
															"statements": [
																{
																	"nativeSrc": "9855:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9855:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9869:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9869:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9859:6:8",
																			"nodeType": "YulTypedName",
																			"src": "9859:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9885:63:8",
																	"nodeType": "YulAssignment",
																	"src": "9885:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9920:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "9920:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9931:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "9931:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9916:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "9916:3:8"
																				},
																				"nativeSrc": "9916:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9916:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9940:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "9940:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9895:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "9895:20:8"
																		},
																		"nativeSrc": "9895:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9895:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9885:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "9885:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "9491:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9536:9:8",
														"nodeType": "YulTypedName",
														"src": "9536:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9547:7:8",
														"nodeType": "YulTypedName",
														"src": "9547:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9559:6:8",
														"nodeType": "YulTypedName",
														"src": "9559:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9567:6:8",
														"nodeType": "YulTypedName",
														"src": "9567:6:8",
														"type": ""
													}
												],
												"src": "9491:474:8"
											},
											{
												"body": {
													"nativeSrc": "10060:28:8",
													"nodeType": "YulBlock",
													"src": "10060:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10077:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10077:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10080:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10080:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10070:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10070:6:8"
																},
																"nativeSrc": "10070:12:8",
																"nodeType": "YulFunctionCall",
																"src": "10070:12:8"
															},
															"nativeSrc": "10070:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "10070:12:8"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "9971:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "9971:117:8"
											},
											{
												"body": {
													"nativeSrc": "10183:28:8",
													"nodeType": "YulBlock",
													"src": "10183:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10200:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10200:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10203:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10203:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10193:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10193:6:8"
																},
																"nativeSrc": "10193:12:8",
																"nodeType": "YulFunctionCall",
																"src": "10193:12:8"
															},
															"nativeSrc": "10193:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "10193:12:8"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "10094:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "10094:117:8"
											},
											{
												"body": {
													"nativeSrc": "10245:152:8",
													"nodeType": "YulBlock",
													"src": "10245:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10262:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10262:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10265:77:8",
																		"nodeType": "YulLiteral",
																		"src": "10265:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10255:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10255:6:8"
																},
																"nativeSrc": "10255:88:8",
																"nodeType": "YulFunctionCall",
																"src": "10255:88:8"
															},
															"nativeSrc": "10255:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "10255:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10359:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10359:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10362:4:8",
																		"nodeType": "YulLiteral",
																		"src": "10362:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10352:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10352:6:8"
																},
																"nativeSrc": "10352:15:8",
																"nodeType": "YulFunctionCall",
																"src": "10352:15:8"
															},
															"nativeSrc": "10352:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "10352:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10383:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10383:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10386:4:8",
																		"nodeType": "YulLiteral",
																		"src": "10386:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10376:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10376:6:8"
																},
																"nativeSrc": "10376:15:8",
																"nodeType": "YulFunctionCall",
																"src": "10376:15:8"
															},
															"nativeSrc": "10376:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "10376:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "10217:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "10217:180:8"
											},
											{
												"body": {
													"nativeSrc": "10446:238:8",
													"nodeType": "YulBlock",
													"src": "10446:238:8",
													"statements": [
														{
															"nativeSrc": "10456:58:8",
															"nodeType": "YulVariableDeclaration",
															"src": "10456:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "10478:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10478:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "10508:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "10508:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "10486:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "10486:21:8"
																		},
																		"nativeSrc": "10486:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10486:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10474:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10474:3:8"
																},
																"nativeSrc": "10474:40:8",
																"nodeType": "YulFunctionCall",
																"src": "10474:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "10460:10:8",
																	"nodeType": "YulTypedName",
																	"src": "10460:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10625:22:8",
																"nodeType": "YulBlock",
																"src": "10625:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10627:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "10627:16:8"
																			},
																			"nativeSrc": "10627:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10627:18:8"
																		},
																		"nativeSrc": "10627:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10627:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "10568:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "10568:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10580:18:8",
																				"nodeType": "YulLiteral",
																				"src": "10580:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10565:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "10565:2:8"
																		},
																		"nativeSrc": "10565:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10565:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "10604:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "10604:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "10616:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10616:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10601:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "10601:2:8"
																		},
																		"nativeSrc": "10601:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10601:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "10562:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "10562:2:8"
																},
																"nativeSrc": "10562:62:8",
																"nodeType": "YulFunctionCall",
																"src": "10562:62:8"
															},
															"nativeSrc": "10559:88:8",
															"nodeType": "YulIf",
															"src": "10559:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10663:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10663:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "10667:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "10667:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10656:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10656:6:8"
																},
																"nativeSrc": "10656:22:8",
																"nodeType": "YulFunctionCall",
																"src": "10656:22:8"
															},
															"nativeSrc": "10656:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "10656:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "10403:281:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10432:6:8",
														"nodeType": "YulTypedName",
														"src": "10432:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "10440:4:8",
														"nodeType": "YulTypedName",
														"src": "10440:4:8",
														"type": ""
													}
												],
												"src": "10403:281:8"
											},
											{
												"body": {
													"nativeSrc": "10731:88:8",
													"nodeType": "YulBlock",
													"src": "10731:88:8",
													"statements": [
														{
															"nativeSrc": "10741:30:8",
															"nodeType": "YulAssignment",
															"src": "10741:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "10751:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "10751:18:8"
																},
																"nativeSrc": "10751:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10751:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "10741:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10741:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "10800:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10800:6:8"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "10808:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10808:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "10780:19:8",
																	"nodeType": "YulIdentifier",
																	"src": "10780:19:8"
																},
																"nativeSrc": "10780:33:8",
																"nodeType": "YulFunctionCall",
																"src": "10780:33:8"
															},
															"nativeSrc": "10780:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "10780:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "10690:129:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "10715:4:8",
														"nodeType": "YulTypedName",
														"src": "10715:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "10724:6:8",
														"nodeType": "YulTypedName",
														"src": "10724:6:8",
														"type": ""
													}
												],
												"src": "10690:129:8"
											},
											{
												"body": {
													"nativeSrc": "10892:241:8",
													"nodeType": "YulBlock",
													"src": "10892:241:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "10997:22:8",
																"nodeType": "YulBlock",
																"src": "10997:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10999:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "10999:16:8"
																			},
																			"nativeSrc": "10999:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10999:18:8"
																		},
																		"nativeSrc": "10999:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10999:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10969:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10969:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10977:18:8",
																		"nodeType": "YulLiteral",
																		"src": "10977:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10966:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "10966:2:8"
																},
																"nativeSrc": "10966:30:8",
																"nodeType": "YulFunctionCall",
																"src": "10966:30:8"
															},
															"nativeSrc": "10963:56:8",
															"nodeType": "YulIf",
															"src": "10963:56:8"
														},
														{
															"nativeSrc": "11029:37:8",
															"nodeType": "YulAssignment",
															"src": "11029:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11059:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11059:6:8"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "11037:21:8",
																	"nodeType": "YulIdentifier",
																	"src": "11037:21:8"
																},
																"nativeSrc": "11037:29:8",
																"nodeType": "YulFunctionCall",
																"src": "11037:29:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "11029:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11029:4:8"
																}
															]
														},
														{
															"nativeSrc": "11103:23:8",
															"nodeType": "YulAssignment",
															"src": "11103:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "11115:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "11115:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11121:4:8",
																		"nodeType": "YulLiteral",
																		"src": "11121:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11111:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11111:3:8"
																},
																"nativeSrc": "11111:15:8",
																"nodeType": "YulFunctionCall",
																"src": "11111:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "11103:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11103:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "10825:308:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "10876:6:8",
														"nodeType": "YulTypedName",
														"src": "10876:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "10887:4:8",
														"nodeType": "YulTypedName",
														"src": "10887:4:8",
														"type": ""
													}
												],
												"src": "10825:308:8"
											},
											{
												"body": {
													"nativeSrc": "11203:84:8",
													"nodeType": "YulBlock",
													"src": "11203:84:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "11227:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11227:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "11232:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11232:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11237:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11237:6:8"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "11214:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "11214:12:8"
																},
																"nativeSrc": "11214:30:8",
																"nodeType": "YulFunctionCall",
																"src": "11214:30:8"
															},
															"nativeSrc": "11214:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "11214:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "11264:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "11264:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "11269:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11269:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11260:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11260:3:8"
																		},
																		"nativeSrc": "11260:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11260:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11278:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11278:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11253:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11253:6:8"
																},
																"nativeSrc": "11253:27:8",
																"nodeType": "YulFunctionCall",
																"src": "11253:27:8"
															},
															"nativeSrc": "11253:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "11253:27:8"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "11139:148:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "11185:3:8",
														"nodeType": "YulTypedName",
														"src": "11185:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "11190:3:8",
														"nodeType": "YulTypedName",
														"src": "11190:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11195:6:8",
														"nodeType": "YulTypedName",
														"src": "11195:6:8",
														"type": ""
													}
												],
												"src": "11139:148:8"
											},
											{
												"body": {
													"nativeSrc": "11377:341:8",
													"nodeType": "YulBlock",
													"src": "11377:341:8",
													"statements": [
														{
															"nativeSrc": "11387:75:8",
															"nodeType": "YulAssignment",
															"src": "11387:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11454:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11454:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "11412:41:8",
																			"nodeType": "YulIdentifier",
																			"src": "11412:41:8"
																		},
																		"nativeSrc": "11412:49:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11412:49:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "11396:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "11396:15:8"
																},
																"nativeSrc": "11396:66:8",
																"nodeType": "YulFunctionCall",
																"src": "11396:66:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11387:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "11387:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11478:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "11478:5:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11485:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11485:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11471:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11471:6:8"
																},
																"nativeSrc": "11471:21:8",
																"nodeType": "YulFunctionCall",
																"src": "11471:21:8"
															},
															"nativeSrc": "11471:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "11471:21:8"
														},
														{
															"nativeSrc": "11501:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "11501:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11516:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "11516:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11523:4:8",
																		"nodeType": "YulLiteral",
																		"src": "11523:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11512:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11512:3:8"
																},
																"nativeSrc": "11512:16:8",
																"nodeType": "YulFunctionCall",
																"src": "11512:16:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "11505:3:8",
																	"nodeType": "YulTypedName",
																	"src": "11505:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11566:83:8",
																"nodeType": "YulBlock",
																"src": "11566:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "11568:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "11568:77:8"
																			},
																			"nativeSrc": "11568:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11568:79:8"
																		},
																		"nativeSrc": "11568:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11568:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "11547:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "11547:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "11552:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11552:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11543:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11543:3:8"
																		},
																		"nativeSrc": "11543:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11543:16:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11561:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11561:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11540:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "11540:2:8"
																},
																"nativeSrc": "11540:25:8",
																"nodeType": "YulFunctionCall",
																"src": "11540:25:8"
															},
															"nativeSrc": "11537:112:8",
															"nodeType": "YulIf",
															"src": "11537:112:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "11695:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11695:3:8"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "11700:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11700:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11705:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11705:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "11658:36:8",
																	"nodeType": "YulIdentifier",
																	"src": "11658:36:8"
																},
																"nativeSrc": "11658:54:8",
																"nodeType": "YulFunctionCall",
																"src": "11658:54:8"
															},
															"nativeSrc": "11658:54:8",
															"nodeType": "YulExpressionStatement",
															"src": "11658:54:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "11293:425:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "11350:3:8",
														"nodeType": "YulTypedName",
														"src": "11350:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11355:6:8",
														"nodeType": "YulTypedName",
														"src": "11355:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11363:3:8",
														"nodeType": "YulTypedName",
														"src": "11363:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11371:5:8",
														"nodeType": "YulTypedName",
														"src": "11371:5:8",
														"type": ""
													}
												],
												"src": "11293:425:8"
											},
											{
												"body": {
													"nativeSrc": "11800:278:8",
													"nodeType": "YulBlock",
													"src": "11800:278:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "11849:83:8",
																"nodeType": "YulBlock",
																"src": "11849:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "11851:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "11851:77:8"
																			},
																			"nativeSrc": "11851:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11851:79:8"
																		},
																		"nativeSrc": "11851:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11851:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11828:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "11828:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11836:4:8",
																						"nodeType": "YulLiteral",
																						"src": "11836:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11824:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "11824:3:8"
																				},
																				"nativeSrc": "11824:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11824:17:8"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11843:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "11843:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11820:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11820:3:8"
																		},
																		"nativeSrc": "11820:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11820:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11813:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11813:6:8"
																},
																"nativeSrc": "11813:35:8",
																"nodeType": "YulFunctionCall",
																"src": "11813:35:8"
															},
															"nativeSrc": "11810:122:8",
															"nodeType": "YulIf",
															"src": "11810:122:8"
														},
														{
															"nativeSrc": "11941:34:8",
															"nodeType": "YulVariableDeclaration",
															"src": "11941:34:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11968:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11968:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11955:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "11955:12:8"
																},
																"nativeSrc": "11955:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11955:20:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11945:6:8",
																	"nodeType": "YulTypedName",
																	"src": "11945:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11984:88:8",
															"nodeType": "YulAssignment",
															"src": "11984:88:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12045:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12045:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12053:4:8",
																				"nodeType": "YulLiteral",
																				"src": "12053:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12041:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12041:3:8"
																		},
																		"nativeSrc": "12041:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12041:17:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12060:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12060:6:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "12068:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12068:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "11993:47:8",
																	"nodeType": "YulIdentifier",
																	"src": "11993:47:8"
																},
																"nativeSrc": "11993:79:8",
																"nodeType": "YulFunctionCall",
																"src": "11993:79:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11984:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "11984:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "11738:340:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11778:6:8",
														"nodeType": "YulTypedName",
														"src": "11778:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11786:3:8",
														"nodeType": "YulTypedName",
														"src": "11786:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11794:5:8",
														"nodeType": "YulTypedName",
														"src": "11794:5:8",
														"type": ""
													}
												],
												"src": "11738:340:8"
											},
											{
												"body": {
													"nativeSrc": "12177:561:8",
													"nodeType": "YulBlock",
													"src": "12177:561:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "12223:83:8",
																"nodeType": "YulBlock",
																"src": "12223:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12225:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "12225:77:8"
																			},
																			"nativeSrc": "12225:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12225:79:8"
																		},
																		"nativeSrc": "12225:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12225:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12198:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "12198:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12207:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12207:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12194:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12194:3:8"
																		},
																		"nativeSrc": "12194:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12194:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12219:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12219:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12190:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12190:3:8"
																},
																"nativeSrc": "12190:32:8",
																"nodeType": "YulFunctionCall",
																"src": "12190:32:8"
															},
															"nativeSrc": "12187:119:8",
															"nodeType": "YulIf",
															"src": "12187:119:8"
														},
														{
															"nativeSrc": "12316:287:8",
															"nodeType": "YulBlock",
															"src": "12316:287:8",
															"statements": [
																{
																	"nativeSrc": "12331:45:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12331:45:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12362:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "12362:9:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12373:1:8",
																						"nodeType": "YulLiteral",
																						"src": "12373:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12358:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "12358:3:8"
																				},
																				"nativeSrc": "12358:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "12358:17:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12345:12:8",
																			"nodeType": "YulIdentifier",
																			"src": "12345:12:8"
																		},
																		"nativeSrc": "12345:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12345:31:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12335:6:8",
																			"nodeType": "YulTypedName",
																			"src": "12335:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12423:83:8",
																		"nodeType": "YulBlock",
																		"src": "12423:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12425:77:8",
																						"nodeType": "YulIdentifier",
																						"src": "12425:77:8"
																					},
																					"nativeSrc": "12425:79:8",
																					"nodeType": "YulFunctionCall",
																					"src": "12425:79:8"
																				},
																				"nativeSrc": "12425:79:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "12425:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12395:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12395:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12403:18:8",
																				"nodeType": "YulLiteral",
																				"src": "12403:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12392:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "12392:2:8"
																		},
																		"nativeSrc": "12392:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12392:30:8"
																	},
																	"nativeSrc": "12389:117:8",
																	"nodeType": "YulIf",
																	"src": "12389:117:8"
																},
																{
																	"nativeSrc": "12520:73:8",
																	"nodeType": "YulAssignment",
																	"src": "12520:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12565:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "12565:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12576:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "12576:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12561:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "12561:3:8"
																				},
																				"nativeSrc": "12561:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "12561:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12585:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "12585:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "12530:30:8",
																			"nodeType": "YulIdentifier",
																			"src": "12530:30:8"
																		},
																		"nativeSrc": "12530:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12530:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12520:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "12520:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12613:118:8",
															"nodeType": "YulBlock",
															"src": "12613:118:8",
															"statements": [
																{
																	"nativeSrc": "12628:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12628:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12642:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12642:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12632:6:8",
																			"nodeType": "YulTypedName",
																			"src": "12632:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12658:63:8",
																	"nodeType": "YulAssignment",
																	"src": "12658:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12693:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "12693:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12704:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "12704:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12689:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "12689:3:8"
																				},
																				"nativeSrc": "12689:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "12689:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12713:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "12713:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "12668:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "12668:20:8"
																		},
																		"nativeSrc": "12668:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12668:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12658:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "12658:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256",
												"nativeSrc": "12084:654:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12139:9:8",
														"nodeType": "YulTypedName",
														"src": "12139:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12150:7:8",
														"nodeType": "YulTypedName",
														"src": "12150:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12162:6:8",
														"nodeType": "YulTypedName",
														"src": "12162:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12170:6:8",
														"nodeType": "YulTypedName",
														"src": "12170:6:8",
														"type": ""
													}
												],
												"src": "12084:654:8"
											},
											{
												"body": {
													"nativeSrc": "12772:152:8",
													"nodeType": "YulBlock",
													"src": "12772:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12789:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12789:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12792:77:8",
																		"nodeType": "YulLiteral",
																		"src": "12792:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12782:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12782:6:8"
																},
																"nativeSrc": "12782:88:8",
																"nodeType": "YulFunctionCall",
																"src": "12782:88:8"
															},
															"nativeSrc": "12782:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "12782:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12886:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12886:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12889:4:8",
																		"nodeType": "YulLiteral",
																		"src": "12889:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12879:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12879:6:8"
																},
																"nativeSrc": "12879:15:8",
																"nodeType": "YulFunctionCall",
																"src": "12879:15:8"
															},
															"nativeSrc": "12879:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "12879:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12910:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12910:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12913:4:8",
																		"nodeType": "YulLiteral",
																		"src": "12913:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12903:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12903:6:8"
																},
																"nativeSrc": "12903:15:8",
																"nodeType": "YulFunctionCall",
																"src": "12903:15:8"
															},
															"nativeSrc": "12903:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "12903:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "12744:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "12744:180:8"
											},
											{
												"body": {
													"nativeSrc": "12981:269:8",
													"nodeType": "YulBlock",
													"src": "12981:269:8",
													"statements": [
														{
															"nativeSrc": "12991:22:8",
															"nodeType": "YulAssignment",
															"src": "12991:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13005:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "13005:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13011:1:8",
																		"nodeType": "YulLiteral",
																		"src": "13011:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13001:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13001:3:8"
																},
																"nativeSrc": "13001:12:8",
																"nodeType": "YulFunctionCall",
																"src": "13001:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12991:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12991:6:8"
																}
															]
														},
														{
															"nativeSrc": "13022:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "13022:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13052:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "13052:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13058:1:8",
																		"nodeType": "YulLiteral",
																		"src": "13058:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13048:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13048:3:8"
																},
																"nativeSrc": "13048:12:8",
																"nodeType": "YulFunctionCall",
																"src": "13048:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "13026:18:8",
																	"nodeType": "YulTypedName",
																	"src": "13026:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13099:51:8",
																"nodeType": "YulBlock",
																"src": "13099:51:8",
																"statements": [
																	{
																		"nativeSrc": "13113:27:8",
																		"nodeType": "YulAssignment",
																		"src": "13113:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "13127:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "13127:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13135:4:8",
																					"nodeType": "YulLiteral",
																					"src": "13135:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "13123:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "13123:3:8"
																			},
																			"nativeSrc": "13123:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "13123:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "13113:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "13113:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13079:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "13079:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13072:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13072:6:8"
																},
																"nativeSrc": "13072:26:8",
																"nodeType": "YulFunctionCall",
																"src": "13072:26:8"
															},
															"nativeSrc": "13069:81:8",
															"nodeType": "YulIf",
															"src": "13069:81:8"
														},
														{
															"body": {
																"nativeSrc": "13202:42:8",
																"nodeType": "YulBlock",
																"src": "13202:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "13216:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "13216:16:8"
																			},
																			"nativeSrc": "13216:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "13216:18:8"
																		},
																		"nativeSrc": "13216:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "13216:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13166:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "13166:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "13189:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "13189:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13197:2:8",
																				"nodeType": "YulLiteral",
																				"src": "13197:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "13186:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "13186:2:8"
																		},
																		"nativeSrc": "13186:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13186:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13163:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "13163:2:8"
																},
																"nativeSrc": "13163:38:8",
																"nodeType": "YulFunctionCall",
																"src": "13163:38:8"
															},
															"nativeSrc": "13160:84:8",
															"nodeType": "YulIf",
															"src": "13160:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "12930:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12965:4:8",
														"nodeType": "YulTypedName",
														"src": "12965:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12974:6:8",
														"nodeType": "YulTypedName",
														"src": "12974:6:8",
														"type": ""
													}
												],
												"src": "12930:320:8"
											},
											{
												"body": {
													"nativeSrc": "13362:64:8",
													"nodeType": "YulBlock",
													"src": "13362:64:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13384:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "13384:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13392:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13392:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13380:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13380:3:8"
																		},
																		"nativeSrc": "13380:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13380:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "13396:22:8",
																		"nodeType": "YulLiteral",
																		"src": "13396:22:8",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13373:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13373:6:8"
																},
																"nativeSrc": "13373:46:8",
																"nodeType": "YulFunctionCall",
																"src": "13373:46:8"
															},
															"nativeSrc": "13373:46:8",
															"nodeType": "YulExpressionStatement",
															"src": "13373:46:8"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "13256:170:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13354:6:8",
														"nodeType": "YulTypedName",
														"src": "13354:6:8",
														"type": ""
													}
												],
												"src": "13256:170:8"
											},
											{
												"body": {
													"nativeSrc": "13578:220:8",
													"nodeType": "YulBlock",
													"src": "13578:220:8",
													"statements": [
														{
															"nativeSrc": "13588:74:8",
															"nodeType": "YulAssignment",
															"src": "13588:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13654:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13654:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13659:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13659:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13595:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "13595:58:8"
																},
																"nativeSrc": "13595:67:8",
																"nodeType": "YulFunctionCall",
																"src": "13595:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13588:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13588:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13760:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13760:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "13671:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "13671:88:8"
																},
																"nativeSrc": "13671:93:8",
																"nodeType": "YulFunctionCall",
																"src": "13671:93:8"
															},
															"nativeSrc": "13671:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "13671:93:8"
														},
														{
															"nativeSrc": "13773:19:8",
															"nodeType": "YulAssignment",
															"src": "13773:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13784:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13784:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13789:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13789:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13780:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13780:3:8"
																},
																"nativeSrc": "13780:12:8",
																"nodeType": "YulFunctionCall",
																"src": "13780:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13773:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13773:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13432:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13566:3:8",
														"nodeType": "YulTypedName",
														"src": "13566:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13574:3:8",
														"nodeType": "YulTypedName",
														"src": "13574:3:8",
														"type": ""
													}
												],
												"src": "13432:366:8"
											},
											{
												"body": {
													"nativeSrc": "13975:248:8",
													"nodeType": "YulBlock",
													"src": "13975:248:8",
													"statements": [
														{
															"nativeSrc": "13985:26:8",
															"nodeType": "YulAssignment",
															"src": "13985:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13997:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "13997:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14008:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14008:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13993:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13993:3:8"
																},
																"nativeSrc": "13993:18:8",
																"nodeType": "YulFunctionCall",
																"src": "13993:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13985:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13985:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14032:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14032:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14043:1:8",
																				"nodeType": "YulLiteral",
																				"src": "14043:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14028:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14028:3:8"
																		},
																		"nativeSrc": "14028:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14028:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14051:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "14051:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14057:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14057:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14047:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14047:3:8"
																		},
																		"nativeSrc": "14047:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14047:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14021:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14021:6:8"
																},
																"nativeSrc": "14021:47:8",
																"nodeType": "YulFunctionCall",
																"src": "14021:47:8"
															},
															"nativeSrc": "14021:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "14021:47:8"
														},
														{
															"nativeSrc": "14077:139:8",
															"nodeType": "YulAssignment",
															"src": "14077:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14211:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "14211:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14085:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "14085:124:8"
																},
																"nativeSrc": "14085:131:8",
																"nodeType": "YulFunctionCall",
																"src": "14085:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14077:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14077:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13804:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13955:9:8",
														"nodeType": "YulTypedName",
														"src": "13955:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13970:4:8",
														"nodeType": "YulTypedName",
														"src": "13970:4:8",
														"type": ""
													}
												],
												"src": "13804:419:8"
											},
											{
												"body": {
													"nativeSrc": "14276:32:8",
													"nodeType": "YulBlock",
													"src": "14276:32:8",
													"statements": [
														{
															"nativeSrc": "14286:16:8",
															"nodeType": "YulAssignment",
															"src": "14286:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "14297:5:8",
																"nodeType": "YulIdentifier",
																"src": "14297:5:8"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "14286:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "14286:7:8"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint256",
												"nativeSrc": "14229:79:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14258:5:8",
														"nodeType": "YulTypedName",
														"src": "14258:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "14268:7:8",
														"nodeType": "YulTypedName",
														"src": "14268:7:8",
														"type": ""
													}
												],
												"src": "14229:79:8"
											},
											{
												"body": {
													"nativeSrc": "14397:74:8",
													"nodeType": "YulBlock",
													"src": "14397:74:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14414:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14414:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14457:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "14457:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "14439:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "14439:17:8"
																				},
																				"nativeSrc": "14439:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "14439:24:8"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint256",
																			"nativeSrc": "14419:19:8",
																			"nodeType": "YulIdentifier",
																			"src": "14419:19:8"
																		},
																		"nativeSrc": "14419:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14419:45:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14407:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14407:6:8"
																},
																"nativeSrc": "14407:58:8",
																"nodeType": "YulFunctionCall",
																"src": "14407:58:8"
															},
															"nativeSrc": "14407:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "14407:58:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
												"nativeSrc": "14314:157:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14385:5:8",
														"nodeType": "YulTypedName",
														"src": "14385:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14392:3:8",
														"nodeType": "YulTypedName",
														"src": "14392:3:8",
														"type": ""
													}
												],
												"src": "14314:157:8"
											},
											{
												"body": {
													"nativeSrc": "14519:52:8",
													"nodeType": "YulBlock",
													"src": "14519:52:8",
													"statements": [
														{
															"nativeSrc": "14529:35:8",
															"nodeType": "YulAssignment",
															"src": "14529:35:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14554:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14554:2:8",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "14558:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "14558:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "14550:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14550:3:8"
																},
																"nativeSrc": "14550:14:8",
																"nodeType": "YulFunctionCall",
																"src": "14550:14:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "14529:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "14529:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nativeSrc": "14477:94:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14500:5:8",
														"nodeType": "YulTypedName",
														"src": "14500:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "14510:8:8",
														"nodeType": "YulTypedName",
														"src": "14510:8:8",
														"type": ""
													}
												],
												"src": "14477:94:8"
											},
											{
												"body": {
													"nativeSrc": "14624:47:8",
													"nodeType": "YulBlock",
													"src": "14624:47:8",
													"statements": [
														{
															"nativeSrc": "14634:31:8",
															"nodeType": "YulAssignment",
															"src": "14634:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14659:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "14659:5:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nativeSrc": "14645:13:8",
																	"nodeType": "YulIdentifier",
																	"src": "14645:13:8"
																},
																"nativeSrc": "14645:20:8",
																"nodeType": "YulFunctionCall",
																"src": "14645:20:8"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "14634:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "14634:7:8"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nativeSrc": "14577:94:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14606:5:8",
														"nodeType": "YulTypedName",
														"src": "14606:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "14616:7:8",
														"nodeType": "YulTypedName",
														"src": "14616:7:8",
														"type": ""
													}
												],
												"src": "14577:94:8"
											},
											{
												"body": {
													"nativeSrc": "14724:53:8",
													"nodeType": "YulBlock",
													"src": "14724:53:8",
													"statements": [
														{
															"nativeSrc": "14734:37:8",
															"nodeType": "YulAssignment",
															"src": "14734:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14765:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "14765:5:8"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nativeSrc": "14745:19:8",
																	"nodeType": "YulIdentifier",
																	"src": "14745:19:8"
																},
																"nativeSrc": "14745:26:8",
																"nodeType": "YulFunctionCall",
																"src": "14745:26:8"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "14734:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "14734:7:8"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nativeSrc": "14677:100:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14706:5:8",
														"nodeType": "YulTypedName",
														"src": "14706:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "14716:7:8",
														"nodeType": "YulTypedName",
														"src": "14716:7:8",
														"type": ""
													}
												],
												"src": "14677:100:8"
											},
											{
												"body": {
													"nativeSrc": "14866:74:8",
													"nodeType": "YulBlock",
													"src": "14866:74:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14883:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14883:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14926:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "14926:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "14908:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "14908:17:8"
																				},
																				"nativeSrc": "14908:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "14908:24:8"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nativeSrc": "14888:19:8",
																			"nodeType": "YulIdentifier",
																			"src": "14888:19:8"
																		},
																		"nativeSrc": "14888:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14888:45:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14876:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14876:6:8"
																},
																"nativeSrc": "14876:58:8",
																"nodeType": "YulFunctionCall",
																"src": "14876:58:8"
															},
															"nativeSrc": "14876:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "14876:58:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nativeSrc": "14783:157:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14854:5:8",
														"nodeType": "YulTypedName",
														"src": "14854:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14861:3:8",
														"nodeType": "YulTypedName",
														"src": "14861:3:8",
														"type": ""
													}
												],
												"src": "14783:157:8"
											},
											{
												"body": {
													"nativeSrc": "15090:253:8",
													"nodeType": "YulBlock",
													"src": "15090:253:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15163:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "15163:6:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "15172:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15172:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "15101:61:8",
																	"nodeType": "YulIdentifier",
																	"src": "15101:61:8"
																},
																"nativeSrc": "15101:75:8",
																"nodeType": "YulFunctionCall",
																"src": "15101:75:8"
															},
															"nativeSrc": "15101:75:8",
															"nodeType": "YulExpressionStatement",
															"src": "15101:75:8"
														},
														{
															"nativeSrc": "15185:19:8",
															"nodeType": "YulAssignment",
															"src": "15185:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15196:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15196:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15201:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15201:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15192:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15192:3:8"
																},
																"nativeSrc": "15192:12:8",
																"nodeType": "YulFunctionCall",
																"src": "15192:12:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15185:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15185:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15276:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "15276:6:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "15285:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15285:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "15214:61:8",
																	"nodeType": "YulIdentifier",
																	"src": "15214:61:8"
																},
																"nativeSrc": "15214:75:8",
																"nodeType": "YulFunctionCall",
																"src": "15214:75:8"
															},
															"nativeSrc": "15214:75:8",
															"nodeType": "YulExpressionStatement",
															"src": "15214:75:8"
														},
														{
															"nativeSrc": "15298:19:8",
															"nodeType": "YulAssignment",
															"src": "15298:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15309:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15309:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15314:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15314:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15305:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15305:3:8"
																},
																"nativeSrc": "15305:12:8",
																"nodeType": "YulFunctionCall",
																"src": "15305:12:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15298:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15298:3:8"
																}
															]
														},
														{
															"nativeSrc": "15327:10:8",
															"nodeType": "YulAssignment",
															"src": "15327:10:8",
															"value": {
																"name": "pos",
																"nativeSrc": "15334:3:8",
																"nodeType": "YulIdentifier",
																"src": "15334:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15327:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15327:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_address__to_t_uint256_t_address__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "14946:397:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15061:3:8",
														"nodeType": "YulTypedName",
														"src": "15061:3:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15067:6:8",
														"nodeType": "YulTypedName",
														"src": "15067:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15075:6:8",
														"nodeType": "YulTypedName",
														"src": "15075:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15086:3:8",
														"nodeType": "YulTypedName",
														"src": "15086:3:8",
														"type": ""
													}
												],
												"src": "14946:397:8"
											},
											{
												"body": {
													"nativeSrc": "15377:152:8",
													"nodeType": "YulBlock",
													"src": "15377:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15394:1:8",
																		"nodeType": "YulLiteral",
																		"src": "15394:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15397:77:8",
																		"nodeType": "YulLiteral",
																		"src": "15397:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15387:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15387:6:8"
																},
																"nativeSrc": "15387:88:8",
																"nodeType": "YulFunctionCall",
																"src": "15387:88:8"
															},
															"nativeSrc": "15387:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "15387:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15491:1:8",
																		"nodeType": "YulLiteral",
																		"src": "15491:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15494:4:8",
																		"nodeType": "YulLiteral",
																		"src": "15494:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15484:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15484:6:8"
																},
																"nativeSrc": "15484:15:8",
																"nodeType": "YulFunctionCall",
																"src": "15484:15:8"
															},
															"nativeSrc": "15484:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "15484:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15515:1:8",
																		"nodeType": "YulLiteral",
																		"src": "15515:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15518:4:8",
																		"nodeType": "YulLiteral",
																		"src": "15518:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15508:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15508:6:8"
																},
																"nativeSrc": "15508:15:8",
																"nodeType": "YulFunctionCall",
																"src": "15508:15:8"
															},
															"nativeSrc": "15508:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "15508:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "15349:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "15349:180:8"
											},
											{
												"body": {
													"nativeSrc": "15569:142:8",
													"nodeType": "YulBlock",
													"src": "15569:142:8",
													"statements": [
														{
															"nativeSrc": "15579:25:8",
															"nodeType": "YulAssignment",
															"src": "15579:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15602:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "15602:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15584:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "15584:17:8"
																},
																"nativeSrc": "15584:20:8",
																"nodeType": "YulFunctionCall",
																"src": "15584:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15579:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "15579:1:8"
																}
															]
														},
														{
															"nativeSrc": "15613:25:8",
															"nodeType": "YulAssignment",
															"src": "15613:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15636:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "15636:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15618:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "15618:17:8"
																},
																"nativeSrc": "15618:20:8",
																"nodeType": "YulFunctionCall",
																"src": "15618:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15613:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "15613:1:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15660:22:8",
																"nodeType": "YulBlock",
																"src": "15660:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "15662:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "15662:16:8"
																			},
																			"nativeSrc": "15662:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "15662:18:8"
																		},
																		"nativeSrc": "15662:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "15662:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15657:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "15657:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15650:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15650:6:8"
																},
																"nativeSrc": "15650:9:8",
																"nodeType": "YulFunctionCall",
																"src": "15650:9:8"
															},
															"nativeSrc": "15647:35:8",
															"nodeType": "YulIf",
															"src": "15647:35:8"
														},
														{
															"nativeSrc": "15691:14:8",
															"nodeType": "YulAssignment",
															"src": "15691:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15700:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "15700:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15703:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "15703:1:8"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "15696:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15696:3:8"
																},
																"nativeSrc": "15696:9:8",
																"nodeType": "YulFunctionCall",
																"src": "15696:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "15691:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "15691:1:8"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "15535:176:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15558:1:8",
														"nodeType": "YulTypedName",
														"src": "15558:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15561:1:8",
														"nodeType": "YulTypedName",
														"src": "15561:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "15567:1:8",
														"nodeType": "YulTypedName",
														"src": "15567:1:8",
														"type": ""
													}
												],
												"src": "15535:176:8"
											},
											{
												"body": {
													"nativeSrc": "15745:152:8",
													"nodeType": "YulBlock",
													"src": "15745:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15762:1:8",
																		"nodeType": "YulLiteral",
																		"src": "15762:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15765:77:8",
																		"nodeType": "YulLiteral",
																		"src": "15765:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15755:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15755:6:8"
																},
																"nativeSrc": "15755:88:8",
																"nodeType": "YulFunctionCall",
																"src": "15755:88:8"
															},
															"nativeSrc": "15755:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "15755:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15859:1:8",
																		"nodeType": "YulLiteral",
																		"src": "15859:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15862:4:8",
																		"nodeType": "YulLiteral",
																		"src": "15862:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15852:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15852:6:8"
																},
																"nativeSrc": "15852:15:8",
																"nodeType": "YulFunctionCall",
																"src": "15852:15:8"
															},
															"nativeSrc": "15852:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "15852:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15883:1:8",
																		"nodeType": "YulLiteral",
																		"src": "15883:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15886:4:8",
																		"nodeType": "YulLiteral",
																		"src": "15886:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15876:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15876:6:8"
																},
																"nativeSrc": "15876:15:8",
																"nodeType": "YulFunctionCall",
																"src": "15876:15:8"
															},
															"nativeSrc": "15876:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "15876:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "15717:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "15717:180:8"
											},
											{
												"body": {
													"nativeSrc": "15951:362:8",
													"nodeType": "YulBlock",
													"src": "15951:362:8",
													"statements": [
														{
															"nativeSrc": "15961:25:8",
															"nodeType": "YulAssignment",
															"src": "15961:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15984:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "15984:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15966:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "15966:17:8"
																},
																"nativeSrc": "15966:20:8",
																"nodeType": "YulFunctionCall",
																"src": "15966:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15961:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "15961:1:8"
																}
															]
														},
														{
															"nativeSrc": "15995:25:8",
															"nodeType": "YulAssignment",
															"src": "15995:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16018:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "16018:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16000:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "16000:17:8"
																},
																"nativeSrc": "16000:20:8",
																"nodeType": "YulFunctionCall",
																"src": "16000:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15995:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "15995:1:8"
																}
															]
														},
														{
															"nativeSrc": "16029:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "16029:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16052:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "16052:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16055:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "16055:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "16048:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16048:3:8"
																},
																"nativeSrc": "16048:9:8",
																"nodeType": "YulFunctionCall",
																"src": "16048:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "16033:11:8",
																	"nodeType": "YulTypedName",
																	"src": "16033:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16066:41:8",
															"nodeType": "YulAssignment",
															"src": "16066:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "16095:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "16095:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16077:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "16077:17:8"
																},
																"nativeSrc": "16077:30:8",
																"nodeType": "YulFunctionCall",
																"src": "16077:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "16066:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "16066:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16284:22:8",
																"nodeType": "YulBlock",
																"src": "16284:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16286:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "16286:16:8"
																			},
																			"nativeSrc": "16286:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "16286:18:8"
																		},
																		"nativeSrc": "16286:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "16286:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "16217:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "16217:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "16210:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "16210:6:8"
																				},
																				"nativeSrc": "16210:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "16210:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "16240:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "16240:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "16247:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "16247:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "16256:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "16256:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "16243:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "16243:3:8"
																						},
																						"nativeSrc": "16243:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "16243:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "16237:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "16237:2:8"
																				},
																				"nativeSrc": "16237:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "16237:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "16190:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "16190:2:8"
																		},
																		"nativeSrc": "16190:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16190:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16170:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16170:6:8"
																},
																"nativeSrc": "16170:113:8",
																"nodeType": "YulFunctionCall",
																"src": "16170:113:8"
															},
															"nativeSrc": "16167:139:8",
															"nodeType": "YulIf",
															"src": "16167:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "15903:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15934:1:8",
														"nodeType": "YulTypedName",
														"src": "15934:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15937:1:8",
														"nodeType": "YulTypedName",
														"src": "15937:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "15943:7:8",
														"nodeType": "YulTypedName",
														"src": "15943:7:8",
														"type": ""
													}
												],
												"src": "15903:410:8"
											},
											{
												"body": {
													"nativeSrc": "16425:52:8",
													"nodeType": "YulBlock",
													"src": "16425:52:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16447:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "16447:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16455:1:8",
																				"nodeType": "YulLiteral",
																				"src": "16455:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16443:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16443:3:8"
																		},
																		"nativeSrc": "16443:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16443:14:8"
																	},
																	{
																		"hexValue": "596f7520776f6e21",
																		"kind": "string",
																		"nativeSrc": "16459:10:8",
																		"nodeType": "YulLiteral",
																		"src": "16459:10:8",
																		"type": "",
																		"value": "You won!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16436:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16436:6:8"
																},
																"nativeSrc": "16436:34:8",
																"nodeType": "YulFunctionCall",
																"src": "16436:34:8"
															},
															"nativeSrc": "16436:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "16436:34:8"
														}
													]
												},
												"name": "store_literal_in_memory_9914c8f708f9d185c71b065e1b7086f49300a27304777e454a822b899aef6387",
												"nativeSrc": "16319:158:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16417:6:8",
														"nodeType": "YulTypedName",
														"src": "16417:6:8",
														"type": ""
													}
												],
												"src": "16319:158:8"
											},
											{
												"body": {
													"nativeSrc": "16629:219:8",
													"nodeType": "YulBlock",
													"src": "16629:219:8",
													"statements": [
														{
															"nativeSrc": "16639:73:8",
															"nodeType": "YulAssignment",
															"src": "16639:73:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16705:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "16705:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16710:1:8",
																		"nodeType": "YulLiteral",
																		"src": "16710:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16646:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "16646:58:8"
																},
																"nativeSrc": "16646:66:8",
																"nodeType": "YulFunctionCall",
																"src": "16646:66:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16639:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16639:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16810:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "16810:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9914c8f708f9d185c71b065e1b7086f49300a27304777e454a822b899aef6387",
																	"nativeSrc": "16721:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "16721:88:8"
																},
																"nativeSrc": "16721:93:8",
																"nodeType": "YulFunctionCall",
																"src": "16721:93:8"
															},
															"nativeSrc": "16721:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "16721:93:8"
														},
														{
															"nativeSrc": "16823:19:8",
															"nodeType": "YulAssignment",
															"src": "16823:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16834:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "16834:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16839:2:8",
																		"nodeType": "YulLiteral",
																		"src": "16839:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16830:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16830:3:8"
																},
																"nativeSrc": "16830:12:8",
																"nodeType": "YulFunctionCall",
																"src": "16830:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16823:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16823:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9914c8f708f9d185c71b065e1b7086f49300a27304777e454a822b899aef6387_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16483:365:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16617:3:8",
														"nodeType": "YulTypedName",
														"src": "16617:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16625:3:8",
														"nodeType": "YulTypedName",
														"src": "16625:3:8",
														"type": ""
													}
												],
												"src": "16483:365:8"
											},
											{
												"body": {
													"nativeSrc": "17075:406:8",
													"nodeType": "YulBlock",
													"src": "17075:406:8",
													"statements": [
														{
															"nativeSrc": "17085:26:8",
															"nodeType": "YulAssignment",
															"src": "17085:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17097:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "17097:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17108:2:8",
																		"nodeType": "YulLiteral",
																		"src": "17108:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17093:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17093:3:8"
																},
																"nativeSrc": "17093:18:8",
																"nodeType": "YulFunctionCall",
																"src": "17093:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17085:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "17085:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17165:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "17165:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17178:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "17178:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17189:1:8",
																				"nodeType": "YulLiteral",
																				"src": "17189:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17174:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17174:3:8"
																		},
																		"nativeSrc": "17174:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17174:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17121:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "17121:43:8"
																},
																"nativeSrc": "17121:71:8",
																"nodeType": "YulFunctionCall",
																"src": "17121:71:8"
															},
															"nativeSrc": "17121:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "17121:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17240:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "17240:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17253:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "17253:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17264:2:8",
																				"nodeType": "YulLiteral",
																				"src": "17264:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17249:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17249:3:8"
																		},
																		"nativeSrc": "17249:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17249:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "17202:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "17202:37:8"
																},
																"nativeSrc": "17202:66:8",
																"nodeType": "YulFunctionCall",
																"src": "17202:66:8"
															},
															"nativeSrc": "17202:66:8",
															"nodeType": "YulExpressionStatement",
															"src": "17202:66:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17289:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "17289:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17300:2:8",
																				"nodeType": "YulLiteral",
																				"src": "17300:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17285:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17285:3:8"
																		},
																		"nativeSrc": "17285:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17285:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17309:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "17309:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17315:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "17315:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17305:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17305:3:8"
																		},
																		"nativeSrc": "17305:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17305:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17278:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17278:6:8"
																},
																"nativeSrc": "17278:48:8",
																"nodeType": "YulFunctionCall",
																"src": "17278:48:8"
															},
															"nativeSrc": "17278:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "17278:48:8"
														},
														{
															"nativeSrc": "17335:139:8",
															"nodeType": "YulAssignment",
															"src": "17335:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17469:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "17469:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9914c8f708f9d185c71b065e1b7086f49300a27304777e454a822b899aef6387_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17343:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "17343:124:8"
																},
																"nativeSrc": "17343:131:8",
																"nodeType": "YulFunctionCall",
																"src": "17343:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17335:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "17335:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bool_t_stringliteral_9914c8f708f9d185c71b065e1b7086f49300a27304777e454a822b899aef6387__to_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16854:627:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17039:9:8",
														"nodeType": "YulTypedName",
														"src": "17039:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17051:6:8",
														"nodeType": "YulTypedName",
														"src": "17051:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17059:6:8",
														"nodeType": "YulTypedName",
														"src": "17059:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17070:4:8",
														"nodeType": "YulTypedName",
														"src": "17070:4:8",
														"type": ""
													}
												],
												"src": "16854:627:8"
											},
											{
												"body": {
													"nativeSrc": "17593:53:8",
													"nodeType": "YulBlock",
													"src": "17593:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17615:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "17615:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17623:1:8",
																				"nodeType": "YulLiteral",
																				"src": "17623:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17611:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17611:3:8"
																		},
																		"nativeSrc": "17611:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17611:14:8"
																	},
																	{
																		"hexValue": "596f75206c6f737421",
																		"kind": "string",
																		"nativeSrc": "17627:11:8",
																		"nodeType": "YulLiteral",
																		"src": "17627:11:8",
																		"type": "",
																		"value": "You lost!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17604:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17604:6:8"
																},
																"nativeSrc": "17604:35:8",
																"nodeType": "YulFunctionCall",
																"src": "17604:35:8"
															},
															"nativeSrc": "17604:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "17604:35:8"
														}
													]
												},
												"name": "store_literal_in_memory_b6793b6145548c1707973fa6fff27243076d3f64d47e7c1951b141bde79f7643",
												"nativeSrc": "17487:159:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17585:6:8",
														"nodeType": "YulTypedName",
														"src": "17585:6:8",
														"type": ""
													}
												],
												"src": "17487:159:8"
											},
											{
												"body": {
													"nativeSrc": "17798:219:8",
													"nodeType": "YulBlock",
													"src": "17798:219:8",
													"statements": [
														{
															"nativeSrc": "17808:73:8",
															"nodeType": "YulAssignment",
															"src": "17808:73:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17874:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "17874:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17879:1:8",
																		"nodeType": "YulLiteral",
																		"src": "17879:1:8",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17815:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "17815:58:8"
																},
																"nativeSrc": "17815:66:8",
																"nodeType": "YulFunctionCall",
																"src": "17815:66:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17808:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17808:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17979:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "17979:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b6793b6145548c1707973fa6fff27243076d3f64d47e7c1951b141bde79f7643",
																	"nativeSrc": "17890:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "17890:88:8"
																},
																"nativeSrc": "17890:93:8",
																"nodeType": "YulFunctionCall",
																"src": "17890:93:8"
															},
															"nativeSrc": "17890:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "17890:93:8"
														},
														{
															"nativeSrc": "17992:19:8",
															"nodeType": "YulAssignment",
															"src": "17992:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18003:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "18003:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18008:2:8",
																		"nodeType": "YulLiteral",
																		"src": "18008:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17999:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17999:3:8"
																},
																"nativeSrc": "17999:12:8",
																"nodeType": "YulFunctionCall",
																"src": "17999:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17992:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17992:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b6793b6145548c1707973fa6fff27243076d3f64d47e7c1951b141bde79f7643_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17652:365:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17786:3:8",
														"nodeType": "YulTypedName",
														"src": "17786:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17794:3:8",
														"nodeType": "YulTypedName",
														"src": "17794:3:8",
														"type": ""
													}
												],
												"src": "17652:365:8"
											},
											{
												"body": {
													"nativeSrc": "18244:406:8",
													"nodeType": "YulBlock",
													"src": "18244:406:8",
													"statements": [
														{
															"nativeSrc": "18254:26:8",
															"nodeType": "YulAssignment",
															"src": "18254:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18266:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "18266:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18277:2:8",
																		"nodeType": "YulLiteral",
																		"src": "18277:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18262:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18262:3:8"
																},
																"nativeSrc": "18262:18:8",
																"nodeType": "YulFunctionCall",
																"src": "18262:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18254:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "18254:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18334:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "18334:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18347:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "18347:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18358:1:8",
																				"nodeType": "YulLiteral",
																				"src": "18358:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18343:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18343:3:8"
																		},
																		"nativeSrc": "18343:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18343:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18290:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "18290:43:8"
																},
																"nativeSrc": "18290:71:8",
																"nodeType": "YulFunctionCall",
																"src": "18290:71:8"
															},
															"nativeSrc": "18290:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "18290:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18409:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "18409:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18422:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "18422:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18433:2:8",
																				"nodeType": "YulLiteral",
																				"src": "18433:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18418:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18418:3:8"
																		},
																		"nativeSrc": "18418:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18418:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "18371:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "18371:37:8"
																},
																"nativeSrc": "18371:66:8",
																"nodeType": "YulFunctionCall",
																"src": "18371:66:8"
															},
															"nativeSrc": "18371:66:8",
															"nodeType": "YulExpressionStatement",
															"src": "18371:66:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18458:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "18458:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18469:2:8",
																				"nodeType": "YulLiteral",
																				"src": "18469:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18454:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18454:3:8"
																		},
																		"nativeSrc": "18454:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18454:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18478:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "18478:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18484:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "18484:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18474:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18474:3:8"
																		},
																		"nativeSrc": "18474:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18474:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18447:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18447:6:8"
																},
																"nativeSrc": "18447:48:8",
																"nodeType": "YulFunctionCall",
																"src": "18447:48:8"
															},
															"nativeSrc": "18447:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "18447:48:8"
														},
														{
															"nativeSrc": "18504:139:8",
															"nodeType": "YulAssignment",
															"src": "18504:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18638:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "18638:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b6793b6145548c1707973fa6fff27243076d3f64d47e7c1951b141bde79f7643_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18512:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "18512:124:8"
																},
																"nativeSrc": "18512:131:8",
																"nodeType": "YulFunctionCall",
																"src": "18512:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18504:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "18504:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bool_t_stringliteral_b6793b6145548c1707973fa6fff27243076d3f64d47e7c1951b141bde79f7643__to_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18023:627:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18208:9:8",
														"nodeType": "YulTypedName",
														"src": "18208:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18220:6:8",
														"nodeType": "YulTypedName",
														"src": "18220:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18228:6:8",
														"nodeType": "YulTypedName",
														"src": "18228:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18239:4:8",
														"nodeType": "YulTypedName",
														"src": "18239:4:8",
														"type": ""
													}
												],
												"src": "18023:627:8"
											},
											{
												"body": {
													"nativeSrc": "18762:58:8",
													"nodeType": "YulBlock",
													"src": "18762:58:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18784:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "18784:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18792:1:8",
																				"nodeType": "YulLiteral",
																				"src": "18792:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18780:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18780:3:8"
																		},
																		"nativeSrc": "18780:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18780:14:8"
																	},
																	{
																		"hexValue": "4974656d206e6f7420666f756e64",
																		"kind": "string",
																		"nativeSrc": "18796:16:8",
																		"nodeType": "YulLiteral",
																		"src": "18796:16:8",
																		"type": "",
																		"value": "Item not found"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18773:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18773:6:8"
																},
																"nativeSrc": "18773:40:8",
																"nodeType": "YulFunctionCall",
																"src": "18773:40:8"
															},
															"nativeSrc": "18773:40:8",
															"nodeType": "YulExpressionStatement",
															"src": "18773:40:8"
														}
													]
												},
												"name": "store_literal_in_memory_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c",
												"nativeSrc": "18656:164:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18754:6:8",
														"nodeType": "YulTypedName",
														"src": "18754:6:8",
														"type": ""
													}
												],
												"src": "18656:164:8"
											},
											{
												"body": {
													"nativeSrc": "18972:220:8",
													"nodeType": "YulBlock",
													"src": "18972:220:8",
													"statements": [
														{
															"nativeSrc": "18982:74:8",
															"nodeType": "YulAssignment",
															"src": "18982:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19048:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "19048:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19053:2:8",
																		"nodeType": "YulLiteral",
																		"src": "19053:2:8",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18989:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "18989:58:8"
																},
																"nativeSrc": "18989:67:8",
																"nodeType": "YulFunctionCall",
																"src": "18989:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18982:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18982:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19154:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "19154:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c",
																	"nativeSrc": "19065:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "19065:88:8"
																},
																"nativeSrc": "19065:93:8",
																"nodeType": "YulFunctionCall",
																"src": "19065:93:8"
															},
															"nativeSrc": "19065:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "19065:93:8"
														},
														{
															"nativeSrc": "19167:19:8",
															"nodeType": "YulAssignment",
															"src": "19167:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19178:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "19178:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19183:2:8",
																		"nodeType": "YulLiteral",
																		"src": "19183:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19174:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19174:3:8"
																},
																"nativeSrc": "19174:12:8",
																"nodeType": "YulFunctionCall",
																"src": "19174:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19167:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19167:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18826:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18960:3:8",
														"nodeType": "YulTypedName",
														"src": "18960:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18968:3:8",
														"nodeType": "YulTypedName",
														"src": "18968:3:8",
														"type": ""
													}
												],
												"src": "18826:366:8"
											},
											{
												"body": {
													"nativeSrc": "19369:248:8",
													"nodeType": "YulBlock",
													"src": "19369:248:8",
													"statements": [
														{
															"nativeSrc": "19379:26:8",
															"nodeType": "YulAssignment",
															"src": "19379:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19391:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "19391:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19402:2:8",
																		"nodeType": "YulLiteral",
																		"src": "19402:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19387:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19387:3:8"
																},
																"nativeSrc": "19387:18:8",
																"nodeType": "YulFunctionCall",
																"src": "19387:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19379:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "19379:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19426:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "19426:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19437:1:8",
																				"nodeType": "YulLiteral",
																				"src": "19437:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19422:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19422:3:8"
																		},
																		"nativeSrc": "19422:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19422:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19445:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "19445:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19451:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "19451:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19441:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19441:3:8"
																		},
																		"nativeSrc": "19441:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19441:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19415:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "19415:6:8"
																},
																"nativeSrc": "19415:47:8",
																"nodeType": "YulFunctionCall",
																"src": "19415:47:8"
															},
															"nativeSrc": "19415:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "19415:47:8"
														},
														{
															"nativeSrc": "19471:139:8",
															"nodeType": "YulAssignment",
															"src": "19471:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19605:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "19605:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19479:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "19479:124:8"
																},
																"nativeSrc": "19479:131:8",
																"nodeType": "YulFunctionCall",
																"src": "19479:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19471:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "19471:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19198:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19349:9:8",
														"nodeType": "YulTypedName",
														"src": "19349:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19364:4:8",
														"nodeType": "YulTypedName",
														"src": "19364:4:8",
														"type": ""
													}
												],
												"src": "19198:419:8"
											},
											{
												"body": {
													"nativeSrc": "19679:93:8",
													"nodeType": "YulBlock",
													"src": "19679:93:8",
													"statements": [
														{
															"nativeSrc": "19690:22:8",
															"nodeType": "YulAssignment",
															"src": "19690:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19706:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "19706:5:8"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "19700:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "19700:5:8"
																},
																"nativeSrc": "19700:12:8",
																"nodeType": "YulFunctionCall",
																"src": "19700:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "19690:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "19690:6:8"
																}
															]
														},
														{
															"nativeSrc": "19722:43:8",
															"nodeType": "YulAssignment",
															"src": "19722:43:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "19758:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "19758:6:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "19732:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "19732:25:8"
																},
																"nativeSrc": "19732:33:8",
																"nodeType": "YulFunctionCall",
																"src": "19732:33:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "19722:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "19722:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_storage",
												"nativeSrc": "19623:149:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19662:5:8",
														"nodeType": "YulTypedName",
														"src": "19662:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "19672:6:8",
														"nodeType": "YulTypedName",
														"src": "19672:6:8",
														"type": ""
													}
												],
												"src": "19623:149:8"
											},
											{
												"body": {
													"nativeSrc": "19832:87:8",
													"nodeType": "YulBlock",
													"src": "19832:87:8",
													"statements": [
														{
															"nativeSrc": "19842:11:8",
															"nodeType": "YulAssignment",
															"src": "19842:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "19850:3:8",
																"nodeType": "YulIdentifier",
																"src": "19850:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "19842:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "19842:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19870:1:8",
																		"nodeType": "YulLiteral",
																		"src": "19870:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "19873:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "19873:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19863:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "19863:6:8"
																},
																"nativeSrc": "19863:14:8",
																"nodeType": "YulFunctionCall",
																"src": "19863:14:8"
															},
															"nativeSrc": "19863:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "19863:14:8"
														},
														{
															"nativeSrc": "19886:26:8",
															"nodeType": "YulAssignment",
															"src": "19886:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19904:1:8",
																		"nodeType": "YulLiteral",
																		"src": "19904:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19907:4:8",
																		"nodeType": "YulLiteral",
																		"src": "19907:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "19894:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "19894:9:8"
																},
																"nativeSrc": "19894:18:8",
																"nodeType": "YulFunctionCall",
																"src": "19894:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "19886:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "19886:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "19778:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "19819:3:8",
														"nodeType": "YulTypedName",
														"src": "19819:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "19827:4:8",
														"nodeType": "YulTypedName",
														"src": "19827:4:8",
														"type": ""
													}
												],
												"src": "19778:141:8"
											},
											{
												"body": {
													"nativeSrc": "19969:49:8",
													"nodeType": "YulBlock",
													"src": "19969:49:8",
													"statements": [
														{
															"nativeSrc": "19979:33:8",
															"nodeType": "YulAssignment",
															"src": "19979:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19997:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "19997:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20004:2:8",
																				"nodeType": "YulLiteral",
																				"src": "20004:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19993:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19993:3:8"
																		},
																		"nativeSrc": "19993:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19993:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20009:2:8",
																		"nodeType": "YulLiteral",
																		"src": "20009:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "19989:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19989:3:8"
																},
																"nativeSrc": "19989:23:8",
																"nodeType": "YulFunctionCall",
																"src": "19989:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "19979:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "19979:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "19925:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19952:5:8",
														"nodeType": "YulTypedName",
														"src": "19952:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "19962:6:8",
														"nodeType": "YulTypedName",
														"src": "19962:6:8",
														"type": ""
													}
												],
												"src": "19925:93:8"
											},
											{
												"body": {
													"nativeSrc": "20077:54:8",
													"nodeType": "YulBlock",
													"src": "20077:54:8",
													"statements": [
														{
															"nativeSrc": "20087:37:8",
															"nodeType": "YulAssignment",
															"src": "20087:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "20112:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "20112:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "20118:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "20118:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "20108:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "20108:3:8"
																},
																"nativeSrc": "20108:16:8",
																"nodeType": "YulFunctionCall",
																"src": "20108:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "20087:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "20087:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "20024:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "20052:4:8",
														"nodeType": "YulTypedName",
														"src": "20052:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "20058:5:8",
														"nodeType": "YulTypedName",
														"src": "20058:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "20068:8:8",
														"nodeType": "YulTypedName",
														"src": "20068:8:8",
														"type": ""
													}
												],
												"src": "20024:107:8"
											},
											{
												"body": {
													"nativeSrc": "20213:317:8",
													"nodeType": "YulBlock",
													"src": "20213:317:8",
													"statements": [
														{
															"nativeSrc": "20223:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "20223:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "20244:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "20244:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20256:1:8",
																		"nodeType": "YulLiteral",
																		"src": "20256:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "20240:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "20240:3:8"
																},
																"nativeSrc": "20240:18:8",
																"nodeType": "YulFunctionCall",
																"src": "20240:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "20227:9:8",
																	"nodeType": "YulTypedName",
																	"src": "20227:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20267:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "20267:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "20298:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "20298:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20309:66:8",
																		"nodeType": "YulLiteral",
																		"src": "20309:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "20279:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "20279:18:8"
																},
																"nativeSrc": "20279:97:8",
																"nodeType": "YulFunctionCall",
																"src": "20279:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "20271:4:8",
																	"nodeType": "YulTypedName",
																	"src": "20271:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20385:51:8",
															"nodeType": "YulAssignment",
															"src": "20385:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "20416:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "20416:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "20427:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "20427:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "20397:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "20397:18:8"
																},
																"nativeSrc": "20397:39:8",
																"nodeType": "YulFunctionCall",
																"src": "20397:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "20385:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "20385:8:8"
																}
															]
														},
														{
															"nativeSrc": "20445:30:8",
															"nodeType": "YulAssignment",
															"src": "20445:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20458:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "20458:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "20469:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "20469:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "20465:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20465:3:8"
																		},
																		"nativeSrc": "20465:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20465:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "20454:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "20454:3:8"
																},
																"nativeSrc": "20454:21:8",
																"nodeType": "YulFunctionCall",
																"src": "20454:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "20445:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "20445:5:8"
																}
															]
														},
														{
															"nativeSrc": "20484:40:8",
															"nodeType": "YulAssignment",
															"src": "20484:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20497:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "20497:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "20508:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "20508:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "20518:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "20518:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "20504:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20504:3:8"
																		},
																		"nativeSrc": "20504:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20504:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "20494:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "20494:2:8"
																},
																"nativeSrc": "20494:30:8",
																"nodeType": "YulFunctionCall",
																"src": "20494:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "20484:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "20484:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "20137:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20174:5:8",
														"nodeType": "YulTypedName",
														"src": "20174:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "20181:10:8",
														"nodeType": "YulTypedName",
														"src": "20181:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "20193:8:8",
														"nodeType": "YulTypedName",
														"src": "20193:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "20206:6:8",
														"nodeType": "YulTypedName",
														"src": "20206:6:8",
														"type": ""
													}
												],
												"src": "20137:393:8"
											},
											{
												"body": {
													"nativeSrc": "20568:28:8",
													"nodeType": "YulBlock",
													"src": "20568:28:8",
													"statements": [
														{
															"nativeSrc": "20578:12:8",
															"nodeType": "YulAssignment",
															"src": "20578:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "20585:5:8",
																"nodeType": "YulIdentifier",
																"src": "20585:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "20578:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "20578:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "20536:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20554:5:8",
														"nodeType": "YulTypedName",
														"src": "20554:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "20564:3:8",
														"nodeType": "YulTypedName",
														"src": "20564:3:8",
														"type": ""
													}
												],
												"src": "20536:60:8"
											},
											{
												"body": {
													"nativeSrc": "20662:82:8",
													"nodeType": "YulBlock",
													"src": "20662:82:8",
													"statements": [
														{
															"nativeSrc": "20672:66:8",
															"nodeType": "YulAssignment",
															"src": "20672:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "20730:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "20730:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "20712:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "20712:17:8"
																				},
																				"nativeSrc": "20712:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "20712:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "20703:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "20703:8:8"
																		},
																		"nativeSrc": "20703:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20703:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20685:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "20685:17:8"
																},
																"nativeSrc": "20685:53:8",
																"nodeType": "YulFunctionCall",
																"src": "20685:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "20672:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "20672:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "20602:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20642:5:8",
														"nodeType": "YulTypedName",
														"src": "20642:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "20652:9:8",
														"nodeType": "YulTypedName",
														"src": "20652:9:8",
														"type": ""
													}
												],
												"src": "20602:142:8"
											},
											{
												"body": {
													"nativeSrc": "20797:28:8",
													"nodeType": "YulBlock",
													"src": "20797:28:8",
													"statements": [
														{
															"nativeSrc": "20807:12:8",
															"nodeType": "YulAssignment",
															"src": "20807:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "20814:5:8",
																"nodeType": "YulIdentifier",
																"src": "20814:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "20807:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "20807:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "20750:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20783:5:8",
														"nodeType": "YulTypedName",
														"src": "20783:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "20793:3:8",
														"nodeType": "YulTypedName",
														"src": "20793:3:8",
														"type": ""
													}
												],
												"src": "20750:75:8"
											},
											{
												"body": {
													"nativeSrc": "20907:193:8",
													"nodeType": "YulBlock",
													"src": "20907:193:8",
													"statements": [
														{
															"nativeSrc": "20917:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "20917:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "20972:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "20972:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "20941:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "20941:30:8"
																},
																"nativeSrc": "20941:39:8",
																"nodeType": "YulFunctionCall",
																"src": "20941:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "20921:16:8",
																	"nodeType": "YulTypedName",
																	"src": "20921:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "20996:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "20996:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "21036:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "21036:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "21030:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "21030:5:8"
																				},
																				"nativeSrc": "21030:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "21030:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "21043:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "21043:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "21075:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "21075:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "21051:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "21051:23:8"
																				},
																				"nativeSrc": "21051:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "21051:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "21002:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "21002:27:8"
																		},
																		"nativeSrc": "21002:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "21002:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "20989:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "20989:6:8"
																},
																"nativeSrc": "20989:105:8",
																"nodeType": "YulFunctionCall",
																"src": "20989:105:8"
															},
															"nativeSrc": "20989:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "20989:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "20831:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "20884:4:8",
														"nodeType": "YulTypedName",
														"src": "20884:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "20890:6:8",
														"nodeType": "YulTypedName",
														"src": "20890:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "20898:7:8",
														"nodeType": "YulTypedName",
														"src": "20898:7:8",
														"type": ""
													}
												],
												"src": "20831:269:8"
											},
											{
												"body": {
													"nativeSrc": "21155:24:8",
													"nodeType": "YulBlock",
													"src": "21155:24:8",
													"statements": [
														{
															"nativeSrc": "21165:8:8",
															"nodeType": "YulAssignment",
															"src": "21165:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "21172:1:8",
																"nodeType": "YulLiteral",
																"src": "21172:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "21165:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21165:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "21106:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "21151:3:8",
														"nodeType": "YulTypedName",
														"src": "21151:3:8",
														"type": ""
													}
												],
												"src": "21106:73:8"
											},
											{
												"body": {
													"nativeSrc": "21238:136:8",
													"nodeType": "YulBlock",
													"src": "21238:136:8",
													"statements": [
														{
															"nativeSrc": "21248:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "21248:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "21262:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "21262:30:8"
																},
																"nativeSrc": "21262:32:8",
																"nodeType": "YulFunctionCall",
																"src": "21262:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "21252:6:8",
																	"nodeType": "YulTypedName",
																	"src": "21252:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "21347:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "21347:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "21353:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "21353:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "21361:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "21361:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "21303:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "21303:43:8"
																},
																"nativeSrc": "21303:65:8",
																"nodeType": "YulFunctionCall",
																"src": "21303:65:8"
															},
															"nativeSrc": "21303:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "21303:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "21185:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "21224:4:8",
														"nodeType": "YulTypedName",
														"src": "21224:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "21230:6:8",
														"nodeType": "YulTypedName",
														"src": "21230:6:8",
														"type": ""
													}
												],
												"src": "21185:189:8"
											},
											{
												"body": {
													"nativeSrc": "21430:136:8",
													"nodeType": "YulBlock",
													"src": "21430:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "21497:63:8",
																"nodeType": "YulBlock",
																"src": "21497:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "21541:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "21541:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "21548:1:8",
																					"nodeType": "YulLiteral",
																					"src": "21548:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "21511:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "21511:29:8"
																			},
																			"nativeSrc": "21511:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "21511:39:8"
																		},
																		"nativeSrc": "21511:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "21511:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "21450:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "21450:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "21457:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "21457:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "21447:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "21447:2:8"
																},
																"nativeSrc": "21447:14:8",
																"nodeType": "YulFunctionCall",
																"src": "21447:14:8"
															},
															"nativeSrc": "21440:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "21462:26:8",
																"nodeType": "YulBlock",
																"src": "21462:26:8",
																"statements": [
																	{
																		"nativeSrc": "21464:22:8",
																		"nodeType": "YulAssignment",
																		"src": "21464:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "21477:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "21477:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "21484:1:8",
																					"nodeType": "YulLiteral",
																					"src": "21484:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "21473:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "21473:3:8"
																			},
																			"nativeSrc": "21473:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "21473:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "21464:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "21464:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "21444:2:8",
																"nodeType": "YulBlock",
																"src": "21444:2:8",
																"statements": []
															},
															"src": "21440:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "21380:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "21418:5:8",
														"nodeType": "YulTypedName",
														"src": "21418:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "21425:3:8",
														"nodeType": "YulTypedName",
														"src": "21425:3:8",
														"type": ""
													}
												],
												"src": "21380:186:8"
											},
											{
												"body": {
													"nativeSrc": "21651:464:8",
													"nodeType": "YulBlock",
													"src": "21651:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "21677:431:8",
																"nodeType": "YulBlock",
																"src": "21677:431:8",
																"statements": [
																	{
																		"nativeSrc": "21691:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "21691:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "21739:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "21739:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "21707:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "21707:31:8"
																			},
																			"nativeSrc": "21707:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "21707:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "21695:8:8",
																				"nodeType": "YulTypedName",
																				"src": "21695:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "21758:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "21758:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "21781:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "21781:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "21809:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "21809:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "21791:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "21791:17:8"
																					},
																					"nativeSrc": "21791:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "21791:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "21777:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "21777:3:8"
																			},
																			"nativeSrc": "21777:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "21777:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "21762:11:8",
																				"nodeType": "YulTypedName",
																				"src": "21762:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "21978:27:8",
																			"nodeType": "YulBlock",
																			"src": "21978:27:8",
																			"statements": [
																				{
																					"nativeSrc": "21980:23:8",
																					"nodeType": "YulAssignment",
																					"src": "21980:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "21995:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "21995:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "21980:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "21980:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "21962:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "21962:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "21974:2:8",
																					"nodeType": "YulLiteral",
																					"src": "21974:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "21959:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "21959:2:8"
																			},
																			"nativeSrc": "21959:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "21959:18:8"
																		},
																		"nativeSrc": "21956:49:8",
																		"nodeType": "YulIf",
																		"src": "21956:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "22047:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "22047:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "22064:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "22064:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "22092:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "22092:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "22074:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "22074:17:8"
																							},
																							"nativeSrc": "22074:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "22074:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "22060:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "22060:3:8"
																					},
																					"nativeSrc": "22060:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "22060:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "22018:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "22018:28:8"
																			},
																			"nativeSrc": "22018:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "22018:80:8"
																		},
																		"nativeSrc": "22018:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "22018:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "21668:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "21668:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21673:2:8",
																		"nodeType": "YulLiteral",
																		"src": "21673:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21665:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "21665:2:8"
																},
																"nativeSrc": "21665:11:8",
																"nodeType": "YulFunctionCall",
																"src": "21665:11:8"
															},
															"nativeSrc": "21662:446:8",
															"nodeType": "YulIf",
															"src": "21662:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "21572:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "21627:5:8",
														"nodeType": "YulTypedName",
														"src": "21627:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "21634:3:8",
														"nodeType": "YulTypedName",
														"src": "21634:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "21639:10:8",
														"nodeType": "YulTypedName",
														"src": "21639:10:8",
														"type": ""
													}
												],
												"src": "21572:543:8"
											},
											{
												"body": {
													"nativeSrc": "22184:54:8",
													"nodeType": "YulBlock",
													"src": "22184:54:8",
													"statements": [
														{
															"nativeSrc": "22194:37:8",
															"nodeType": "YulAssignment",
															"src": "22194:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "22219:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "22219:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "22225:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "22225:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "22215:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "22215:3:8"
																},
																"nativeSrc": "22215:16:8",
																"nodeType": "YulFunctionCall",
																"src": "22215:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "22194:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "22194:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "22121:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "22159:4:8",
														"nodeType": "YulTypedName",
														"src": "22159:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "22165:5:8",
														"nodeType": "YulTypedName",
														"src": "22165:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "22175:8:8",
														"nodeType": "YulTypedName",
														"src": "22175:8:8",
														"type": ""
													}
												],
												"src": "22121:117:8"
											},
											{
												"body": {
													"nativeSrc": "22295:118:8",
													"nodeType": "YulBlock",
													"src": "22295:118:8",
													"statements": [
														{
															"nativeSrc": "22305:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "22305:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "22354:1:8",
																						"nodeType": "YulLiteral",
																						"src": "22354:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "22357:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "22357:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "22350:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "22350:3:8"
																				},
																				"nativeSrc": "22350:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "22350:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "22369:1:8",
																						"nodeType": "YulLiteral",
																						"src": "22369:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "22365:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "22365:3:8"
																				},
																				"nativeSrc": "22365:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "22365:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "22321:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "22321:28:8"
																		},
																		"nativeSrc": "22321:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "22321:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "22317:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "22317:3:8"
																},
																"nativeSrc": "22317:56:8",
																"nodeType": "YulFunctionCall",
																"src": "22317:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "22309:4:8",
																	"nodeType": "YulTypedName",
																	"src": "22309:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22382:25:8",
															"nodeType": "YulAssignment",
															"src": "22382:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "22396:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "22396:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "22402:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "22402:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "22392:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "22392:3:8"
																},
																"nativeSrc": "22392:15:8",
																"nodeType": "YulFunctionCall",
																"src": "22392:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "22382:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "22382:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "22244:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "22272:4:8",
														"nodeType": "YulTypedName",
														"src": "22272:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "22278:5:8",
														"nodeType": "YulTypedName",
														"src": "22278:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "22288:6:8",
														"nodeType": "YulTypedName",
														"src": "22288:6:8",
														"type": ""
													}
												],
												"src": "22244:169:8"
											},
											{
												"body": {
													"nativeSrc": "22499:214:8",
													"nodeType": "YulBlock",
													"src": "22499:214:8",
													"statements": [
														{
															"nativeSrc": "22632:37:8",
															"nodeType": "YulAssignment",
															"src": "22632:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "22659:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "22659:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "22665:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "22665:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "22640:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "22640:18:8"
																},
																"nativeSrc": "22640:29:8",
																"nodeType": "YulFunctionCall",
																"src": "22640:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "22632:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "22632:4:8"
																}
															]
														},
														{
															"nativeSrc": "22678:29:8",
															"nodeType": "YulAssignment",
															"src": "22678:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "22689:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "22689:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "22699:1:8",
																				"nodeType": "YulLiteral",
																				"src": "22699:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "22702:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "22702:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "22695:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "22695:3:8"
																		},
																		"nativeSrc": "22695:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "22695:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "22686:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "22686:2:8"
																},
																"nativeSrc": "22686:21:8",
																"nodeType": "YulFunctionCall",
																"src": "22686:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "22678:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "22678:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "22418:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "22480:4:8",
														"nodeType": "YulTypedName",
														"src": "22480:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "22486:3:8",
														"nodeType": "YulTypedName",
														"src": "22486:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "22494:4:8",
														"nodeType": "YulTypedName",
														"src": "22494:4:8",
														"type": ""
													}
												],
												"src": "22418:295:8"
											},
											{
												"body": {
													"nativeSrc": "22807:1362:8",
													"nodeType": "YulBlock",
													"src": "22807:1362:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "22834:9:8",
																"nodeType": "YulBlock",
																"src": "22834:9:8",
																"statements": [
																	{
																		"nativeSrc": "22836:5:8",
																		"nodeType": "YulLeave",
																		"src": "22836:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "22823:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "22823:4:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "22829:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "22829:3:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "22820:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "22820:2:8"
																},
																"nativeSrc": "22820:13:8",
																"nodeType": "YulFunctionCall",
																"src": "22820:13:8"
															},
															"nativeSrc": "22817:26:8",
															"nodeType": "YulIf",
															"src": "22817:26:8"
														},
														{
															"nativeSrc": "22853:48:8",
															"nodeType": "YulVariableDeclaration",
															"src": "22853:48:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "22897:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "22897:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_storage",
																	"nativeSrc": "22867:29:8",
																	"nodeType": "YulIdentifier",
																	"src": "22867:29:8"
																},
																"nativeSrc": "22867:34:8",
																"nodeType": "YulFunctionCall",
																"src": "22867:34:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "22857:6:8",
																	"nodeType": "YulTypedName",
																	"src": "22857:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "22986:22:8",
																"nodeType": "YulBlock",
																"src": "22986:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "22988:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "22988:16:8"
																			},
																			"nativeSrc": "22988:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "22988:18:8"
																		},
																		"nativeSrc": "22988:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "22988:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "22958:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "22958:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22966:18:8",
																		"nodeType": "YulLiteral",
																		"src": "22966:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "22955:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "22955:2:8"
																},
																"nativeSrc": "22955:30:8",
																"nodeType": "YulFunctionCall",
																"src": "22955:30:8"
															},
															"nativeSrc": "22952:56:8",
															"nodeType": "YulIf",
															"src": "22952:56:8"
														},
														{
															"nativeSrc": "23018:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "23018:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "23064:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "23064:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "23058:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "23058:5:8"
																		},
																		"nativeSrc": "23058:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "23058:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "23032:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "23032:25:8"
																},
																"nativeSrc": "23032:38:8",
																"nodeType": "YulFunctionCall",
																"src": "23032:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "23022:6:8",
																	"nodeType": "YulTypedName",
																	"src": "23022:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "23163:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "23163:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "23169:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "23169:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "23177:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "23177:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "23117:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "23117:45:8"
																},
																"nativeSrc": "23117:67:8",
																"nodeType": "YulFunctionCall",
																"src": "23117:67:8"
															},
															"nativeSrc": "23117:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "23117:67:8"
														},
														{
															"nativeSrc": "23194:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "23194:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "23211:1:8",
																"nodeType": "YulLiteral",
																"src": "23211:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "23198:9:8",
																	"nodeType": "YulTypedName",
																	"src": "23198:9:8",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "23259:665:8",
																		"nodeType": "YulBlock",
																		"src": "23259:665:8",
																		"statements": [
																			{
																				"nativeSrc": "23273:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "23273:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "23292:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "23292:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "23304:4:8",
																									"nodeType": "YulLiteral",
																									"src": "23304:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "23300:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "23300:3:8"
																							},
																							"nativeSrc": "23300:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "23300:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "23288:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "23288:3:8"
																					},
																					"nativeSrc": "23288:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "23288:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "23277:7:8",
																						"nodeType": "YulTypedName",
																						"src": "23277:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "23323:43:8",
																				"nodeType": "YulAssignment",
																				"src": "23323:43:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "23362:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "23362:3:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "23330:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "23330:31:8"
																					},
																					"nativeSrc": "23330:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "23330:36:8"
																				},
																				"variableNames": [
																					{
																						"name": "src",
																						"nativeSrc": "23323:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "23323:3:8"
																					}
																				]
																			},
																			{
																				"nativeSrc": "23379:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "23379:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "23425:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "23425:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "23393:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "23393:31:8"
																					},
																					"nativeSrc": "23393:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "23393:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "23383:6:8",
																						"nodeType": "YulTypedName",
																						"src": "23383:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "23443:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "23443:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "23452:1:8",
																					"nodeType": "YulLiteral",
																					"src": "23452:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "23447:1:8",
																						"nodeType": "YulTypedName",
																						"src": "23447:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "23511:162:8",
																					"nodeType": "YulBlock",
																					"src": "23511:162:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "23536:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "23536:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "23554:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "23554:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "23559:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "23559:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "23550:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "23550:3:8"
																												},
																												"nativeSrc": "23550:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "23550:19:8"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nativeSrc": "23544:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "23544:5:8"
																										},
																										"nativeSrc": "23544:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "23544:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "23529:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "23529:6:8"
																								},
																								"nativeSrc": "23529:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "23529:42:8"
																							},
																							"nativeSrc": "23529:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "23529:42:8"
																						},
																						{
																							"nativeSrc": "23588:24:8",
																							"nodeType": "YulAssignment",
																							"src": "23588:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "23602:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "23602:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "23610:1:8",
																										"nodeType": "YulLiteral",
																										"src": "23610:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "23598:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "23598:3:8"
																								},
																								"nativeSrc": "23598:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "23598:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "23588:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "23588:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "23629:30:8",
																							"nodeType": "YulAssignment",
																							"src": "23629:30:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "23646:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "23646:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "23657:1:8",
																										"nodeType": "YulLiteral",
																										"src": "23657:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "23642:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "23642:3:8"
																								},
																								"nativeSrc": "23642:17:8",
																								"nodeType": "YulFunctionCall",
																								"src": "23642:17:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "23629:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "23629:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "23477:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "23477:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "23480:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "23480:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "23474:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "23474:2:8"
																					},
																					"nativeSrc": "23474:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "23474:14:8"
																				},
																				"nativeSrc": "23466:207:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "23489:21:8",
																					"nodeType": "YulBlock",
																					"src": "23489:21:8",
																					"statements": [
																						{
																							"nativeSrc": "23491:17:8",
																							"nodeType": "YulAssignment",
																							"src": "23491:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "23500:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "23500:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "23503:4:8",
																										"nodeType": "YulLiteral",
																										"src": "23503:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "23496:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "23496:3:8"
																								},
																								"nativeSrc": "23496:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "23496:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "23491:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "23491:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "23470:3:8",
																					"nodeType": "YulBlock",
																					"src": "23470:3:8",
																					"statements": []
																				},
																				"src": "23466:207:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "23709:156:8",
																					"nodeType": "YulBlock",
																					"src": "23709:156:8",
																					"statements": [
																						{
																							"nativeSrc": "23727:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "23727:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "23754:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "23754:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "23759:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "23759:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "23750:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "23750:3:8"
																										},
																										"nativeSrc": "23750:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "23750:19:8"
																									}
																								],
																								"functionName": {
																									"name": "sload",
																									"nativeSrc": "23744:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "23744:5:8"
																								},
																								"nativeSrc": "23744:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "23744:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "23731:9:8",
																									"nodeType": "YulTypedName",
																									"src": "23731:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "23794:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "23794:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "23821:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "23821:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "23836:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "23836:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "23844:4:8",
																														"nodeType": "YulLiteral",
																														"src": "23844:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "23832:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "23832:3:8"
																												},
																												"nativeSrc": "23832:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "23832:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "23802:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "23802:18:8"
																										},
																										"nativeSrc": "23802:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "23802:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "23787:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "23787:6:8"
																								},
																								"nativeSrc": "23787:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "23787:64:8"
																							},
																							"nativeSrc": "23787:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "23787:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "23692:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "23692:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "23701:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "23701:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "23689:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "23689:2:8"
																					},
																					"nativeSrc": "23689:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "23689:19:8"
																				},
																				"nativeSrc": "23686:179:8",
																				"nodeType": "YulIf",
																				"src": "23686:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "23885:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "23885:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "23899:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "23899:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "23907:1:8",
																											"nodeType": "YulLiteral",
																											"src": "23907:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "23895:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "23895:3:8"
																									},
																									"nativeSrc": "23895:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "23895:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "23911:1:8",
																									"nodeType": "YulLiteral",
																									"src": "23911:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "23891:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "23891:3:8"
																							},
																							"nativeSrc": "23891:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "23891:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "23878:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "23878:6:8"
																					},
																					"nativeSrc": "23878:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "23878:36:8"
																				},
																				"nativeSrc": "23878:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "23878:36:8"
																			}
																		]
																	},
																	"nativeSrc": "23252:672:8",
																	"nodeType": "YulCase",
																	"src": "23252:672:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "23257:1:8",
																		"nodeType": "YulLiteral",
																		"src": "23257:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "23941:222:8",
																		"nodeType": "YulBlock",
																		"src": "23941:222:8",
																		"statements": [
																			{
																				"nativeSrc": "23955:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "23955:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "23968:1:8",
																					"nodeType": "YulLiteral",
																					"src": "23968:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "23959:5:8",
																						"nodeType": "YulTypedName",
																						"src": "23959:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "23992:67:8",
																					"nodeType": "YulBlock",
																					"src": "23992:67:8",
																					"statements": [
																						{
																							"nativeSrc": "24010:35:8",
																							"nodeType": "YulAssignment",
																							"src": "24010:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "24029:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "24029:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "24034:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "24034:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "24025:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "24025:3:8"
																										},
																										"nativeSrc": "24025:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "24025:19:8"
																									}
																								],
																								"functionName": {
																									"name": "sload",
																									"nativeSrc": "24019:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "24019:5:8"
																								},
																								"nativeSrc": "24019:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "24019:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "24010:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "24010:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "23985:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "23985:6:8"
																				},
																				"nativeSrc": "23982:77:8",
																				"nodeType": "YulIf",
																				"src": "23982:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "24079:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "24079:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "24138:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "24138:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "24145:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "24145:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "24085:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "24085:52:8"
																							},
																							"nativeSrc": "24085:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "24085:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "24072:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "24072:6:8"
																					},
																					"nativeSrc": "24072:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "24072:81:8"
																				},
																				"nativeSrc": "24072:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "24072:81:8"
																			}
																		]
																	},
																	"nativeSrc": "23933:230:8",
																	"nodeType": "YulCase",
																	"src": "23933:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "23232:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "23232:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23240:2:8",
																		"nodeType": "YulLiteral",
																		"src": "23240:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "23229:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "23229:2:8"
																},
																"nativeSrc": "23229:14:8",
																"nodeType": "YulFunctionCall",
																"src": "23229:14:8"
															},
															"nativeSrc": "23222:941:8",
															"nodeType": "YulSwitch",
															"src": "23222:941:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_storage_to_t_string_storage",
												"nativeSrc": "22718:1451:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "22796:4:8",
														"nodeType": "YulTypedName",
														"src": "22796:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "22802:3:8",
														"nodeType": "YulTypedName",
														"src": "22802:3:8",
														"type": ""
													}
												],
												"src": "22718:1451:8"
											},
											{
												"body": {
													"nativeSrc": "24288:742:8",
													"nodeType": "YulBlock",
													"src": "24288:742:8",
													"statements": [
														{
															"nativeSrc": "24298:29:8",
															"nodeType": "YulVariableDeclaration",
															"src": "24298:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24321:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "24321:5:8"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "24315:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "24315:5:8"
																},
																"nativeSrc": "24315:12:8",
																"nodeType": "YulFunctionCall",
																"src": "24315:12:8"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nativeSrc": "24302:9:8",
																	"nodeType": "YulTypedName",
																	"src": "24302:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24336:50:8",
															"nodeType": "YulVariableDeclaration",
															"src": "24336:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nativeSrc": "24376:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "24376:9:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "24350:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "24350:25:8"
																},
																"nativeSrc": "24350:36:8",
																"nodeType": "YulFunctionCall",
																"src": "24350:36:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "24340:6:8",
																	"nodeType": "YulTypedName",
																	"src": "24340:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24395:78:8",
															"nodeType": "YulAssignment",
															"src": "24395:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24461:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "24461:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "24466:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "24466:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24402:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "24402:58:8"
																},
																"nativeSrc": "24402:71:8",
																"nodeType": "YulFunctionCall",
																"src": "24402:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24395:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "24395:3:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "24522:157:8",
																		"nodeType": "YulBlock",
																		"src": "24522:157:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "24575:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "24575:3:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nativeSrc": "24584:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "24584:9:8"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "24599:4:8",
																											"nodeType": "YulLiteral",
																											"src": "24599:4:8",
																											"type": "",
																											"value": "0xff"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nativeSrc": "24595:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "24595:3:8"
																									},
																									"nativeSrc": "24595:9:8",
																									"nodeType": "YulFunctionCall",
																									"src": "24595:9:8"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nativeSrc": "24580:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "24580:3:8"
																							},
																							"nativeSrc": "24580:25:8",
																							"nodeType": "YulFunctionCall",
																							"src": "24580:25:8"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "24568:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "24568:6:8"
																					},
																					"nativeSrc": "24568:38:8",
																					"nodeType": "YulFunctionCall",
																					"src": "24568:38:8"
																				},
																				"nativeSrc": "24568:38:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "24568:38:8"
																			},
																			{
																				"nativeSrc": "24619:50:8",
																				"nodeType": "YulAssignment",
																				"src": "24619:50:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "24630:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "24630:3:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "24639:4:8",
																									"nodeType": "YulLiteral",
																									"src": "24639:4:8",
																									"type": "",
																									"value": "0x20"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "length",
																													"nativeSrc": "24659:6:8",
																													"nodeType": "YulIdentifier",
																													"src": "24659:6:8"
																												}
																											],
																											"functionName": {
																												"name": "iszero",
																												"nativeSrc": "24652:6:8",
																												"nodeType": "YulIdentifier",
																												"src": "24652:6:8"
																											},
																											"nativeSrc": "24652:14:8",
																											"nodeType": "YulFunctionCall",
																											"src": "24652:14:8"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nativeSrc": "24645:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "24645:6:8"
																									},
																									"nativeSrc": "24645:22:8",
																									"nodeType": "YulFunctionCall",
																									"src": "24645:22:8"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "24635:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "24635:3:8"
																							},
																							"nativeSrc": "24635:33:8",
																							"nodeType": "YulFunctionCall",
																							"src": "24635:33:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "24626:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "24626:3:8"
																					},
																					"nativeSrc": "24626:43:8",
																					"nodeType": "YulFunctionCall",
																					"src": "24626:43:8"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nativeSrc": "24619:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "24619:3:8"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "24515:164:8",
																	"nodeType": "YulCase",
																	"src": "24515:164:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "24520:1:8",
																		"nodeType": "YulLiteral",
																		"src": "24520:1:8",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "24695:329:8",
																		"nodeType": "YulBlock",
																		"src": "24695:329:8",
																		"statements": [
																			{
																				"nativeSrc": "24740:53:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "24740:53:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "value",
																							"nativeSrc": "24787:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "24787:5:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "24755:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "24755:31:8"
																					},
																					"nativeSrc": "24755:38:8",
																					"nodeType": "YulFunctionCall",
																					"src": "24755:38:8"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nativeSrc": "24744:7:8",
																						"nodeType": "YulTypedName",
																						"src": "24744:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "24806:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "24806:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "24815:1:8",
																					"nodeType": "YulLiteral",
																					"src": "24815:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "24810:1:8",
																						"nodeType": "YulTypedName",
																						"src": "24810:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "24873:110:8",
																					"nodeType": "YulBlock",
																					"src": "24873:110:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nativeSrc": "24902:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "24902:3:8"
																											},
																											{
																												"name": "i",
																												"nativeSrc": "24907:1:8",
																												"nodeType": "YulIdentifier",
																												"src": "24907:1:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "24898:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "24898:3:8"
																										},
																										"nativeSrc": "24898:11:8",
																										"nodeType": "YulFunctionCall",
																										"src": "24898:11:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nativeSrc": "24917:7:8",
																												"nodeType": "YulIdentifier",
																												"src": "24917:7:8"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nativeSrc": "24911:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "24911:5:8"
																										},
																										"nativeSrc": "24911:14:8",
																										"nodeType": "YulFunctionCall",
																										"src": "24911:14:8"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nativeSrc": "24891:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "24891:6:8"
																								},
																								"nativeSrc": "24891:35:8",
																								"nodeType": "YulFunctionCall",
																								"src": "24891:35:8"
																							},
																							"nativeSrc": "24891:35:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "24891:35:8"
																						},
																						{
																							"nativeSrc": "24943:26:8",
																							"nodeType": "YulAssignment",
																							"src": "24943:26:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nativeSrc": "24958:7:8",
																										"nodeType": "YulIdentifier",
																										"src": "24958:7:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "24967:1:8",
																										"nodeType": "YulLiteral",
																										"src": "24967:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "24954:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "24954:3:8"
																								},
																								"nativeSrc": "24954:15:8",
																								"nodeType": "YulFunctionCall",
																								"src": "24954:15:8"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nativeSrc": "24943:7:8",
																									"nodeType": "YulIdentifier",
																									"src": "24943:7:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "24840:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "24840:1:8"
																						},
																						{
																							"name": "length",
																							"nativeSrc": "24843:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "24843:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "24837:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "24837:2:8"
																					},
																					"nativeSrc": "24837:13:8",
																					"nodeType": "YulFunctionCall",
																					"src": "24837:13:8"
																				},
																				"nativeSrc": "24829:154:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "24851:21:8",
																					"nodeType": "YulBlock",
																					"src": "24851:21:8",
																					"statements": [
																						{
																							"nativeSrc": "24853:17:8",
																							"nodeType": "YulAssignment",
																							"src": "24853:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "24862:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "24862:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "24865:4:8",
																										"nodeType": "YulLiteral",
																										"src": "24865:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "24858:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "24858:3:8"
																								},
																								"nativeSrc": "24858:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "24858:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "24853:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "24853:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "24833:3:8",
																					"nodeType": "YulBlock",
																					"src": "24833:3:8",
																					"statements": []
																				},
																				"src": "24829:154:8"
																			},
																			{
																				"nativeSrc": "24996:18:8",
																				"nodeType": "YulAssignment",
																				"src": "24996:18:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "25007:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "25007:3:8"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "25012:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "25012:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "25003:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "25003:3:8"
																					},
																					"nativeSrc": "25003:11:8",
																					"nodeType": "YulFunctionCall",
																					"src": "25003:11:8"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nativeSrc": "24996:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "24996:3:8"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "24688:336:8",
																	"nodeType": "YulCase",
																	"src": "24688:336:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "24693:1:8",
																		"nodeType": "YulLiteral",
																		"src": "24693:1:8",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nativeSrc": "24493:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "24493:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24504:1:8",
																		"nodeType": "YulLiteral",
																		"src": "24504:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "24489:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "24489:3:8"
																},
																"nativeSrc": "24489:17:8",
																"nodeType": "YulFunctionCall",
																"src": "24489:17:8"
															},
															"nativeSrc": "24482:542:8",
															"nodeType": "YulSwitch",
															"src": "24482:542:8"
														}
													]
												},
												"name": "abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "24199:831:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24269:5:8",
														"nodeType": "YulTypedName",
														"src": "24269:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "24276:3:8",
														"nodeType": "YulTypedName",
														"src": "24276:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "24284:3:8",
														"nodeType": "YulTypedName",
														"src": "24284:3:8",
														"type": ""
													}
												],
												"src": "24199:831:8"
											},
											{
												"body": {
													"nativeSrc": "25203:352:8",
													"nodeType": "YulBlock",
													"src": "25203:352:8",
													"statements": [
														{
															"nativeSrc": "25213:26:8",
															"nodeType": "YulAssignment",
															"src": "25213:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25225:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "25225:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25236:2:8",
																		"nodeType": "YulLiteral",
																		"src": "25236:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25221:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "25221:3:8"
																},
																"nativeSrc": "25221:18:8",
																"nodeType": "YulFunctionCall",
																"src": "25221:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25213:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "25213:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25289:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "25289:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25302:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "25302:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25313:1:8",
																				"nodeType": "YulLiteral",
																				"src": "25313:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25298:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "25298:3:8"
																		},
																		"nativeSrc": "25298:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "25298:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "25249:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "25249:39:8"
																},
																"nativeSrc": "25249:67:8",
																"nodeType": "YulFunctionCall",
																"src": "25249:67:8"
															},
															"nativeSrc": "25249:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "25249:67:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25337:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "25337:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25348:2:8",
																				"nodeType": "YulLiteral",
																				"src": "25348:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25333:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "25333:3:8"
																		},
																		"nativeSrc": "25333:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "25333:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25357:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "25357:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25363:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "25363:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25353:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "25353:3:8"
																		},
																		"nativeSrc": "25353:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "25353:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25326:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "25326:6:8"
																},
																"nativeSrc": "25326:48:8",
																"nodeType": "YulFunctionCall",
																"src": "25326:48:8"
															},
															"nativeSrc": "25326:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "25326:48:8"
														},
														{
															"nativeSrc": "25383:83:8",
															"nodeType": "YulAssignment",
															"src": "25383:83:8",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "25452:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "25452:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "25461:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "25461:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25391:60:8",
																	"nodeType": "YulIdentifier",
																	"src": "25391:60:8"
																},
																"nativeSrc": "25391:75:8",
																"nodeType": "YulFunctionCall",
																"src": "25391:75:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25383:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "25383:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "25520:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "25520:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25533:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "25533:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25544:2:8",
																				"nodeType": "YulLiteral",
																				"src": "25544:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25529:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "25529:3:8"
																		},
																		"nativeSrc": "25529:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "25529:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25476:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "25476:43:8"
																},
																"nativeSrc": "25476:72:8",
																"nodeType": "YulFunctionCall",
																"src": "25476:72:8"
															},
															"nativeSrc": "25476:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "25476:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8_t_string_storage_t_uint256__to_t_uint8_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "25036:519:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25159:9:8",
														"nodeType": "YulTypedName",
														"src": "25159:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "25171:6:8",
														"nodeType": "YulTypedName",
														"src": "25171:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "25179:6:8",
														"nodeType": "YulTypedName",
														"src": "25179:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "25187:6:8",
														"nodeType": "YulTypedName",
														"src": "25187:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25198:4:8",
														"nodeType": "YulTypedName",
														"src": "25198:4:8",
														"type": ""
													}
												],
												"src": "25036:519:8"
											},
											{
												"body": {
													"nativeSrc": "25667:65:8",
													"nodeType": "YulBlock",
													"src": "25667:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "25689:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "25689:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25697:1:8",
																				"nodeType": "YulLiteral",
																				"src": "25697:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25685:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "25685:3:8"
																		},
																		"nativeSrc": "25685:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "25685:14:8"
																	},
																	{
																		"hexValue": "426f6e757320616c726561647920636c61696d6564",
																		"kind": "string",
																		"nativeSrc": "25701:23:8",
																		"nodeType": "YulLiteral",
																		"src": "25701:23:8",
																		"type": "",
																		"value": "Bonus already claimed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25678:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "25678:6:8"
																},
																"nativeSrc": "25678:47:8",
																"nodeType": "YulFunctionCall",
																"src": "25678:47:8"
															},
															"nativeSrc": "25678:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "25678:47:8"
														}
													]
												},
												"name": "store_literal_in_memory_e4e32a093f922415ec967630dd3d29e7177524111a79166bb989f4c2dcbc3a12",
												"nativeSrc": "25561:171:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "25659:6:8",
														"nodeType": "YulTypedName",
														"src": "25659:6:8",
														"type": ""
													}
												],
												"src": "25561:171:8"
											},
											{
												"body": {
													"nativeSrc": "25884:220:8",
													"nodeType": "YulBlock",
													"src": "25884:220:8",
													"statements": [
														{
															"nativeSrc": "25894:74:8",
															"nodeType": "YulAssignment",
															"src": "25894:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25960:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "25960:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25965:2:8",
																		"nodeType": "YulLiteral",
																		"src": "25965:2:8",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25901:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "25901:58:8"
																},
																"nativeSrc": "25901:67:8",
																"nodeType": "YulFunctionCall",
																"src": "25901:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25894:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "25894:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26066:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "26066:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e4e32a093f922415ec967630dd3d29e7177524111a79166bb989f4c2dcbc3a12",
																	"nativeSrc": "25977:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "25977:88:8"
																},
																"nativeSrc": "25977:93:8",
																"nodeType": "YulFunctionCall",
																"src": "25977:93:8"
															},
															"nativeSrc": "25977:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "25977:93:8"
														},
														{
															"nativeSrc": "26079:19:8",
															"nodeType": "YulAssignment",
															"src": "26079:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26090:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "26090:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26095:2:8",
																		"nodeType": "YulLiteral",
																		"src": "26095:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26086:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "26086:3:8"
																},
																"nativeSrc": "26086:12:8",
																"nodeType": "YulFunctionCall",
																"src": "26086:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "26079:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "26079:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e4e32a093f922415ec967630dd3d29e7177524111a79166bb989f4c2dcbc3a12_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "25738:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "25872:3:8",
														"nodeType": "YulTypedName",
														"src": "25872:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "25880:3:8",
														"nodeType": "YulTypedName",
														"src": "25880:3:8",
														"type": ""
													}
												],
												"src": "25738:366:8"
											},
											{
												"body": {
													"nativeSrc": "26281:248:8",
													"nodeType": "YulBlock",
													"src": "26281:248:8",
													"statements": [
														{
															"nativeSrc": "26291:26:8",
															"nodeType": "YulAssignment",
															"src": "26291:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26303:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "26303:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26314:2:8",
																		"nodeType": "YulLiteral",
																		"src": "26314:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26299:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "26299:3:8"
																},
																"nativeSrc": "26299:18:8",
																"nodeType": "YulFunctionCall",
																"src": "26299:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26291:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "26291:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26338:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "26338:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26349:1:8",
																				"nodeType": "YulLiteral",
																				"src": "26349:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26334:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "26334:3:8"
																		},
																		"nativeSrc": "26334:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "26334:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "26357:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "26357:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26363:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "26363:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26353:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "26353:3:8"
																		},
																		"nativeSrc": "26353:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "26353:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26327:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "26327:6:8"
																},
																"nativeSrc": "26327:47:8",
																"nodeType": "YulFunctionCall",
																"src": "26327:47:8"
															},
															"nativeSrc": "26327:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "26327:47:8"
														},
														{
															"nativeSrc": "26383:139:8",
															"nodeType": "YulAssignment",
															"src": "26383:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "26517:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "26517:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e4e32a093f922415ec967630dd3d29e7177524111a79166bb989f4c2dcbc3a12_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26391:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "26391:124:8"
																},
																"nativeSrc": "26391:131:8",
																"nodeType": "YulFunctionCall",
																"src": "26391:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26383:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "26383:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e4e32a093f922415ec967630dd3d29e7177524111a79166bb989f4c2dcbc3a12__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "26110:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26261:9:8",
														"nodeType": "YulTypedName",
														"src": "26261:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26276:4:8",
														"nodeType": "YulTypedName",
														"src": "26276:4:8",
														"type": ""
													}
												],
												"src": "26110:419:8"
											},
											{
												"body": {
													"nativeSrc": "26563:152:8",
													"nodeType": "YulBlock",
													"src": "26563:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "26580:1:8",
																		"nodeType": "YulLiteral",
																		"src": "26580:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26583:77:8",
																		"nodeType": "YulLiteral",
																		"src": "26583:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26573:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "26573:6:8"
																},
																"nativeSrc": "26573:88:8",
																"nodeType": "YulFunctionCall",
																"src": "26573:88:8"
															},
															"nativeSrc": "26573:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "26573:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "26677:1:8",
																		"nodeType": "YulLiteral",
																		"src": "26677:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26680:4:8",
																		"nodeType": "YulLiteral",
																		"src": "26680:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26670:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "26670:6:8"
																},
																"nativeSrc": "26670:15:8",
																"nodeType": "YulFunctionCall",
																"src": "26670:15:8"
															},
															"nativeSrc": "26670:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "26670:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "26701:1:8",
																		"nodeType": "YulLiteral",
																		"src": "26701:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26704:4:8",
																		"nodeType": "YulLiteral",
																		"src": "26704:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "26694:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "26694:6:8"
																},
																"nativeSrc": "26694:15:8",
																"nodeType": "YulFunctionCall",
																"src": "26694:15:8"
															},
															"nativeSrc": "26694:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "26694:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "26535:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "26535:180:8"
											},
											{
												"body": {
													"nativeSrc": "26875:288:8",
													"nodeType": "YulBlock",
													"src": "26875:288:8",
													"statements": [
														{
															"nativeSrc": "26885:26:8",
															"nodeType": "YulAssignment",
															"src": "26885:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26897:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "26897:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26908:2:8",
																		"nodeType": "YulLiteral",
																		"src": "26908:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26893:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "26893:3:8"
																},
																"nativeSrc": "26893:18:8",
																"nodeType": "YulFunctionCall",
																"src": "26893:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26885:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "26885:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "26965:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "26965:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26978:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "26978:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26989:1:8",
																				"nodeType": "YulLiteral",
																				"src": "26989:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26974:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "26974:3:8"
																		},
																		"nativeSrc": "26974:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "26974:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "26921:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "26921:43:8"
																},
																"nativeSrc": "26921:71:8",
																"nodeType": "YulFunctionCall",
																"src": "26921:71:8"
															},
															"nativeSrc": "26921:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "26921:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "27046:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "27046:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27059:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "27059:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27070:2:8",
																				"nodeType": "YulLiteral",
																				"src": "27070:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27055:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "27055:3:8"
																		},
																		"nativeSrc": "27055:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "27055:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "27002:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "27002:43:8"
																},
																"nativeSrc": "27002:72:8",
																"nodeType": "YulFunctionCall",
																"src": "27002:72:8"
															},
															"nativeSrc": "27002:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "27002:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "27128:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "27128:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27141:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "27141:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27152:2:8",
																				"nodeType": "YulLiteral",
																				"src": "27152:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27137:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "27137:3:8"
																		},
																		"nativeSrc": "27137:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "27137:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "27084:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "27084:43:8"
																},
																"nativeSrc": "27084:72:8",
																"nodeType": "YulFunctionCall",
																"src": "27084:72:8"
															},
															"nativeSrc": "27084:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "27084:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "26721:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26831:9:8",
														"nodeType": "YulTypedName",
														"src": "26831:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "26843:6:8",
														"nodeType": "YulTypedName",
														"src": "26843:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "26851:6:8",
														"nodeType": "YulTypedName",
														"src": "26851:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "26859:6:8",
														"nodeType": "YulTypedName",
														"src": "26859:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26870:4:8",
														"nodeType": "YulTypedName",
														"src": "26870:4:8",
														"type": ""
													}
												],
												"src": "26721:442:8"
											},
											{
												"body": {
													"nativeSrc": "27261:1303:8",
													"nodeType": "YulBlock",
													"src": "27261:1303:8",
													"statements": [
														{
															"nativeSrc": "27272:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "27272:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "27319:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "27319:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "27286:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "27286:32:8"
																},
																"nativeSrc": "27286:37:8",
																"nodeType": "YulFunctionCall",
																"src": "27286:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "27276:6:8",
																	"nodeType": "YulTypedName",
																	"src": "27276:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "27408:22:8",
																"nodeType": "YulBlock",
																"src": "27408:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "27410:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "27410:16:8"
																			},
																			"nativeSrc": "27410:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "27410:18:8"
																		},
																		"nativeSrc": "27410:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "27410:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "27380:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "27380:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27388:18:8",
																		"nodeType": "YulLiteral",
																		"src": "27388:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "27377:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "27377:2:8"
																},
																"nativeSrc": "27377:30:8",
																"nodeType": "YulFunctionCall",
																"src": "27377:30:8"
															},
															"nativeSrc": "27374:56:8",
															"nodeType": "YulIf",
															"src": "27374:56:8"
														},
														{
															"nativeSrc": "27440:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "27440:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "27486:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "27486:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "27480:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "27480:5:8"
																		},
																		"nativeSrc": "27480:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "27480:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "27454:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "27454:25:8"
																},
																"nativeSrc": "27454:38:8",
																"nodeType": "YulFunctionCall",
																"src": "27454:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "27444:6:8",
																	"nodeType": "YulTypedName",
																	"src": "27444:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "27585:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "27585:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "27591:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "27591:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "27599:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "27599:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "27539:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "27539:45:8"
																},
																"nativeSrc": "27539:67:8",
																"nodeType": "YulFunctionCall",
																"src": "27539:67:8"
															},
															"nativeSrc": "27539:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "27539:67:8"
														},
														{
															"nativeSrc": "27616:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "27616:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "27633:1:8",
																"nodeType": "YulLiteral",
																"src": "27633:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "27620:9:8",
																	"nodeType": "YulTypedName",
																	"src": "27620:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "27644:17:8",
															"nodeType": "YulAssignment",
															"src": "27644:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "27657:4:8",
																"nodeType": "YulLiteral",
																"src": "27657:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "27644:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "27644:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "27708:611:8",
																		"nodeType": "YulBlock",
																		"src": "27708:611:8",
																		"statements": [
																			{
																				"nativeSrc": "27722:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "27722:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "27741:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "27741:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "27753:4:8",
																									"nodeType": "YulLiteral",
																									"src": "27753:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "27749:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "27749:3:8"
																							},
																							"nativeSrc": "27749:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "27749:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "27737:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "27737:3:8"
																					},
																					"nativeSrc": "27737:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "27737:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "27726:7:8",
																						"nodeType": "YulTypedName",
																						"src": "27726:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "27773:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "27773:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "27819:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "27819:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "27787:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "27787:31:8"
																					},
																					"nativeSrc": "27787:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "27787:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "27777:6:8",
																						"nodeType": "YulTypedName",
																						"src": "27777:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "27837:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "27837:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "27846:1:8",
																					"nodeType": "YulLiteral",
																					"src": "27846:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "27841:1:8",
																						"nodeType": "YulTypedName",
																						"src": "27841:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "27905:163:8",
																					"nodeType": "YulBlock",
																					"src": "27905:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "27930:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "27930:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "27948:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "27948:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "27953:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "27953:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "27944:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "27944:3:8"
																												},
																												"nativeSrc": "27944:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "27944:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "27938:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "27938:5:8"
																										},
																										"nativeSrc": "27938:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "27938:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "27923:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "27923:6:8"
																								},
																								"nativeSrc": "27923:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "27923:42:8"
																							},
																							"nativeSrc": "27923:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "27923:42:8"
																						},
																						{
																							"nativeSrc": "27982:24:8",
																							"nodeType": "YulAssignment",
																							"src": "27982:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "27996:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "27996:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "28004:1:8",
																										"nodeType": "YulLiteral",
																										"src": "28004:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "27992:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "27992:3:8"
																								},
																								"nativeSrc": "27992:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "27992:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "27982:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "27982:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "28023:31:8",
																							"nodeType": "YulAssignment",
																							"src": "28023:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "28040:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "28040:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "28051:2:8",
																										"nodeType": "YulLiteral",
																										"src": "28051:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "28036:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "28036:3:8"
																								},
																								"nativeSrc": "28036:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "28036:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "28023:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "28023:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "27871:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "27871:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "27874:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "27874:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "27868:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "27868:2:8"
																					},
																					"nativeSrc": "27868:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "27868:14:8"
																				},
																				"nativeSrc": "27860:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "27883:21:8",
																					"nodeType": "YulBlock",
																					"src": "27883:21:8",
																					"statements": [
																						{
																							"nativeSrc": "27885:17:8",
																							"nodeType": "YulAssignment",
																							"src": "27885:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "27894:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "27894:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "27897:4:8",
																										"nodeType": "YulLiteral",
																										"src": "27897:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "27890:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "27890:3:8"
																								},
																								"nativeSrc": "27890:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "27890:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "27885:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "27885:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "27864:3:8",
																					"nodeType": "YulBlock",
																					"src": "27864:3:8",
																					"statements": []
																				},
																				"src": "27860:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "28104:156:8",
																					"nodeType": "YulBlock",
																					"src": "28104:156:8",
																					"statements": [
																						{
																							"nativeSrc": "28122:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "28122:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "28149:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "28149:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "28154:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "28154:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "28145:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "28145:3:8"
																										},
																										"nativeSrc": "28145:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "28145:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "28139:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "28139:5:8"
																								},
																								"nativeSrc": "28139:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "28139:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "28126:9:8",
																									"nodeType": "YulTypedName",
																									"src": "28126:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "28189:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "28189:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "28216:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "28216:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "28231:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "28231:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "28239:4:8",
																														"nodeType": "YulLiteral",
																														"src": "28239:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "28227:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "28227:3:8"
																												},
																												"nativeSrc": "28227:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "28227:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "28197:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "28197:18:8"
																										},
																										"nativeSrc": "28197:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "28197:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "28182:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "28182:6:8"
																								},
																								"nativeSrc": "28182:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "28182:64:8"
																							},
																							"nativeSrc": "28182:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "28182:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "28087:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "28087:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "28096:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "28096:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "28084:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "28084:2:8"
																					},
																					"nativeSrc": "28084:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "28084:19:8"
																				},
																				"nativeSrc": "28081:179:8",
																				"nodeType": "YulIf",
																				"src": "28081:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "28280:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "28280:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "28294:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "28294:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "28302:1:8",
																											"nodeType": "YulLiteral",
																											"src": "28302:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "28290:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "28290:3:8"
																									},
																									"nativeSrc": "28290:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "28290:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "28306:1:8",
																									"nodeType": "YulLiteral",
																									"src": "28306:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "28286:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "28286:3:8"
																							},
																							"nativeSrc": "28286:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "28286:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "28273:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "28273:6:8"
																					},
																					"nativeSrc": "28273:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "28273:36:8"
																				},
																				"nativeSrc": "28273:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "28273:36:8"
																			}
																		]
																	},
																	"nativeSrc": "27701:618:8",
																	"nodeType": "YulCase",
																	"src": "27701:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "27706:1:8",
																		"nodeType": "YulLiteral",
																		"src": "27706:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "28336:222:8",
																		"nodeType": "YulBlock",
																		"src": "28336:222:8",
																		"statements": [
																			{
																				"nativeSrc": "28350:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "28350:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "28363:1:8",
																					"nodeType": "YulLiteral",
																					"src": "28363:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "28354:5:8",
																						"nodeType": "YulTypedName",
																						"src": "28354:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "28387:67:8",
																					"nodeType": "YulBlock",
																					"src": "28387:67:8",
																					"statements": [
																						{
																							"nativeSrc": "28405:35:8",
																							"nodeType": "YulAssignment",
																							"src": "28405:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "28424:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "28424:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "28429:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "28429:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "28420:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "28420:3:8"
																										},
																										"nativeSrc": "28420:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "28420:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "28414:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "28414:5:8"
																								},
																								"nativeSrc": "28414:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "28414:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "28405:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "28405:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "28380:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "28380:6:8"
																				},
																				"nativeSrc": "28377:77:8",
																				"nodeType": "YulIf",
																				"src": "28377:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "28474:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "28474:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "28533:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "28533:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "28540:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "28540:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "28480:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "28480:52:8"
																							},
																							"nativeSrc": "28480:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "28480:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "28467:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "28467:6:8"
																					},
																					"nativeSrc": "28467:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "28467:81:8"
																				},
																				"nativeSrc": "28467:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "28467:81:8"
																			}
																		]
																	},
																	"nativeSrc": "28328:230:8",
																	"nodeType": "YulCase",
																	"src": "28328:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "27681:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "27681:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27689:2:8",
																		"nodeType": "YulLiteral",
																		"src": "27689:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "27678:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "27678:2:8"
																},
																"nativeSrc": "27678:14:8",
																"nodeType": "YulFunctionCall",
																"src": "27678:14:8"
															},
															"nativeSrc": "27671:887:8",
															"nodeType": "YulSwitch",
															"src": "27671:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "27169:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "27250:4:8",
														"nodeType": "YulTypedName",
														"src": "27250:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "27256:3:8",
														"nodeType": "YulTypedName",
														"src": "27256:3:8",
														"type": ""
													}
												],
												"src": "27169:1395:8"
											},
											{
												"body": {
													"nativeSrc": "28611:126:8",
													"nodeType": "YulBlock",
													"src": "28611:126:8",
													"statements": [
														{
															"nativeSrc": "28621:31:8",
															"nodeType": "YulAssignment",
															"src": "28621:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "28646:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "28646:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "28630:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "28630:15:8"
																},
																"nativeSrc": "28630:22:8",
																"nodeType": "YulFunctionCall",
																"src": "28630:22:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "28621:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "28621:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "28680:22:8",
																"nodeType": "YulBlock",
																"src": "28680:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "28682:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "28682:16:8"
																			},
																			"nativeSrc": "28682:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "28682:18:8"
																		},
																		"nativeSrc": "28682:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "28682:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "28667:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "28667:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28674:4:8",
																		"nodeType": "YulLiteral",
																		"src": "28674:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "28664:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "28664:2:8"
																},
																"nativeSrc": "28664:15:8",
																"nodeType": "YulFunctionCall",
																"src": "28664:15:8"
															},
															"nativeSrc": "28661:41:8",
															"nodeType": "YulIf",
															"src": "28661:41:8"
														},
														{
															"nativeSrc": "28711:20:8",
															"nodeType": "YulAssignment",
															"src": "28711:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "28722:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "28722:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28729:1:8",
																		"nodeType": "YulLiteral",
																		"src": "28729:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28718:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "28718:3:8"
																},
																"nativeSrc": "28718:13:8",
																"nodeType": "YulFunctionCall",
																"src": "28718:13:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "28711:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "28711:3:8"
																}
															]
														}
													]
												},
												"name": "increment_t_uint8",
												"nativeSrc": "28570:167:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "28597:5:8",
														"nodeType": "YulTypedName",
														"src": "28597:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "28607:3:8",
														"nodeType": "YulTypedName",
														"src": "28607:3:8",
														"type": ""
													}
												],
												"src": "28570:167:8"
											},
											{
												"body": {
													"nativeSrc": "28787:147:8",
													"nodeType": "YulBlock",
													"src": "28787:147:8",
													"statements": [
														{
															"nativeSrc": "28797:25:8",
															"nodeType": "YulAssignment",
															"src": "28797:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "28820:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "28820:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "28802:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "28802:17:8"
																},
																"nativeSrc": "28802:20:8",
																"nodeType": "YulFunctionCall",
																"src": "28802:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "28797:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "28797:1:8"
																}
															]
														},
														{
															"nativeSrc": "28831:25:8",
															"nodeType": "YulAssignment",
															"src": "28831:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "28854:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "28854:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "28836:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "28836:17:8"
																},
																"nativeSrc": "28836:20:8",
																"nodeType": "YulFunctionCall",
																"src": "28836:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "28831:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "28831:1:8"
																}
															]
														},
														{
															"nativeSrc": "28865:16:8",
															"nodeType": "YulAssignment",
															"src": "28865:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "28876:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "28876:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "28879:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "28879:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28872:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "28872:3:8"
																},
																"nativeSrc": "28872:9:8",
																"nodeType": "YulFunctionCall",
																"src": "28872:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "28865:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "28865:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "28905:22:8",
																"nodeType": "YulBlock",
																"src": "28905:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "28907:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "28907:16:8"
																			},
																			"nativeSrc": "28907:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "28907:18:8"
																		},
																		"nativeSrc": "28907:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "28907:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "28897:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "28897:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "28900:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "28900:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "28894:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "28894:2:8"
																},
																"nativeSrc": "28894:10:8",
																"nodeType": "YulFunctionCall",
																"src": "28894:10:8"
															},
															"nativeSrc": "28891:36:8",
															"nodeType": "YulIf",
															"src": "28891:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "28743:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "28774:1:8",
														"nodeType": "YulTypedName",
														"src": "28774:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "28777:1:8",
														"nodeType": "YulTypedName",
														"src": "28777:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "28783:3:8",
														"nodeType": "YulTypedName",
														"src": "28783:3:8",
														"type": ""
													}
												],
												"src": "28743:191:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_boolt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint8_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint8_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint8_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint8_to_t_uint8(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint8_to_t_uint8(value0, pos) -> updatedPos {\n        abi_encode_t_uint8_to_t_uint8(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint8_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint8[] -> uint8[]\n    function abi_encode_t_array$_t_uint8_$dyn_memory_ptr_to_t_array$_t_uint8_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint8_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint8_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint8_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint8_to_t_uint8(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint8_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint8_$dyn_memory_ptr__to_t_array$_t_uint8_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint8_$dyn_memory_ptr_to_t_array$_t_uint8_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_uint256_t_address__to_t_uint256_t_address__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_9914c8f708f9d185c71b065e1b7086f49300a27304777e454a822b899aef6387(memPtr) {\n\n        mstore(add(memPtr, 0), \"You won!\")\n\n    }\n\n    function abi_encode_t_stringliteral_9914c8f708f9d185c71b065e1b7086f49300a27304777e454a822b899aef6387_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 8)\n        store_literal_in_memory_9914c8f708f9d185c71b065e1b7086f49300a27304777e454a822b899aef6387(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool_t_stringliteral_9914c8f708f9d185c71b065e1b7086f49300a27304777e454a822b899aef6387__to_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9914c8f708f9d185c71b065e1b7086f49300a27304777e454a822b899aef6387_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b6793b6145548c1707973fa6fff27243076d3f64d47e7c1951b141bde79f7643(memPtr) {\n\n        mstore(add(memPtr, 0), \"You lost!\")\n\n    }\n\n    function abi_encode_t_stringliteral_b6793b6145548c1707973fa6fff27243076d3f64d47e7c1951b141bde79f7643_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_b6793b6145548c1707973fa6fff27243076d3f64d47e7c1951b141bde79f7643(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool_t_stringliteral_b6793b6145548c1707973fa6fff27243076d3f64d47e7c1951b141bde79f7643__to_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b6793b6145548c1707973fa6fff27243076d3f64d47e7c1951b141bde79f7643_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Item not found\")\n\n    }\n\n    function abi_encode_t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_storage(value) -> length {\n\n        length := sload(value)\n\n        length := extract_byte_array_length(length)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_storage_to_t_string_storage(slot, src) {\n        if eq(slot, src) { leave }\n\n        let newLen := array_length_t_string_storage(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n            src := array_dataslot_t_string_storage(src)\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, sload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 1)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := sload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := sload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(0x20, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, i)\n        }\n    }\n\n    function abi_encode_tuple_t_uint8_t_string_storage_t_uint256__to_t_uint8_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_e4e32a093f922415ec967630dd3d29e7177524111a79166bb989f4c2dcbc3a12(memPtr) {\n\n        mstore(add(memPtr, 0), \"Bonus already claimed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e4e32a093f922415ec967630dd3d29e7177524111a79166bb989f4c2dcbc3a12_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_e4e32a093f922415ec967630dd3d29e7177524111a79166bb989f4c2dcbc3a12(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e4e32a093f922415ec967630dd3d29e7177524111a79166bb989f4c2dcbc3a12__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e4e32a093f922415ec967630dd3d29e7177524111a79166bb989f4c2dcbc3a12_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function increment_t_uint8(value) -> ret {\n        value := cleanup_t_uint8(value)\n        if eq(value, 0xff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610156575f3560e01c8063715018a6116100c1578063c81d76041161007a578063c81d76041461039c578063ce6019b4146103a6578063d917bd27146103d6578063dd62ed3e14610407578063e3af42e114610437578063f2fde38b1461045357610156565b8063715018a6146102ee57806379cc6790146102f85780638da5cb5b1461031457806395d89b4114610332578063a9059cbb14610350578063af3bcb7d1461038057610156565b8063313ce56711610113578063313ce5671461022e57806340c10f191461024c57806342966c68146102685780634c738909146102845780636d1b229d146102a257806370a08231146102be57610156565b806306fdde031461015a578063095ea7b31461017857806309ceb537146101a85780631072cbea146101c457806318160ddd146101e057806323b872dd146101fe575b5f80fd5b61016261046f565b60405161016f9190611899565b60405180910390f35b610192600480360381019061018d9190611957565b6104ff565b60405161019f91906119af565b60405180910390f35b6101c260048036038101906101bd91906119f2565b610521565b005b6101de60048036038101906101d99190611957565b61067f565b005b6101e86106d9565b6040516101f59190611a3f565b60405180910390f35b61021860048036038101906102139190611a58565b6106e2565b60405161022591906119af565b60405180910390f35b610236610710565b6040516102439190611ac3565b60405180910390f35b61026660048036038101906102619190611957565b610718565b005b610282600480360381019061027d9190611adc565b61072e565b005b61028c610742565b6040516102999190611a3f565b60405180910390f35b6102bc60048036038101906102b79190611adc565b610751565b005b6102d860048036038101906102d39190611b07565b6107a8565b6040516102e59190611a3f565b60405180910390f35b6102f66107ed565b005b610312600480360381019061030d9190611957565b610800565b005b61031c610820565b6040516103299190611b41565b60405180910390f35b61033a610848565b6040516103479190611899565b60405180910390f35b61036a60048036038101906103659190611957565b6108d8565b60405161037791906119af565b60405180910390f35b61039a60048036038101906103959190611b84565b6108fa565b005b6103a4610b2a565b005b6103c060048036038101906103bb9190611b07565b610b81565b6040516103cd9190611c66565b60405180910390f35b6103f060048036038101906103eb9190611b84565b610d85565b6040516103fe929190611c86565b60405180910390f35b610421600480360381019061041c9190611cb4565b610e75565b60405161042e9190611a3f565b60405180910390f35b610451600480360381019061044c9190611e1e565b610ef7565b005b61046d60048036038101906104689190611b07565b610f0d565b005b60606003805461047e90611ea5565b80601f01602080910402602001604051908101604052809291908181526020018280546104aa90611ea5565b80156104f55780601f106104cc576101008083540402835291602001916104f5565b820191905f5260205f20905b8154815290600101906020018083116104d857829003601f168201915b5050505050905090565b5f80610509610f91565b9050610516818585610f98565b600191505092915050565b8061052b336107a8565b101561056c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056390611f1f565b60405180910390fd5b5f600a4233604051602001610582929190611fa2565b604051602081830303815290604052805190602001205f1c6105a49190611ffa565b905060058110151583151503610620576105ca336002846105c59190612057565b610faa565b3373ffffffffffffffffffffffffffffffffffffffff167fd04d9689d8e43bc0bacea67661ef472dcf321f34f08af72f651af30c4c8665878260016040516106139291906120e2565b60405180910390a261067a565b6106298261072e565b3373ffffffffffffffffffffffffffffffffffffffff167fd04d9689d8e43bc0bacea67661ef472dcf321f34f08af72f651af30c4c866587825f604051610671929190612166565b60405180910390a25b505050565b80610689336107a8565b10156106ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c190611f1f565b60405180910390fd5b6106d5338383611029565b5050565b5f600254905090565b5f806106ec610f91565b90506106f9858285611119565b610704858585611029565b60019150509392505050565b5f6012905090565b6107206111ab565b61072a8282610faa565b5050565b61073f610739610f91565b82611232565b50565b5f61074c336107a8565b905090565b8061075b336107a8565b101561079c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079390611f1f565b60405180910390fd5b6107a58161072e565b50565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6107f56111ab565b6107fe5f6112b1565b565b6108128261080c610f91565b83611119565b61081c8282611232565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461085790611ea5565b80601f016020809104026020016040519081016040528092919081815260200182805461088390611ea5565b80156108ce5780601f106108a5576101008083540402835291602001916108ce565b820191905f5260205f20905b8154815290600101906020018083116108b157829003601f168201915b5050505050905090565b5f806108e2610f91565b90506108ef818585611029565b600191505092915050565b5f60065f8360ff1660ff1681526020019081526020015f206002015411610956576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094d906121ea565b60405180910390fd5b60065f8260ff1660ff1681526020019081526020015f206002015461097a336107a8565b10156109bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b290611f1f565b60405180910390fd5b6109de60065f8360ff1660ff1681526020019081526020015f206002015461072e565b60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060065f8360ff1660ff1681526020019081526020015f20908060018154018082558091505060019003905f5260205f2090600302015f909190919091505f8201815f019081610a6a91906123ba565b50600182015f9054906101000a900460ff16816001015f6101000a81548160ff021916908360ff1602179055506002820154816002015550503373ffffffffffffffffffffffffffffffffffffffff167f8bedd141782c49139782bd92bd7a760a0bcb544ffecfd2b25f00366fae06598e8260065f8560ff1660ff1681526020019081526020015f205f0160065f8660ff1660ff1681526020019081526020015f2060020154604051610b1f93929190612520565b60405180910390a250565b5f610b34336107a8565b14610b74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6b906125a6565b60405180910390fd5b610b7f336032610faa565b565b60605f60075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b82821015610cc5578382905f5260205f2090600302016040518060600160405290815f82018054610c1090611ea5565b80601f0160208091040260200160405190810160405280929190818152602001828054610c3c90611ea5565b8015610c875780601f10610c5e57610100808354040283529160200191610c87565b820191905f5260205f20905b815481529060010190602001808311610c6a57829003601f168201915b50505050508152602001600182015f9054906101000a900460ff1660ff1660ff16815260200160028201548152505081526020019060010190610be0565b5050505090505f815190505f8167ffffffffffffffff811115610ceb57610cea611cfa565b5b604051908082528060200260200182016040528015610d195781602001602082028036833780820191505090505b5090505f5b82811015610d7957838181518110610d3957610d386125c4565b5b602002602001015160200151828281518110610d5857610d576125c4565b5b602002602001019060ff16908160ff16815250508080600101915050610d1e565b50809350505050919050565b60605f8060065f8560ff1660ff1681526020019081526020015f206040518060600160405290815f82018054610dba90611ea5565b80601f0160208091040260200160405190810160405280929190818152602001828054610de690611ea5565b8015610e315780601f10610e0857610100808354040283529160200191610e31565b820191905f5260205f20905b815481529060010190602001808311610e1457829003601f168201915b50505050508152602001600182015f9054906101000a900460ff1660ff1660ff1681526020016002820154815250509050805f015181604001519250925050915091565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610eff6111ab565b610f098282611374565b5050565b610f156111ab565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f85575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610f7c9190611b41565b60405180910390fd5b610f8e816112b1565b50565b5f33905090565b610fa58383836001611441565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361101a575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110119190611b41565b60405180910390fd5b6110255f8383611610565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611099575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016110909190611b41565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611109575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016111009190611b41565b60405180910390fd5b611114838383611610565b505050565b5f6111248484610e75565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146111a55781811015611196578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161118d939291906125f1565b60405180910390fd5b6111a484848484035f611441565b5b50505050565b6111b3610f91565b73ffffffffffffffffffffffffffffffffffffffff166111d1610820565b73ffffffffffffffffffffffffffffffffffffffff1614611230576111f4610f91565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016112279190611b41565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112a2575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112999190611b41565b60405180910390fd5b6112ad825f83611610565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b604051806060016040528083815260200160085f9054906101000a900460ff1660ff1681526020018281525060065f60085f9054906101000a900460ff1660ff1660ff1681526020019081526020015f205f820151815f0190816113d89190612626565b506020820151816001015f6101000a81548160ff021916908360ff1602179055506040820151816002015590505060085f81819054906101000a900460ff1680929190611424906126f5565b91906101000a81548160ff021916908360ff160217905550505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036114b1575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016114a89190611b41565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611521575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016115189190611b41565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561160a578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516116019190611a3f565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611660578060025f828254611654919061271d565b9250508190555061172e565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156116e9578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016116e0939291906125f1565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611775578060025f82825403925050819055506117bf565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161181c9190611a3f565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61186b82611829565b6118758185611833565b9350611885818560208601611843565b61188e81611851565b840191505092915050565b5f6020820190508181035f8301526118b18184611861565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6118f3826118ca565b9050919050565b611903816118e9565b811461190d575f80fd5b50565b5f8135905061191e816118fa565b92915050565b5f819050919050565b61193681611924565b8114611940575f80fd5b50565b5f813590506119518161192d565b92915050565b5f806040838503121561196d5761196c6118c2565b5b5f61197a85828601611910565b925050602061198b85828601611943565b9150509250929050565b5f8115159050919050565b6119a981611995565b82525050565b5f6020820190506119c25f8301846119a0565b92915050565b6119d181611995565b81146119db575f80fd5b50565b5f813590506119ec816119c8565b92915050565b5f8060408385031215611a0857611a076118c2565b5b5f611a15858286016119de565b9250506020611a2685828601611943565b9150509250929050565b611a3981611924565b82525050565b5f602082019050611a525f830184611a30565b92915050565b5f805f60608486031215611a6f57611a6e6118c2565b5b5f611a7c86828701611910565b9350506020611a8d86828701611910565b9250506040611a9e86828701611943565b9150509250925092565b5f60ff82169050919050565b611abd81611aa8565b82525050565b5f602082019050611ad65f830184611ab4565b92915050565b5f60208284031215611af157611af06118c2565b5b5f611afe84828501611943565b91505092915050565b5f60208284031215611b1c57611b1b6118c2565b5b5f611b2984828501611910565b91505092915050565b611b3b816118e9565b82525050565b5f602082019050611b545f830184611b32565b92915050565b611b6381611aa8565b8114611b6d575f80fd5b50565b5f81359050611b7e81611b5a565b92915050565b5f60208284031215611b9957611b986118c2565b5b5f611ba684828501611b70565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611be181611aa8565b82525050565b5f611bf28383611bd8565b60208301905092915050565b5f602082019050919050565b5f611c1482611baf565b611c1e8185611bb9565b9350611c2983611bc9565b805f5b83811015611c59578151611c408882611be7565b9750611c4b83611bfe565b925050600181019050611c2c565b5085935050505092915050565b5f6020820190508181035f830152611c7e8184611c0a565b905092915050565b5f6040820190508181035f830152611c9e8185611861565b9050611cad6020830184611a30565b9392505050565b5f8060408385031215611cca57611cc96118c2565b5b5f611cd785828601611910565b9250506020611ce885828601611910565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611d3082611851565b810181811067ffffffffffffffff82111715611d4f57611d4e611cfa565b5b80604052505050565b5f611d616118b9565b9050611d6d8282611d27565b919050565b5f67ffffffffffffffff821115611d8c57611d8b611cfa565b5b611d9582611851565b9050602081019050919050565b828183375f83830152505050565b5f611dc2611dbd84611d72565b611d58565b905082815260208101848484011115611dde57611ddd611cf6565b5b611de9848285611da2565b509392505050565b5f82601f830112611e0557611e04611cf2565b5b8135611e15848260208601611db0565b91505092915050565b5f8060408385031215611e3457611e336118c2565b5b5f83013567ffffffffffffffff811115611e5157611e506118c6565b5b611e5d85828601611df1565b9250506020611e6e85828601611943565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611ebc57607f821691505b602082108103611ecf57611ece611e78565b5b50919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f611f09601483611833565b9150611f1482611ed5565b602082019050919050565b5f6020820190508181035f830152611f3681611efd565b9050919050565b5f819050919050565b611f57611f5282611924565b611f3d565b82525050565b5f8160601b9050919050565b5f611f7382611f5d565b9050919050565b5f611f8482611f69565b9050919050565b611f9c611f97826118e9565b611f7a565b82525050565b5f611fad8285611f46565b602082019150611fbd8284611f8b565b6014820191508190509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61200482611924565b915061200f83611924565b92508261201f5761201e611fcd565b5b828206905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61206182611924565b915061206c83611924565b925082820261207a81611924565b915082820484148315176120915761209061202a565b5b5092915050565b7f596f7520776f6e210000000000000000000000000000000000000000000000005f82015250565b5f6120cc600883611833565b91506120d782612098565b602082019050919050565b5f6060820190506120f55f830185611a30565b61210260208301846119a0565b8181036040830152612113816120c0565b90509392505050565b7f596f75206c6f73742100000000000000000000000000000000000000000000005f82015250565b5f612150600983611833565b915061215b8261211c565b602082019050919050565b5f6060820190506121795f830185611a30565b61218660208301846119a0565b818103604083015261219781612144565b90509392505050565b7f4974656d206e6f7420666f756e640000000000000000000000000000000000005f82015250565b5f6121d4600e83611833565b91506121df826121a0565b602082019050919050565b5f6020820190508181035f830152612201816121c8565b9050919050565b5f8154905061221681611ea5565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026122797fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261223e565b612283868361223e565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6122be6122b96122b484611924565b61229b565b611924565b9050919050565b5f819050919050565b6122d7836122a4565b6122eb6122e3826122c5565b84845461224a565b825550505050565b5f90565b6122ff6122f3565b61230a8184846122ce565b505050565b5b8181101561232d576123225f826122f7565b600181019050612310565b5050565b601f821115612372576123438161221d565b61234c8461222f565b8101602085101561235b578190505b61236f6123678561222f565b83018261230f565b50505b505050565b5f82821c905092915050565b5f6123925f1984600802612377565b1980831691505092915050565b5f6123aa8383612383565b9150826002028217905092915050565b8181036123c857505061249d565b6123d182612208565b67ffffffffffffffff8111156123ea576123e9611cfa565b5b6123f48254611ea5565b6123ff828285612331565b5f601f83116001811461242c575f841561241a578287015490505b612424858261239f565b865550612496565b601f19841661243a8761221d565b96506124458661221d565b5f5b8281101561246c57848901548255600182019150600185019450602081019050612447565b868310156124895784890154612485601f891682612383565b8355505b6001600288020188555050505b5050505050505b565b5f81546124ab81611ea5565b6124b58186611833565b9450600182165f81146124cf57600181146124e557612517565b60ff198316865281151560200286019350612517565b6124ee8561221d565b5f5b8381101561250f578154818901526001820191506020810190506124f0565b808801955050505b50505092915050565b5f6060820190506125335f830186611ab4565b8181036020830152612545818561249f565b90506125546040830184611a30565b949350505050565b7f426f6e757320616c726561647920636c61696d656400000000000000000000005f82015250565b5f612590601583611833565b915061259b8261255c565b602082019050919050565b5f6020820190508181035f8301526125bd81612584565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f6060820190506126045f830186611b32565b6126116020830185611a30565b61261e6040830184611a30565b949350505050565b61262f82611829565b67ffffffffffffffff81111561264857612647611cfa565b5b6126528254611ea5565b61265d828285612331565b5f60209050601f83116001811461268e575f841561267c578287015190505b612686858261239f565b8655506126ed565b601f19841661269c8661221d565b5f5b828110156126c35784890151825560018201915060208501945060208101905061269e565b868310156126e057848901516126dc601f891682612383565b8355505b6001600288020188555050505b505050505050565b5f6126ff82611aa8565b915060ff82036127125761271161202a565b5b600182019050919050565b5f61272782611924565b915061273283611924565b925082820190508082111561274a5761274961202a565b5b9291505056fea2646970667358221220875994130a6625aee2e303869d3548a2c8d70075d41367daad7272bff048ce0e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x156 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xC81D7604 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xC81D7604 EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0xCE6019B4 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xD917BD27 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0xE3AF42E1 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x453 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0xAF3BCB7D EQ PUSH2 0x380 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x4C738909 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x6D1B229D EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BE JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x9CEB537 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x1072CBEA EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FE JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x162 PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x19F2 JUMP JUMPDEST PUSH2 0x521 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0x67F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E8 PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x236 PUSH2 0x710 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x1AC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0x718 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x282 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x1ADC JUMP JUMPDEST PUSH2 0x72E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28C PUSH2 0x742 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x1ADC JUMP JUMPDEST PUSH2 0x751 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x1B07 JUMP JUMPDEST PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F6 PUSH2 0x7ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x312 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0x800 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31C PUSH2 0x820 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33A PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x395 SWAP2 SWAP1 PUSH2 0x1B84 JUMP JUMPDEST PUSH2 0x8FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A4 PUSH2 0xB2A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0x1B07 JUMP JUMPDEST PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0x1C66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0x1B84 JUMP JUMPDEST PUSH2 0xD85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FE SWAP3 SWAP2 SWAP1 PUSH2 0x1C86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x421 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41C SWAP2 SWAP1 PUSH2 0x1CB4 JUMP JUMPDEST PUSH2 0xE75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x451 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x1E1E JUMP JUMPDEST PUSH2 0xEF7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x468 SWAP2 SWAP1 PUSH2 0x1B07 JUMP JUMPDEST PUSH2 0xF0D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x47E SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4AA SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4F5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4CC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4F5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4D8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x509 PUSH2 0xF91 JUMP JUMPDEST SWAP1 POP PUSH2 0x516 DUP2 DUP6 DUP6 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x52B CALLER PUSH2 0x7A8 JUMP JUMPDEST LT ISZERO PUSH2 0x56C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x563 SWAP1 PUSH2 0x1F1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA TIMESTAMP CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x582 SWAP3 SWAP2 SWAP1 PUSH2 0x1FA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH0 SHR PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0x1FFA JUMP JUMPDEST SWAP1 POP PUSH1 0x5 DUP2 LT ISZERO ISZERO DUP4 ISZERO ISZERO SUB PUSH2 0x620 JUMPI PUSH2 0x5CA CALLER PUSH1 0x2 DUP5 PUSH2 0x5C5 SWAP2 SWAP1 PUSH2 0x2057 JUMP JUMPDEST PUSH2 0xFAA JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD04D9689D8E43BC0BACEA67661EF472DCF321F34F08AF72F651AF30C4C866587 DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x613 SWAP3 SWAP2 SWAP1 PUSH2 0x20E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x67A JUMP JUMPDEST PUSH2 0x629 DUP3 PUSH2 0x72E JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD04D9689D8E43BC0BACEA67661EF472DCF321F34F08AF72F651AF30C4C866587 DUP3 PUSH0 PUSH1 0x40 MLOAD PUSH2 0x671 SWAP3 SWAP2 SWAP1 PUSH2 0x2166 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x689 CALLER PUSH2 0x7A8 JUMP JUMPDEST LT ISZERO PUSH2 0x6CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C1 SWAP1 PUSH2 0x1F1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6D5 CALLER DUP4 DUP4 PUSH2 0x1029 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6EC PUSH2 0xF91 JUMP JUMPDEST SWAP1 POP PUSH2 0x6F9 DUP6 DUP3 DUP6 PUSH2 0x1119 JUMP JUMPDEST PUSH2 0x704 DUP6 DUP6 DUP6 PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x720 PUSH2 0x11AB JUMP JUMPDEST PUSH2 0x72A DUP3 DUP3 PUSH2 0xFAA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x73F PUSH2 0x739 PUSH2 0xF91 JUMP JUMPDEST DUP3 PUSH2 0x1232 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x74C CALLER PUSH2 0x7A8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x75B CALLER PUSH2 0x7A8 JUMP JUMPDEST LT ISZERO PUSH2 0x79C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x793 SWAP1 PUSH2 0x1F1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A5 DUP2 PUSH2 0x72E JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7F5 PUSH2 0x11AB JUMP JUMPDEST PUSH2 0x7FE PUSH0 PUSH2 0x12B1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x812 DUP3 PUSH2 0x80C PUSH2 0xF91 JUMP JUMPDEST DUP4 PUSH2 0x1119 JUMP JUMPDEST PUSH2 0x81C DUP3 DUP3 PUSH2 0x1232 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x857 SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x883 SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8CE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8A5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8CE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8B1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8E2 PUSH2 0xF91 JUMP JUMPDEST SWAP1 POP PUSH2 0x8EF DUP2 DUP6 DUP6 PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD GT PUSH2 0x956 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94D SWAP1 PUSH2 0x21EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x97A CALLER PUSH2 0x7A8 JUMP JUMPDEST LT ISZERO PUSH2 0x9BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B2 SWAP1 PUSH2 0x1F1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9DE PUSH1 0x6 PUSH0 DUP4 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x72E JUMP JUMPDEST PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x6 PUSH0 DUP4 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0xA6A SWAP2 SWAP1 PUSH2 0x23BA JUMP JUMPDEST POP PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP3 ADD SLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BEDD141782C49139782BD92BD7A760A0BCB544FFECFD2B25F00366FAE06598E DUP3 PUSH1 0x6 PUSH0 DUP6 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH1 0x6 PUSH0 DUP7 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xB1F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2520 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH2 0xB34 CALLER PUSH2 0x7A8 JUMP JUMPDEST EQ PUSH2 0xB74 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6B SWAP1 PUSH2 0x25A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB7F CALLER PUSH1 0x32 PUSH2 0xFAA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xCC5 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD DUP1 SLOAD PUSH2 0xC10 SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC3C SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC87 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC5E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC87 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC6A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xBE0 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH0 DUP2 MLOAD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCEB JUMPI PUSH2 0xCEA PUSH2 0x1CFA JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD19 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xD79 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xD39 JUMPI PUSH2 0xD38 PUSH2 0x25C4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD58 JUMPI PUSH2 0xD57 PUSH2 0x25C4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0xFF AND SWAP1 DUP2 PUSH1 0xFF AND DUP2 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xD1E JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 PUSH1 0x6 PUSH0 DUP6 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD DUP1 SLOAD PUSH2 0xDBA SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDE6 SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE31 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE08 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE31 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE14 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH0 ADD MLOAD DUP2 PUSH1 0x40 ADD MLOAD SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEFF PUSH2 0x11AB JUMP JUMPDEST PUSH2 0xF09 DUP3 DUP3 PUSH2 0x1374 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xF15 PUSH2 0x11AB JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF85 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF7C SWAP2 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF8E DUP2 PUSH2 0x12B1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFA5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1441 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x101A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1011 SWAP2 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1025 PUSH0 DUP4 DUP4 PUSH2 0x1610 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1099 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1090 SWAP2 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1109 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1100 SWAP2 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1114 DUP4 DUP4 DUP4 PUSH2 0x1610 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1124 DUP5 DUP5 PUSH2 0xE75 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x11A5 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1196 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11A4 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1441 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x11B3 PUSH2 0xF91 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11D1 PUSH2 0x820 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1230 JUMPI PUSH2 0x11F4 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1227 SWAP2 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12A2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1299 SWAP2 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12AD DUP3 PUSH0 DUP4 PUSH2 0x1610 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x13D8 SWAP2 SWAP1 PUSH2 0x2626 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x8 PUSH0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1424 SWAP1 PUSH2 0x26F5 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14B1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14A8 SWAP2 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1521 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1518 SWAP2 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x160A JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1601 SWAP2 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1660 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1654 SWAP2 SWAP1 PUSH2 0x271D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x172E JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x16E9 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1775 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x17BF JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x181C SWAP2 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x186B DUP3 PUSH2 0x1829 JUMP JUMPDEST PUSH2 0x1875 DUP2 DUP6 PUSH2 0x1833 JUMP JUMPDEST SWAP4 POP PUSH2 0x1885 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1843 JUMP JUMPDEST PUSH2 0x188E DUP2 PUSH2 0x1851 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18B1 DUP2 DUP5 PUSH2 0x1861 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18F3 DUP3 PUSH2 0x18CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1903 DUP2 PUSH2 0x18E9 JUMP JUMPDEST DUP2 EQ PUSH2 0x190D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x191E DUP2 PUSH2 0x18FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1936 DUP2 PUSH2 0x1924 JUMP JUMPDEST DUP2 EQ PUSH2 0x1940 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1951 DUP2 PUSH2 0x192D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x196D JUMPI PUSH2 0x196C PUSH2 0x18C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x197A DUP6 DUP3 DUP7 ADD PUSH2 0x1910 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x198B DUP6 DUP3 DUP7 ADD PUSH2 0x1943 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19A9 DUP2 PUSH2 0x1995 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19C2 PUSH0 DUP4 ADD DUP5 PUSH2 0x19A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19D1 DUP2 PUSH2 0x1995 JUMP JUMPDEST DUP2 EQ PUSH2 0x19DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19EC DUP2 PUSH2 0x19C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A08 JUMPI PUSH2 0x1A07 PUSH2 0x18C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A15 DUP6 DUP3 DUP7 ADD PUSH2 0x19DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A26 DUP6 DUP3 DUP7 ADD PUSH2 0x1943 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A39 DUP2 PUSH2 0x1924 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A52 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A6F JUMPI PUSH2 0x1A6E PUSH2 0x18C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A7C DUP7 DUP3 DUP8 ADD PUSH2 0x1910 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A8D DUP7 DUP3 DUP8 ADD PUSH2 0x1910 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A9E DUP7 DUP3 DUP8 ADD PUSH2 0x1943 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ABD DUP2 PUSH2 0x1AA8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AD6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AB4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AF1 JUMPI PUSH2 0x1AF0 PUSH2 0x18C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AFE DUP5 DUP3 DUP6 ADD PUSH2 0x1943 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B1C JUMPI PUSH2 0x1B1B PUSH2 0x18C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B29 DUP5 DUP3 DUP6 ADD PUSH2 0x1910 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B3B DUP2 PUSH2 0x18E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B54 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B63 DUP2 PUSH2 0x1AA8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B6D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B7E DUP2 PUSH2 0x1B5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B99 JUMPI PUSH2 0x1B98 PUSH2 0x18C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BA6 DUP5 DUP3 DUP6 ADD PUSH2 0x1B70 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BE1 DUP2 PUSH2 0x1AA8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BF2 DUP4 DUP4 PUSH2 0x1BD8 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C14 DUP3 PUSH2 0x1BAF JUMP JUMPDEST PUSH2 0x1C1E DUP2 DUP6 PUSH2 0x1BB9 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C29 DUP4 PUSH2 0x1BC9 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C59 JUMPI DUP2 MLOAD PUSH2 0x1C40 DUP9 DUP3 PUSH2 0x1BE7 JUMP JUMPDEST SWAP8 POP PUSH2 0x1C4B DUP4 PUSH2 0x1BFE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1C2C JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C7E DUP2 DUP5 PUSH2 0x1C0A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C9E DUP2 DUP6 PUSH2 0x1861 JUMP JUMPDEST SWAP1 POP PUSH2 0x1CAD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A30 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CCA JUMPI PUSH2 0x1CC9 PUSH2 0x18C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CD7 DUP6 DUP3 DUP7 ADD PUSH2 0x1910 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CE8 DUP6 DUP3 DUP7 ADD PUSH2 0x1910 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1D30 DUP3 PUSH2 0x1851 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1D4F JUMPI PUSH2 0x1D4E PUSH2 0x1CFA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D61 PUSH2 0x18B9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D6D DUP3 DUP3 PUSH2 0x1D27 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D8C JUMPI PUSH2 0x1D8B PUSH2 0x1CFA JUMP JUMPDEST JUMPDEST PUSH2 0x1D95 DUP3 PUSH2 0x1851 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1DC2 PUSH2 0x1DBD DUP5 PUSH2 0x1D72 JUMP JUMPDEST PUSH2 0x1D58 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1DDE JUMPI PUSH2 0x1DDD PUSH2 0x1CF6 JUMP JUMPDEST JUMPDEST PUSH2 0x1DE9 DUP5 DUP3 DUP6 PUSH2 0x1DA2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E05 JUMPI PUSH2 0x1E04 PUSH2 0x1CF2 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E15 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1DB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E34 JUMPI PUSH2 0x1E33 PUSH2 0x18C2 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E51 JUMPI PUSH2 0x1E50 PUSH2 0x18C6 JUMP JUMPDEST JUMPDEST PUSH2 0x1E5D DUP6 DUP3 DUP7 ADD PUSH2 0x1DF1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E6E DUP6 DUP3 DUP7 ADD PUSH2 0x1943 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1EBC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1ECF JUMPI PUSH2 0x1ECE PUSH2 0x1E78 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F09 PUSH1 0x14 DUP4 PUSH2 0x1833 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F14 DUP3 PUSH2 0x1ED5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F36 DUP2 PUSH2 0x1EFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F57 PUSH2 0x1F52 DUP3 PUSH2 0x1924 JUMP JUMPDEST PUSH2 0x1F3D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F73 DUP3 PUSH2 0x1F5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F84 DUP3 PUSH2 0x1F69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F9C PUSH2 0x1F97 DUP3 PUSH2 0x18E9 JUMP JUMPDEST PUSH2 0x1F7A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FAD DUP3 DUP6 PUSH2 0x1F46 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x1FBD DUP3 DUP5 PUSH2 0x1F8B JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2004 DUP3 PUSH2 0x1924 JUMP JUMPDEST SWAP2 POP PUSH2 0x200F DUP4 PUSH2 0x1924 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x201F JUMPI PUSH2 0x201E PUSH2 0x1FCD JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2061 DUP3 PUSH2 0x1924 JUMP JUMPDEST SWAP2 POP PUSH2 0x206C DUP4 PUSH2 0x1924 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x207A DUP2 PUSH2 0x1924 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2091 JUMPI PUSH2 0x2090 PUSH2 0x202A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F7520776F6E21000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20CC PUSH1 0x8 DUP4 PUSH2 0x1833 JUMP JUMPDEST SWAP2 POP PUSH2 0x20D7 DUP3 PUSH2 0x2098 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x20F5 PUSH0 DUP4 ADD DUP6 PUSH2 0x1A30 JUMP JUMPDEST PUSH2 0x2102 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19A0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2113 DUP2 PUSH2 0x20C0 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x596F75206C6F7374210000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2150 PUSH1 0x9 DUP4 PUSH2 0x1833 JUMP JUMPDEST SWAP2 POP PUSH2 0x215B DUP3 PUSH2 0x211C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2179 PUSH0 DUP4 ADD DUP6 PUSH2 0x1A30 JUMP JUMPDEST PUSH2 0x2186 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19A0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2197 DUP2 PUSH2 0x2144 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4974656D206E6F7420666F756E64000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21D4 PUSH1 0xE DUP4 PUSH2 0x1833 JUMP JUMPDEST SWAP2 POP PUSH2 0x21DF DUP3 PUSH2 0x21A0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2201 DUP2 PUSH2 0x21C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SLOAD SWAP1 POP PUSH2 0x2216 DUP2 PUSH2 0x1EA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2279 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x223E JUMP JUMPDEST PUSH2 0x2283 DUP7 DUP4 PUSH2 0x223E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22BE PUSH2 0x22B9 PUSH2 0x22B4 DUP5 PUSH2 0x1924 JUMP JUMPDEST PUSH2 0x229B JUMP JUMPDEST PUSH2 0x1924 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22D7 DUP4 PUSH2 0x22A4 JUMP JUMPDEST PUSH2 0x22EB PUSH2 0x22E3 DUP3 PUSH2 0x22C5 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x224A JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x22FF PUSH2 0x22F3 JUMP JUMPDEST PUSH2 0x230A DUP2 DUP5 DUP5 PUSH2 0x22CE JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x232D JUMPI PUSH2 0x2322 PUSH0 DUP3 PUSH2 0x22F7 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2310 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2372 JUMPI PUSH2 0x2343 DUP2 PUSH2 0x221D JUMP JUMPDEST PUSH2 0x234C DUP5 PUSH2 0x222F JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x235B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x236F PUSH2 0x2367 DUP6 PUSH2 0x222F JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x230F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2392 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2377 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23AA DUP4 DUP4 PUSH2 0x2383 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0x23C8 JUMPI POP POP PUSH2 0x249D JUMP JUMPDEST PUSH2 0x23D1 DUP3 PUSH2 0x2208 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23EA JUMPI PUSH2 0x23E9 PUSH2 0x1CFA JUMP JUMPDEST JUMPDEST PUSH2 0x23F4 DUP3 SLOAD PUSH2 0x1EA5 JUMP JUMPDEST PUSH2 0x23FF DUP3 DUP3 DUP6 PUSH2 0x2331 JUMP JUMPDEST PUSH0 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x242C JUMPI PUSH0 DUP5 ISZERO PUSH2 0x241A JUMPI DUP3 DUP8 ADD SLOAD SWAP1 POP JUMPDEST PUSH2 0x2424 DUP6 DUP3 PUSH2 0x239F JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2496 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x243A DUP8 PUSH2 0x221D JUMP JUMPDEST SWAP7 POP PUSH2 0x2445 DUP7 PUSH2 0x221D JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x246C JUMPI DUP5 DUP10 ADD SLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2447 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2489 JUMPI DUP5 DUP10 ADD SLOAD PUSH2 0x2485 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2383 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH0 DUP2 SLOAD PUSH2 0x24AB DUP2 PUSH2 0x1EA5 JUMP JUMPDEST PUSH2 0x24B5 DUP2 DUP7 PUSH2 0x1833 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH0 DUP2 EQ PUSH2 0x24CF JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x24E5 JUMPI PUSH2 0x2517 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x2517 JUMP JUMPDEST PUSH2 0x24EE DUP6 PUSH2 0x221D JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x250F JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x24F0 JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2533 PUSH0 DUP4 ADD DUP7 PUSH2 0x1AB4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2545 DUP2 DUP6 PUSH2 0x249F JUMP JUMPDEST SWAP1 POP PUSH2 0x2554 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A30 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x426F6E757320616C726561647920636C61696D65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2590 PUSH1 0x15 DUP4 PUSH2 0x1833 JUMP JUMPDEST SWAP2 POP PUSH2 0x259B DUP3 PUSH2 0x255C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25BD DUP2 PUSH2 0x2584 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2604 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B32 JUMP JUMPDEST PUSH2 0x2611 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A30 JUMP JUMPDEST PUSH2 0x261E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A30 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x262F DUP3 PUSH2 0x1829 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2648 JUMPI PUSH2 0x2647 PUSH2 0x1CFA JUMP JUMPDEST JUMPDEST PUSH2 0x2652 DUP3 SLOAD PUSH2 0x1EA5 JUMP JUMPDEST PUSH2 0x265D DUP3 DUP3 DUP6 PUSH2 0x2331 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x268E JUMPI PUSH0 DUP5 ISZERO PUSH2 0x267C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2686 DUP6 DUP3 PUSH2 0x239F JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x26ED JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x269C DUP7 PUSH2 0x221D JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x26C3 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x269E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x26E0 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x26DC PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2383 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x26FF DUP3 PUSH2 0x1AA8 JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 SUB PUSH2 0x2712 JUMPI PUSH2 0x2711 PUSH2 0x202A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2727 DUP3 PUSH2 0x1924 JUMP JUMPDEST SWAP2 POP PUSH2 0x2732 DUP4 PUSH2 0x1924 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x274A JUMPI PUSH2 0x2749 PUSH2 0x202A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 MSIZE SWAP5 SGT EXP PUSH7 0x25AEE2E303869D CALLDATALOAD BASEFEE LOG2 0xC8 0xD7 STOP PUSH22 0xD41367DAAD7272BFF048CE0E64736F6C634300081A00 CALLER ",
							"sourceMap": "243:3972:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2231:585:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1607:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3144:97:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1457:93:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;618:87:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3918:101:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4065:148;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1021:158:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2859:378:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1869:145;;;:::i;:::-;;3296:361;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3701:174;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3846:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2068:114:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:89:2;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;2231:585:7:-;2353:9;2328:21;2338:10;2328:9;:21::i;:::-;:34;;2320:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2406:20;2497:2;2464:15;2481:10;2447:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2437:56;;;;;;2429:65;;:70;;;;:::i;:::-;2406:93;;2553:1;2538:12;:16;2514:41;;:19;:41;;;2510:300;;2571:32;2577:10;2601:1;2589:9;:13;;;;:::i;:::-;2571:5;:32::i;:::-;2634:10;2622:55;;;2646:12;2660:4;2622:55;;;;;;;:::i;:::-;;;;;;;;2510:300;;;2708:15;2713:9;2708:4;:15::i;:::-;2754:10;2742:57;;;2766:12;2780:5;2742:57;;;;;;;:::i;:::-;;;;;;;;2510:300;2310:506;2231:585;;:::o;1607:198::-;1717:6;1692:21;1702:10;1692:9;:21::i;:::-;:31;;1684:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1758:40;1768:10;1780:9;1791:6;1758:9;:40::i;:::-;1607:198;;:::o;3144:97:2:-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;1457:93:7:-;1531:13:0;:11;:13::i;:::-;1526:17:7::1;1532:2;1536:6;1526:5;:17::i;:::-;1457:93:::0;;:::o;618:87:4:-;672:26;678:12;:10;:12::i;:::-;692:5;672;:26::i;:::-;618:87;:::o;3918:101:7:-;3965:7;3991:21;4001:10;3991:9;:21::i;:::-;3984:28;;3918:101;:::o;4065:148::-;4153:6;4128:21;4138:10;4128:9;:21::i;:::-;:31;;4120:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;4194:12;4199:6;4194:4;:12::i;:::-;4065:148;:::o;3299:116:2:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1021:158:4:-;1096:45;1112:7;1121:12;:10;:12::i;:::-;1135:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;2859:378:7:-;2944:1;2922:5;:13;2928:6;2922:13;;;;;;;;;;;;;;;:19;;;:23;2914:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;3007:5;:13;3013:6;3007:13;;;;;;;;;;;;;;;:19;;;2982:21;2992:10;2982:9;:21::i;:::-;:44;;2974:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;3062:25;3067:5;:13;3073:6;3067:13;;;;;;;;;;;;;;;:19;;;3062:4;:25::i;:::-;3097:11;:23;3109:10;3097:23;;;;;;;;;;;;;;;3126:5;:13;3132:6;3126:13;;;;;;;;;;;;;;;3097:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3170:10;3156:74;;;3182:6;3190:5;:13;3196:6;3190:13;;;;;;;;;;;;;;;:18;;3210:5;:13;3216:6;3210:13;;;;;;;;;;;;;;;:19;;;3156:74;;;;;;;;:::i;:::-;;;;;;;;2859:378;:::o;1869:145::-;1949:1;1924:21;1934:10;1924:9;:21::i;:::-;:26;1916:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;1986:21;1992:10;2004:2;1986:5;:21::i;:::-;1869:145::o;3296:361::-;3355:14;3381:23;3407:11;:17;3419:4;3407:17;;;;;;;;;;;;;;;3381:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3434:14;3451:9;:16;3434:33;;3478:22;3515:6;3503:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3478:44;;3537:9;3532:94;3556:6;3552:1;:10;3532:94;;;3596:9;3606:1;3596:12;;;;;;;;:::i;:::-;;;;;;;;:19;;;3583:7;3591:1;3583:10;;;;;;;;:::i;:::-;;;;;;;:32;;;;;;;;;;;3564:3;;;;;;;3532:94;;;;3643:7;3636:14;;;;;3296:361;;;:::o;3701:174::-;3762:13;3777:7;3796:16;3815:5;:13;3821:6;3815:13;;;;;;;;;;;;;;;3796:32;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3846:4;:9;;;3857:4;:10;;;3838:30;;;;;3701:174;;;:::o;3846:140:2:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;2068:114:7:-;1531:13:0;:11;:13::i;:::-;2154:21:7::1;2163:4;2169:5;2154:8;:21::i;:::-;2068:114:::0;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;8247:206:2:-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1278:150:7:-;1370:29;;;;;;;;1375:4;1370:29;;;;1381:10;;;;;;;;;;;1370:29;;;;;;1393:5;1370:29;;;1350:5;:17;1356:10;;;;;;;;;;;1350:17;;;;;;;;;;;;;;;:49;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1409:10;;:12;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;1278:150;;:::o;9949:432:2:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1242:75::-;1275:6;1308:2;1302:9;1292:19;;1242:75;:::o;1323:117::-;1432:1;1429;1422:12;1446:117;1555:1;1552;1545:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:116::-;3409:21;3424:5;3409:21;:::i;:::-;3402:5;3399:32;3389:60;;3445:1;3442;3435:12;3389:60;3339:116;:::o;3461:133::-;3504:5;3542:6;3529:20;3520:29;;3558:30;3582:5;3558:30;:::i;:::-;3461:133;;;;:::o;3600:468::-;3665:6;3673;3722:2;3710:9;3701:7;3697:23;3693:32;3690:119;;;3728:79;;:::i;:::-;3690:119;3848:1;3873:50;3915:7;3906:6;3895:9;3891:22;3873:50;:::i;:::-;3863:60;;3819:114;3972:2;3998:53;4043:7;4034:6;4023:9;4019:22;3998:53;:::i;:::-;3988:63;;3943:118;3600:468;;;;;:::o;4074:118::-;4161:24;4179:5;4161:24;:::i;:::-;4156:3;4149:37;4074:118;;:::o;4198:222::-;4291:4;4329:2;4318:9;4314:18;4306:26;;4342:71;4410:1;4399:9;4395:17;4386:6;4342:71;:::i;:::-;4198:222;;;;:::o;4426:619::-;4503:6;4511;4519;4568:2;4556:9;4547:7;4543:23;4539:32;4536:119;;;4574:79;;:::i;:::-;4536:119;4694:1;4719:53;4764:7;4755:6;4744:9;4740:22;4719:53;:::i;:::-;4709:63;;4665:117;4821:2;4847:53;4892:7;4883:6;4872:9;4868:22;4847:53;:::i;:::-;4837:63;;4792:118;4949:2;4975:53;5020:7;5011:6;5000:9;4996:22;4975:53;:::i;:::-;4965:63;;4920:118;4426:619;;;;;:::o;5051:86::-;5086:7;5126:4;5119:5;5115:16;5104:27;;5051:86;;;:::o;5143:112::-;5226:22;5242:5;5226:22;:::i;:::-;5221:3;5214:35;5143:112;;:::o;5261:214::-;5350:4;5388:2;5377:9;5373:18;5365:26;;5401:67;5465:1;5454:9;5450:17;5441:6;5401:67;:::i;:::-;5261:214;;;;:::o;5481:329::-;5540:6;5589:2;5577:9;5568:7;5564:23;5560:32;5557:119;;;5595:79;;:::i;:::-;5557:119;5715:1;5740:53;5785:7;5776:6;5765:9;5761:22;5740:53;:::i;:::-;5730:63;;5686:117;5481:329;;;;:::o;5816:::-;5875:6;5924:2;5912:9;5903:7;5899:23;5895:32;5892:119;;;5930:79;;:::i;:::-;5892:119;6050:1;6075:53;6120:7;6111:6;6100:9;6096:22;6075:53;:::i;:::-;6065:63;;6021:117;5816:329;;;;:::o;6151:118::-;6238:24;6256:5;6238:24;:::i;:::-;6233:3;6226:37;6151:118;;:::o;6275:222::-;6368:4;6406:2;6395:9;6391:18;6383:26;;6419:71;6487:1;6476:9;6472:17;6463:6;6419:71;:::i;:::-;6275:222;;;;:::o;6503:118::-;6574:22;6590:5;6574:22;:::i;:::-;6567:5;6564:33;6554:61;;6611:1;6608;6601:12;6554:61;6503:118;:::o;6627:135::-;6671:5;6709:6;6696:20;6687:29;;6725:31;6750:5;6725:31;:::i;:::-;6627:135;;;;:::o;6768:325::-;6825:6;6874:2;6862:9;6853:7;6849:23;6845:32;6842:119;;;6880:79;;:::i;:::-;6842:119;7000:1;7025:51;7068:7;7059:6;7048:9;7044:22;7025:51;:::i;:::-;7015:61;;6971:115;6768:325;;;;:::o;7099:112::-;7164:6;7198:5;7192:12;7182:22;;7099:112;;;:::o;7217:182::-;7314:11;7348:6;7343:3;7336:19;7388:4;7383:3;7379:14;7364:29;;7217:182;;;;:::o;7405:130::-;7470:4;7493:3;7485:11;;7523:4;7518:3;7514:14;7506:22;;7405:130;;;:::o;7541:102::-;7614:22;7630:5;7614:22;:::i;:::-;7609:3;7602:35;7541:102;;:::o;7649:171::-;7714:10;7735:42;7773:3;7765:6;7735:42;:::i;:::-;7809:4;7804:3;7800:14;7786:28;;7649:171;;;;:::o;7826:111::-;7894:4;7926;7921:3;7917:14;7909:22;;7826:111;;;:::o;7969:716::-;8084:3;8113:52;8159:5;8113:52;:::i;:::-;8181:84;8258:6;8253:3;8181:84;:::i;:::-;8174:91;;8289:54;8337:5;8289:54;:::i;:::-;8366:7;8397:1;8382:278;8407:6;8404:1;8401:13;8382:278;;;8483:6;8477:13;8510:59;8565:3;8550:13;8510:59;:::i;:::-;8503:66;;8592:58;8643:6;8592:58;:::i;:::-;8582:68;;8442:218;8429:1;8426;8422:9;8417:14;;8382:278;;;8386:14;8676:3;8669:10;;8089:596;;;7969:716;;;;:::o;8691:365::-;8830:4;8868:2;8857:9;8853:18;8845:26;;8917:9;8911:4;8907:20;8903:1;8892:9;8888:17;8881:47;8945:104;9044:4;9035:6;8945:104;:::i;:::-;8937:112;;8691:365;;;;:::o;9062:423::-;9203:4;9241:2;9230:9;9226:18;9218:26;;9290:9;9284:4;9280:20;9276:1;9265:9;9261:17;9254:47;9318:78;9391:4;9382:6;9318:78;:::i;:::-;9310:86;;9406:72;9474:2;9463:9;9459:18;9450:6;9406:72;:::i;:::-;9062:423;;;;;:::o;9491:474::-;9559:6;9567;9616:2;9604:9;9595:7;9591:23;9587:32;9584:119;;;9622:79;;:::i;:::-;9584:119;9742:1;9767:53;9812:7;9803:6;9792:9;9788:22;9767:53;:::i;:::-;9757:63;;9713:117;9869:2;9895:53;9940:7;9931:6;9920:9;9916:22;9895:53;:::i;:::-;9885:63;;9840:118;9491:474;;;;;:::o;9971:117::-;10080:1;10077;10070:12;10094:117;10203:1;10200;10193:12;10217:180;10265:77;10262:1;10255:88;10362:4;10359:1;10352:15;10386:4;10383:1;10376:15;10403:281;10486:27;10508:4;10486:27;:::i;:::-;10478:6;10474:40;10616:6;10604:10;10601:22;10580:18;10568:10;10565:34;10562:62;10559:88;;;10627:18;;:::i;:::-;10559:88;10667:10;10663:2;10656:22;10446:238;10403:281;;:::o;10690:129::-;10724:6;10751:20;;:::i;:::-;10741:30;;10780:33;10808:4;10800:6;10780:33;:::i;:::-;10690:129;;;:::o;10825:308::-;10887:4;10977:18;10969:6;10966:30;10963:56;;;10999:18;;:::i;:::-;10963:56;11037:29;11059:6;11037:29;:::i;:::-;11029:37;;11121:4;11115;11111:15;11103:23;;10825:308;;;:::o;11139:148::-;11237:6;11232:3;11227;11214:30;11278:1;11269:6;11264:3;11260:16;11253:27;11139:148;;;:::o;11293:425::-;11371:5;11396:66;11412:49;11454:6;11412:49;:::i;:::-;11396:66;:::i;:::-;11387:75;;11485:6;11478:5;11471:21;11523:4;11516:5;11512:16;11561:3;11552:6;11547:3;11543:16;11540:25;11537:112;;;11568:79;;:::i;:::-;11537:112;11658:54;11705:6;11700:3;11695;11658:54;:::i;:::-;11377:341;11293:425;;;;;:::o;11738:340::-;11794:5;11843:3;11836:4;11828:6;11824:17;11820:27;11810:122;;11851:79;;:::i;:::-;11810:122;11968:6;11955:20;11993:79;12068:3;12060:6;12053:4;12045:6;12041:17;11993:79;:::i;:::-;11984:88;;11800:278;11738:340;;;;:::o;12084:654::-;12162:6;12170;12219:2;12207:9;12198:7;12194:23;12190:32;12187:119;;;12225:79;;:::i;:::-;12187:119;12373:1;12362:9;12358:17;12345:31;12403:18;12395:6;12392:30;12389:117;;;12425:79;;:::i;:::-;12389:117;12530:63;12585:7;12576:6;12565:9;12561:22;12530:63;:::i;:::-;12520:73;;12316:287;12642:2;12668:53;12713:7;12704:6;12693:9;12689:22;12668:53;:::i;:::-;12658:63;;12613:118;12084:654;;;;;:::o;12744:180::-;12792:77;12789:1;12782:88;12889:4;12886:1;12879:15;12913:4;12910:1;12903:15;12930:320;12974:6;13011:1;13005:4;13001:12;12991:22;;13058:1;13052:4;13048:12;13079:18;13069:81;;13135:4;13127:6;13123:17;13113:27;;13069:81;13197:2;13189:6;13186:14;13166:18;13163:38;13160:84;;13216:18;;:::i;:::-;13160:84;12981:269;12930:320;;;:::o;13256:170::-;13396:22;13392:1;13384:6;13380:14;13373:46;13256:170;:::o;13432:366::-;13574:3;13595:67;13659:2;13654:3;13595:67;:::i;:::-;13588:74;;13671:93;13760:3;13671:93;:::i;:::-;13789:2;13784:3;13780:12;13773:19;;13432:366;;;:::o;13804:419::-;13970:4;14008:2;13997:9;13993:18;13985:26;;14057:9;14051:4;14047:20;14043:1;14032:9;14028:17;14021:47;14085:131;14211:4;14085:131;:::i;:::-;14077:139;;13804:419;;;:::o;14229:79::-;14268:7;14297:5;14286:16;;14229:79;;;:::o;14314:157::-;14419:45;14439:24;14457:5;14439:24;:::i;:::-;14419:45;:::i;:::-;14414:3;14407:58;14314:157;;:::o;14477:94::-;14510:8;14558:5;14554:2;14550:14;14529:35;;14477:94;;;:::o;14577:::-;14616:7;14645:20;14659:5;14645:20;:::i;:::-;14634:31;;14577:94;;;:::o;14677:100::-;14716:7;14745:26;14765:5;14745:26;:::i;:::-;14734:37;;14677:100;;;:::o;14783:157::-;14888:45;14908:24;14926:5;14908:24;:::i;:::-;14888:45;:::i;:::-;14883:3;14876:58;14783:157;;:::o;14946:397::-;15086:3;15101:75;15172:3;15163:6;15101:75;:::i;:::-;15201:2;15196:3;15192:12;15185:19;;15214:75;15285:3;15276:6;15214:75;:::i;:::-;15314:2;15309:3;15305:12;15298:19;;15334:3;15327:10;;14946:397;;;;;:::o;15349:180::-;15397:77;15394:1;15387:88;15494:4;15491:1;15484:15;15518:4;15515:1;15508:15;15535:176;15567:1;15584:20;15602:1;15584:20;:::i;:::-;15579:25;;15618:20;15636:1;15618:20;:::i;:::-;15613:25;;15657:1;15647:35;;15662:18;;:::i;:::-;15647:35;15703:1;15700;15696:9;15691:14;;15535:176;;;;:::o;15717:180::-;15765:77;15762:1;15755:88;15862:4;15859:1;15852:15;15886:4;15883:1;15876:15;15903:410;15943:7;15966:20;15984:1;15966:20;:::i;:::-;15961:25;;16000:20;16018:1;16000:20;:::i;:::-;15995:25;;16055:1;16052;16048:9;16077:30;16095:11;16077:30;:::i;:::-;16066:41;;16256:1;16247:7;16243:15;16240:1;16237:22;16217:1;16210:9;16190:83;16167:139;;16286:18;;:::i;:::-;16167:139;15951:362;15903:410;;;;:::o;16319:158::-;16459:10;16455:1;16447:6;16443:14;16436:34;16319:158;:::o;16483:365::-;16625:3;16646:66;16710:1;16705:3;16646:66;:::i;:::-;16639:73;;16721:93;16810:3;16721:93;:::i;:::-;16839:2;16834:3;16830:12;16823:19;;16483:365;;;:::o;16854:627::-;17070:4;17108:2;17097:9;17093:18;17085:26;;17121:71;17189:1;17178:9;17174:17;17165:6;17121:71;:::i;:::-;17202:66;17264:2;17253:9;17249:18;17240:6;17202:66;:::i;:::-;17315:9;17309:4;17305:20;17300:2;17289:9;17285:18;17278:48;17343:131;17469:4;17343:131;:::i;:::-;17335:139;;16854:627;;;;;:::o;17487:159::-;17627:11;17623:1;17615:6;17611:14;17604:35;17487:159;:::o;17652:365::-;17794:3;17815:66;17879:1;17874:3;17815:66;:::i;:::-;17808:73;;17890:93;17979:3;17890:93;:::i;:::-;18008:2;18003:3;17999:12;17992:19;;17652:365;;;:::o;18023:627::-;18239:4;18277:2;18266:9;18262:18;18254:26;;18290:71;18358:1;18347:9;18343:17;18334:6;18290:71;:::i;:::-;18371:66;18433:2;18422:9;18418:18;18409:6;18371:66;:::i;:::-;18484:9;18478:4;18474:20;18469:2;18458:9;18454:18;18447:48;18512:131;18638:4;18512:131;:::i;:::-;18504:139;;18023:627;;;;;:::o;18656:164::-;18796:16;18792:1;18784:6;18780:14;18773:40;18656:164;:::o;18826:366::-;18968:3;18989:67;19053:2;19048:3;18989:67;:::i;:::-;18982:74;;19065:93;19154:3;19065:93;:::i;:::-;19183:2;19178:3;19174:12;19167:19;;18826:366;;;:::o;19198:419::-;19364:4;19402:2;19391:9;19387:18;19379:26;;19451:9;19445:4;19441:20;19437:1;19426:9;19422:17;19415:47;19479:131;19605:4;19479:131;:::i;:::-;19471:139;;19198:419;;;:::o;19623:149::-;19672:6;19706:5;19700:12;19690:22;;19732:33;19758:6;19732:33;:::i;:::-;19722:43;;19623:149;;;:::o;19778:141::-;19827:4;19850:3;19842:11;;19873:3;19870:1;19863:14;19907:4;19904:1;19894:18;19886:26;;19778:141;;;:::o;19925:93::-;19962:6;20009:2;20004;19997:5;19993:14;19989:23;19979:33;;19925:93;;;:::o;20024:107::-;20068:8;20118:5;20112:4;20108:16;20087:37;;20024:107;;;;:::o;20137:393::-;20206:6;20256:1;20244:10;20240:18;20279:97;20309:66;20298:9;20279:97;:::i;:::-;20397:39;20427:8;20416:9;20397:39;:::i;:::-;20385:51;;20469:4;20465:9;20458:5;20454:21;20445:30;;20518:4;20508:8;20504:19;20497:5;20494:30;20484:40;;20213:317;;20137:393;;;;;:::o;20536:60::-;20564:3;20585:5;20578:12;;20536:60;;;:::o;20602:142::-;20652:9;20685:53;20703:34;20712:24;20730:5;20712:24;:::i;:::-;20703:34;:::i;:::-;20685:53;:::i;:::-;20672:66;;20602:142;;;:::o;20750:75::-;20793:3;20814:5;20807:12;;20750:75;;;:::o;20831:269::-;20941:39;20972:7;20941:39;:::i;:::-;21002:91;21051:41;21075:16;21051:41;:::i;:::-;21043:6;21036:4;21030:11;21002:91;:::i;:::-;20996:4;20989:105;20907:193;20831:269;;;:::o;21106:73::-;21151:3;21106:73;:::o;21185:189::-;21262:32;;:::i;:::-;21303:65;21361:6;21353;21347:4;21303:65;:::i;:::-;21238:136;21185:189;;:::o;21380:186::-;21440:120;21457:3;21450:5;21447:14;21440:120;;;21511:39;21548:1;21541:5;21511:39;:::i;:::-;21484:1;21477:5;21473:13;21464:22;;21440:120;;;21380:186;;:::o;21572:543::-;21673:2;21668:3;21665:11;21662:446;;;21707:38;21739:5;21707:38;:::i;:::-;21791:29;21809:10;21791:29;:::i;:::-;21781:8;21777:44;21974:2;21962:10;21959:18;21956:49;;;21995:8;21980:23;;21956:49;22018:80;22074:22;22092:3;22074:22;:::i;:::-;22064:8;22060:37;22047:11;22018:80;:::i;:::-;21677:431;;21662:446;21572:543;;;:::o;22121:117::-;22175:8;22225:5;22219:4;22215:16;22194:37;;22121:117;;;;:::o;22244:169::-;22288:6;22321:51;22369:1;22365:6;22357:5;22354:1;22350:13;22321:51;:::i;:::-;22317:56;22402:4;22396;22392:15;22382:25;;22295:118;22244:169;;;;:::o;22418:295::-;22494:4;22640:29;22665:3;22659:4;22640:29;:::i;:::-;22632:37;;22702:3;22699:1;22695:11;22689:4;22686:21;22678:29;;22418:295;;;;:::o;22718:1451::-;22829:3;22823:4;22820:13;22817:26;;22836:5;;;;22817:26;22867:34;22897:3;22867:34;:::i;:::-;22966:18;22958:6;22955:30;22952:56;;;22988:18;;:::i;:::-;22952:56;23032:38;23064:4;23058:11;23032:38;:::i;:::-;23117:67;23177:6;23169;23163:4;23117:67;:::i;:::-;23211:1;23240:2;23232:6;23229:14;23257:1;23252:672;;;;23968:1;23985:6;23982:77;;;24034:9;24029:3;24025:19;24019:26;24010:35;;23982:77;24085:67;24145:6;24138:5;24085:67;:::i;:::-;24079:4;24072:81;23941:222;23222:941;;23252:672;23304:4;23300:9;23292:6;23288:22;23330:36;23362:3;23330:36;:::i;:::-;23323:43;;23393:37;23425:4;23393:37;:::i;:::-;23452:1;23466:207;23480:7;23477:1;23474:14;23466:207;;;23559:9;23554:3;23550:19;23544:26;23536:6;23529:42;23610:1;23602:6;23598:14;23588:24;;23657:1;23646:9;23642:17;23629:30;;23503:4;23500:1;23496:12;23491:17;;23466:207;;;23701:6;23692:7;23689:19;23686:179;;;23759:9;23754:3;23750:19;23744:26;23802:48;23844:4;23836:6;23832:17;23821:9;23802:48;:::i;:::-;23794:6;23787:64;23709:156;23686:179;23911:1;23907;23899:6;23895:14;23891:22;23885:4;23878:36;23259:665;;;23222:941;;22807:1362;;;22718:1451;;;:::o;24199:831::-;24284:3;24321:5;24315:12;24350:36;24376:9;24350:36;:::i;:::-;24402:71;24466:6;24461:3;24402:71;:::i;:::-;24395:78;;24504:1;24493:9;24489:17;24520:1;24515:164;;;;24693:1;24688:336;;;;24482:542;;24515:164;24599:4;24595:9;24584;24580:25;24575:3;24568:38;24659:6;24652:14;24645:22;24639:4;24635:33;24630:3;24626:43;24619:50;;24515:164;;24688:336;24755:38;24787:5;24755:38;:::i;:::-;24815:1;24829:154;24843:6;24840:1;24837:13;24829:154;;;24917:7;24911:14;24907:1;24902:3;24898:11;24891:35;24967:1;24958:7;24954:15;24943:26;;24865:4;24862:1;24858:12;24853:17;;24829:154;;;25012:1;25007:3;25003:11;24996:18;;24695:329;;24482:542;;24288:742;;24199:831;;;;:::o;25036:519::-;25198:4;25236:2;25225:9;25221:18;25213:26;;25249:67;25313:1;25302:9;25298:17;25289:6;25249:67;:::i;:::-;25363:9;25357:4;25353:20;25348:2;25337:9;25333:18;25326:48;25391:75;25461:4;25452:6;25391:75;:::i;:::-;25383:83;;25476:72;25544:2;25533:9;25529:18;25520:6;25476:72;:::i;:::-;25036:519;;;;;;:::o;25561:171::-;25701:23;25697:1;25689:6;25685:14;25678:47;25561:171;:::o;25738:366::-;25880:3;25901:67;25965:2;25960:3;25901:67;:::i;:::-;25894:74;;25977:93;26066:3;25977:93;:::i;:::-;26095:2;26090:3;26086:12;26079:19;;25738:366;;;:::o;26110:419::-;26276:4;26314:2;26303:9;26299:18;26291:26;;26363:9;26357:4;26353:20;26349:1;26338:9;26334:17;26327:47;26391:131;26517:4;26391:131;:::i;:::-;26383:139;;26110:419;;;:::o;26535:180::-;26583:77;26580:1;26573:88;26680:4;26677:1;26670:15;26704:4;26701:1;26694:15;26721:442;26870:4;26908:2;26897:9;26893:18;26885:26;;26921:71;26989:1;26978:9;26974:17;26965:6;26921:71;:::i;:::-;27002:72;27070:2;27059:9;27055:18;27046:6;27002:72;:::i;:::-;27084;27152:2;27141:9;27137:18;27128:6;27084:72;:::i;:::-;26721:442;;;;;;:::o;27169:1395::-;27286:37;27319:3;27286:37;:::i;:::-;27388:18;27380:6;27377:30;27374:56;;;27410:18;;:::i;:::-;27374:56;27454:38;27486:4;27480:11;27454:38;:::i;:::-;27539:67;27599:6;27591;27585:4;27539:67;:::i;:::-;27633:1;27657:4;27644:17;;27689:2;27681:6;27678:14;27706:1;27701:618;;;;28363:1;28380:6;28377:77;;;28429:9;28424:3;28420:19;28414:26;28405:35;;28377:77;28480:67;28540:6;28533:5;28480:67;:::i;:::-;28474:4;28467:81;28336:222;27671:887;;27701:618;27753:4;27749:9;27741:6;27737:22;27787:37;27819:4;27787:37;:::i;:::-;27846:1;27860:208;27874:7;27871:1;27868:14;27860:208;;;27953:9;27948:3;27944:19;27938:26;27930:6;27923:42;28004:1;27996:6;27992:14;27982:24;;28051:2;28040:9;28036:18;28023:31;;27897:4;27894:1;27890:12;27885:17;;27860:208;;;28096:6;28087:7;28084:19;28081:179;;;28154:9;28149:3;28145:19;28139:26;28197:48;28239:4;28231:6;28227:17;28216:9;28197:48;:::i;:::-;28189:6;28182:64;28104:156;28081:179;28306:1;28302;28294:6;28290:14;28286:22;28280:4;28273:36;27708:611;;;27671:887;;27261:1303;;;27169:1395;;:::o;28570:167::-;28607:3;28630:22;28646:5;28630:22;:::i;:::-;28621:31;;28674:4;28667:5;28664:15;28661:41;;28682:18;;:::i;:::-;28661:41;28729:1;28722:5;28718:13;28711:20;;28570:167;;;:::o;28743:191::-;28783:3;28802:20;28820:1;28802:20;:::i;:::-;28797:25;;28836:20;28854:1;28836:20;:::i;:::-;28831:25;;28879:1;28876;28872:9;28865:16;;28900:3;28897:1;28894:10;28891:36;;;28907:18;;:::i;:::-;28891:36;28743:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2023600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addItemToStore(string,uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2962",
								"betOnRandomNumber(bool,uint256)": "infinite",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"burnTokens(uint256)": "infinite",
								"decimals()": "361",
								"getItemDetails(uint8)": "infinite",
								"getMyBalance()": "2650",
								"getUserItems(address)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2582",
								"purchaseItem(uint8)": "infinite",
								"redeemWelcomeBonus()": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2544",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"transferToken(address,uint256)": "infinite"
							},
							"internal": {
								"_addItem(string memory,uint256)": "infinite",
								"_initializeItems()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 243,
									"end": 4215,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 243,
									"end": 4215,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 243,
									"end": 4215,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 703,
									"end": 923,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 703,
									"end": 923,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 703,
									"end": 923,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 703,
									"end": 923,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 703,
									"end": 923,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 703,
									"end": 923,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 703,
									"end": 923,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 703,
									"end": 923,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 703,
									"end": 923,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 703,
									"end": 923,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 703,
									"end": 923,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 703,
									"end": 923,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 703,
									"end": 923,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 703,
									"end": 923,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 703,
									"end": 923,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 703,
									"end": 923,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 703,
									"end": 923,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 703,
									"end": 923,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 703,
									"end": 923,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 703,
									"end": 923,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 703,
									"end": 923,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 703,
									"end": 923,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 703,
									"end": 923,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 703,
									"end": 923,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 703,
									"end": 923,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 703,
									"end": 923,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 703,
									"end": 923,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 703,
									"end": 923,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 703,
									"end": 923,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 703,
									"end": 923,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 703,
									"end": 923,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 703,
									"end": 923,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 703,
									"end": 923,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 703,
									"end": 923,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 703,
									"end": 923,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 790,
									"end": 802,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "446567656E000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "44474E0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 814,
									"end": 845,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 832,
									"end": 844,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 814,
									"end": 831,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 814,
									"end": 831,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 814,
									"end": 831,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 814,
									"end": 845,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 814,
									"end": 845,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 814,
									"end": 845,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 814,
									"end": 845,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 814,
									"end": 845,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 855,
									"end": 888,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 860,
									"end": 872,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 874,
									"end": 887,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 855,
									"end": 859,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 855,
									"end": 859,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 855,
									"end": 859,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 855,
									"end": 888,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 855,
									"end": 888,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 855,
									"end": 888,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 855,
									"end": 888,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 855,
									"end": 888,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 898,
									"end": 916,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 898,
									"end": 914,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 898,
									"end": 914,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 898,
									"end": 914,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 898,
									"end": 916,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 898,
									"end": 916,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 898,
									"end": 916,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 898,
									"end": 916,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 898,
									"end": 916,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 703,
									"end": 923,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 703,
									"end": 923,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 243,
									"end": 4215,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 243,
									"end": 4215,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2543,
									"end": 2758,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 2543,
									"end": 2758,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2647,
									"end": 2648,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2627,
									"end": 2649,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2627,
									"end": 2649,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2627,
									"end": 2635,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2627,
									"end": 2649,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2627,
									"end": 2649,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2627,
									"end": 2649,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2623,
									"end": 2714,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 2623,
									"end": 2714,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2700,
									"end": 2701,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2672,
									"end": 2703,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2623,
									"end": 2714,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 2623,
									"end": 2714,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2723,
									"end": 2751,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 2742,
									"end": 2750,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2723,
									"end": 2741,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2723,
									"end": 2741,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2723,
									"end": 2741,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 2723,
									"end": 2751,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2723,
									"end": 2751,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 2723,
									"end": 2751,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2723,
									"end": 2751,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 2723,
									"end": 2751,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2543,
									"end": 2758,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2543,
									"end": 2758,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1457,
									"end": 1550,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1457,
									"end": 1550,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1543,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1532,
									"end": 1534,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1536,
									"end": 1542,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1531,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 1526,
									"end": 1531,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1526,
									"end": 1531,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1543,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1526,
									"end": 1543,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1543,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1543,
									"modifierDepth": 1,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1526,
									"end": 1543,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1457,
									"end": 1550,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1457,
									"end": 1550,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1457,
									"end": 1550,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 976,
									"end": 1232,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 976,
									"end": 1232,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "PUSH",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "PUSH",
									"source": 7,
									"value": "4E6F76696365204E6176696761746F7200000000000000000000000000000000"
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1052,
									"end": 1055,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1023,
									"end": 1031,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1023,
									"end": 1031,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1023,
									"end": 1031,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1023,
									"end": 1056,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 1098,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1066,
									"end": 1098,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1066,
									"end": 1098,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 1098,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 1098,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1066,
									"end": 1098,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 1098,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1066,
									"end": 1098,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 1098,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 1098,
									"name": "PUSH",
									"source": 7,
									"value": "F"
								},
								{
									"begin": 1066,
									"end": 1098,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 1098,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 1098,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1066,
									"end": 1098,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 1098,
									"name": "PUSH",
									"source": 7,
									"value": "4D7974686963204D6176657269636B0000000000000000000000000000000000"
								},
								{
									"begin": 1066,
									"end": 1098,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 1098,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 1098,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1094,
									"end": 1097,
									"name": "PUSH",
									"source": 7,
									"value": "2BC"
								},
								{
									"begin": 1066,
									"end": 1074,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1066,
									"end": 1074,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1066,
									"end": 1074,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 1098,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1066,
									"end": 1098,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 1098,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 1098,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1066,
									"end": 1098,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1108,
									"end": 1143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1108,
									"end": 1143,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1108,
									"end": 1143,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1108,
									"end": 1143,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1108,
									"end": 1143,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1108,
									"end": 1143,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1108,
									"end": 1143,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1108,
									"end": 1143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1108,
									"end": 1143,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1108,
									"end": 1143,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1108,
									"end": 1143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1108,
									"end": 1143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1108,
									"end": 1143,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1108,
									"end": 1143,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1108,
									"end": 1143,
									"name": "PUSH",
									"source": 7,
									"value": "43656C65737469616C2043727573686572000000000000000000000000000000"
								},
								{
									"begin": 1108,
									"end": 1143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1108,
									"end": 1143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1108,
									"end": 1143,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1138,
									"end": 1142,
									"name": "PUSH",
									"source": 7,
									"value": "4B0"
								},
								{
									"begin": 1108,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1108,
									"end": 1116,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1108,
									"end": 1116,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1108,
									"end": 1143,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1108,
									"end": 1143,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1108,
									"end": 1143,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1108,
									"end": 1143,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1108,
									"end": 1143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1153,
									"end": 1181,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1153,
									"end": 1181,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1153,
									"end": 1181,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1153,
									"end": 1181,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1153,
									"end": 1181,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1153,
									"end": 1181,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1153,
									"end": 1181,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1153,
									"end": 1181,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1153,
									"end": 1181,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1153,
									"end": 1181,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 1153,
									"end": 1181,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1153,
									"end": 1181,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1153,
									"end": 1181,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1153,
									"end": 1181,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1153,
									"end": 1181,
									"name": "PUSH",
									"source": 7,
									"value": "41737472616C2041636500000000000000000000000000000000000000000000"
								},
								{
									"begin": 1153,
									"end": 1181,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1153,
									"end": 1181,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1153,
									"end": 1181,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1176,
									"end": 1180,
									"name": "PUSH",
									"source": 7,
									"value": "898"
								},
								{
									"begin": 1153,
									"end": 1161,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1153,
									"end": 1161,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1153,
									"end": 1161,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1153,
									"end": 1181,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1153,
									"end": 1181,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1153,
									"end": 1181,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1153,
									"end": 1181,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1153,
									"end": 1181,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1225,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1191,
									"end": 1225,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1191,
									"end": 1225,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1225,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1225,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1191,
									"end": 1225,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1225,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1191,
									"end": 1225,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1225,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1225,
									"name": "PUSH",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 1191,
									"end": 1225,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1225,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1225,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1191,
									"end": 1225,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1225,
									"name": "PUSH",
									"source": 7,
									"value": "446976696E6520446F6D696E61746F7200000000000000000000000000000000"
								},
								{
									"begin": 1191,
									"end": 1225,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1225,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1225,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1220,
									"end": 1224,
									"name": "PUSH",
									"source": 7,
									"value": "960"
								},
								{
									"begin": 1191,
									"end": 1199,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1191,
									"end": 1199,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1191,
									"end": 1199,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1225,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1191,
									"end": 1225,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1225,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1225,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1191,
									"end": 1225,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 976,
									"end": 1232,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1796,
									"end": 1958,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1796,
									"end": 1958,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 1866,
									"end": 1876,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 1866,
									"end": 1876,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1866,
									"end": 1876,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1866,
									"end": 1878,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "tag",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 1855,
									"end": 1860,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 1855,
									"end": 1860,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1855,
									"end": 1860,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1862,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "tag",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 1928,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 1928,
									"end": 1938,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1928,
									"end": 1938,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1928,
									"end": 1940,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "tag",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 0,
									"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1901,
									"end": 1941,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "tag",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "tag",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1796,
									"end": 1958,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1278,
									"end": 1428,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1278,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1399,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1370,
									"end": 1399,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1399,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1399,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1370,
									"end": 1399,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1399,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1370,
									"end": 1399,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1399,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1375,
									"end": 1379,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1399,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1399,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1399,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1370,
									"end": 1399,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1381,
									"end": 1391,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1381,
									"end": 1391,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1381,
									"end": 1391,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1381,
									"end": 1391,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1381,
									"end": 1391,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1381,
									"end": 1391,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1381,
									"end": 1391,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1381,
									"end": 1391,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1381,
									"end": 1391,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1381,
									"end": 1391,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1381,
									"end": 1391,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1399,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1370,
									"end": 1399,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1399,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1399,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1399,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1370,
									"end": 1399,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1393,
									"end": 1398,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1399,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1399,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1399,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1355,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1350,
									"end": 1367,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1356,
									"end": 1366,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1356,
									"end": 1366,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1356,
									"end": 1366,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1356,
									"end": 1366,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1356,
									"end": 1366,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1356,
									"end": 1366,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1356,
									"end": 1366,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1356,
									"end": 1366,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1356,
									"end": 1366,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1356,
									"end": 1366,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1356,
									"end": 1366,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1367,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1350,
									"end": 1367,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1367,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1350,
									"end": 1367,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1367,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1367,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1367,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1350,
									"end": 1367,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1367,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1367,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1367,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1367,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1350,
									"end": 1367,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1367,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1350,
									"end": 1367,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1350,
									"end": 1399,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1399,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1419,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1409,
									"end": 1419,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 1409,
									"end": 1421,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1421,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1278,
									"end": 1428,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1278,
									"end": 1428,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1278,
									"end": 1428,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "tag",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1684,
									"end": 1691,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1703,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1703,
									"end": 1716,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1638,
									"end": 1723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "67"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "68"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "71"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "68"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "72"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "72"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "74"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "75"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 2,
									"value": "74"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "115"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 8,
									"value": "115"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1284,
									"end": 1290,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1292,
									"end": 1298,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1341,
									"end": 1343,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1329,
									"end": 1338,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1320,
									"end": 1327,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1316,
									"end": 1339,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1312,
									"end": 1344,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 1347,
									"end": 1426,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "tag",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "tag",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1467,
									"end": 1468,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 1548,
									"end": 1555,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1545,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1528,
									"end": 1537,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1524,
									"end": 1546,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 1492,
									"end": 1556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "tag",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1438,
									"end": 1566,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1605,
									"end": 1607,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 1687,
									"end": 1694,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1667,
									"end": 1676,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1663,
									"end": 1685,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 1631,
									"end": 1695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "tag",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1576,
									"end": 1705,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "tag",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1770,
									"end": 1776,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1804,
									"end": 1809,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1798,
									"end": 1810,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1788,
									"end": 1810,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1788,
									"end": 1810,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1718,
									"end": 1817,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1823,
									"end": 2003,
									"name": "tag",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 1823,
									"end": 2003,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1871,
									"end": 1948,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1868,
									"end": 1869,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1861,
									"end": 1949,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1968,
									"end": 1972,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1965,
									"end": 1966,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1958,
									"end": 1973,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1992,
									"end": 1996,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1989,
									"end": 1990,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1982,
									"end": 1997,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2009,
									"end": 2189,
									"name": "tag",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 2009,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2057,
									"end": 2134,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2054,
									"end": 2055,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2047,
									"end": 2135,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2154,
									"end": 2158,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 2151,
									"end": 2152,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2144,
									"end": 2159,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2178,
									"end": 2182,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2175,
									"end": 2176,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2168,
									"end": 2183,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "tag",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2239,
									"end": 2245,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2276,
									"end": 2277,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2270,
									"end": 2274,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2266,
									"end": 2278,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2256,
									"end": 2278,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2256,
									"end": 2278,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2323,
									"end": 2324,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2317,
									"end": 2321,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2313,
									"end": 2325,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2344,
									"end": 2362,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2334,
									"end": 2415,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 2334,
									"end": 2415,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2400,
									"end": 2404,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 2392,
									"end": 2398,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2388,
									"end": 2405,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2378,
									"end": 2405,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2378,
									"end": 2405,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2334,
									"end": 2415,
									"name": "tag",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 2334,
									"end": 2415,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2462,
									"end": 2464,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2454,
									"end": 2460,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2451,
									"end": 2465,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2431,
									"end": 2449,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2428,
									"end": 2466,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2425,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 2425,
									"end": 2509,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2481,
									"end": 2499,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 2481,
									"end": 2499,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 2481,
									"end": 2499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2481,
									"end": 2499,
									"name": "tag",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 2481,
									"end": 2499,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2425,
									"end": 2509,
									"name": "tag",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 2425,
									"end": 2509,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2246,
									"end": 2515,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2195,
									"end": 2515,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "tag",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2570,
									"end": 2574,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2593,
									"end": 2596,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2585,
									"end": 2596,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2585,
									"end": 2596,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2616,
									"end": 2619,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2613,
									"end": 2614,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2606,
									"end": 2620,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2650,
									"end": 2654,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2647,
									"end": 2648,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2637,
									"end": 2655,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 2629,
									"end": 2655,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2629,
									"end": 2655,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2521,
									"end": 2662,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "tag",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2705,
									"end": 2711,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2752,
									"end": 2754,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2747,
									"end": 2749,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2740,
									"end": 2745,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2736,
									"end": 2750,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2732,
									"end": 2755,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2722,
									"end": 2755,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2722,
									"end": 2755,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2668,
									"end": 2761,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "tag",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2811,
									"end": 2819,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2861,
									"end": 2866,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2855,
									"end": 2859,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2851,
									"end": 2867,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2830,
									"end": 2867,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2830,
									"end": 2867,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2767,
									"end": 2874,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "tag",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2949,
									"end": 2955,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2999,
									"end": 3000,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 2987,
									"end": 2997,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2983,
									"end": 3001,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3022,
									"end": 3119,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 3052,
									"end": 3118,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3041,
									"end": 3050,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3022,
									"end": 3119,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 3022,
									"end": 3119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3022,
									"end": 3119,
									"name": "tag",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 3022,
									"end": 3119,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3140,
									"end": 3179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "144"
								},
								{
									"begin": 3170,
									"end": 3178,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3159,
									"end": 3168,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3140,
									"end": 3179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 3140,
									"end": 3179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3140,
									"end": 3179,
									"name": "tag",
									"source": 8,
									"value": "144"
								},
								{
									"begin": 3140,
									"end": 3179,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3128,
									"end": 3179,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 3128,
									"end": 3179,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3212,
									"end": 3216,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3208,
									"end": 3217,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3201,
									"end": 3206,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3197,
									"end": 3218,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3218,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3218,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3261,
									"end": 3265,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3251,
									"end": 3259,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3247,
									"end": 3266,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3240,
									"end": 3245,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3237,
									"end": 3267,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3227,
									"end": 3267,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3227,
									"end": 3267,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2956,
									"end": 3273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2956,
									"end": 3273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "tag",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3307,
									"end": 3310,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3328,
									"end": 3333,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3321,
									"end": 3333,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3321,
									"end": 3333,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3279,
									"end": 3339,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "tag",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3395,
									"end": 3404,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3428,
									"end": 3481,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "147"
								},
								{
									"begin": 3446,
									"end": 3480,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 3455,
									"end": 3479,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 3473,
									"end": 3478,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3455,
									"end": 3479,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 3455,
									"end": 3479,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3455,
									"end": 3479,
									"name": "tag",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 3455,
									"end": 3479,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3446,
									"end": 3480,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 3446,
									"end": 3480,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3446,
									"end": 3480,
									"name": "tag",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 3446,
									"end": 3480,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3428,
									"end": 3481,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 3428,
									"end": 3481,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3428,
									"end": 3481,
									"name": "tag",
									"source": 8,
									"value": "147"
								},
								{
									"begin": 3428,
									"end": 3481,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3415,
									"end": 3481,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3415,
									"end": 3481,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3345,
									"end": 3487,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "tag",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3536,
									"end": 3539,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3557,
									"end": 3562,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3550,
									"end": 3562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3550,
									"end": 3562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3493,
									"end": 3568,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "tag",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3684,
									"end": 3723,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "152"
								},
								{
									"begin": 3715,
									"end": 3722,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3684,
									"end": 3723,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 3684,
									"end": 3723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3684,
									"end": 3723,
									"name": "tag",
									"source": 8,
									"value": "152"
								},
								{
									"begin": 3684,
									"end": 3723,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3745,
									"end": 3836,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 3794,
									"end": 3835,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "154"
								},
								{
									"begin": 3818,
									"end": 3834,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3794,
									"end": 3835,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 3794,
									"end": 3835,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3794,
									"end": 3835,
									"name": "tag",
									"source": 8,
									"value": "154"
								},
								{
									"begin": 3794,
									"end": 3835,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3786,
									"end": 3792,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3779,
									"end": 3783,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3773,
									"end": 3784,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3745,
									"end": 3836,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 3745,
									"end": 3836,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3745,
									"end": 3836,
									"name": "tag",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 3745,
									"end": 3836,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3739,
									"end": 3743,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3732,
									"end": 3837,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3650,
									"end": 3843,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3843,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3849,
									"end": 3922,
									"name": "tag",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 3849,
									"end": 3922,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3894,
									"end": 3897,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3849,
									"end": 3922,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3849,
									"end": 3922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3928,
									"end": 4117,
									"name": "tag",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 3928,
									"end": 4117,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4005,
									"end": 4037,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 4005,
									"end": 4037,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 4005,
									"end": 4037,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4005,
									"end": 4037,
									"name": "tag",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 4005,
									"end": 4037,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4046,
									"end": 4111,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 4104,
									"end": 4110,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4096,
									"end": 4102,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4090,
									"end": 4094,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4046,
									"end": 4111,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 4046,
									"end": 4111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4046,
									"end": 4111,
									"name": "tag",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 4046,
									"end": 4111,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3981,
									"end": 4117,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3928,
									"end": 4117,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3928,
									"end": 4117,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3928,
									"end": 4117,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4123,
									"end": 4309,
									"name": "tag",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 4123,
									"end": 4309,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "tag",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4200,
									"end": 4203,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4193,
									"end": 4198,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4190,
									"end": 4204,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4254,
									"end": 4293,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 4291,
									"end": 4292,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4284,
									"end": 4289,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4254,
									"end": 4293,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 4254,
									"end": 4293,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4254,
									"end": 4293,
									"name": "tag",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 4254,
									"end": 4293,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4227,
									"end": 4228,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4220,
									"end": 4225,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4216,
									"end": 4229,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4207,
									"end": 4229,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4207,
									"end": 4229,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "tag",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4123,
									"end": 4309,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4123,
									"end": 4309,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4123,
									"end": 4309,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "tag",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4416,
									"end": 4418,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4411,
									"end": 4414,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4408,
									"end": 4419,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "165"
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4450,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 4482,
									"end": 4487,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4450,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 4450,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4450,
									"end": 4488,
									"name": "tag",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 4450,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4534,
									"end": 4563,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 4552,
									"end": 4562,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4534,
									"end": 4563,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 4534,
									"end": 4563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4534,
									"end": 4563,
									"name": "tag",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 4534,
									"end": 4563,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4524,
									"end": 4532,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4520,
									"end": 4564,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4717,
									"end": 4719,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4705,
									"end": 4715,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4702,
									"end": 4720,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "168"
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4738,
									"end": 4746,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4723,
									"end": 4746,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4723,
									"end": 4746,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "tag",
									"source": 8,
									"value": "168"
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4761,
									"end": 4841,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 4817,
									"end": 4839,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 4835,
									"end": 4838,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4817,
									"end": 4839,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 4817,
									"end": 4839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4817,
									"end": 4839,
									"name": "tag",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 4817,
									"end": 4839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4807,
									"end": 4815,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4803,
									"end": 4840,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4790,
									"end": 4801,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4761,
									"end": 4841,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 4761,
									"end": 4841,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4761,
									"end": 4841,
									"name": "tag",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 4761,
									"end": 4841,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4420,
									"end": 4851,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4420,
									"end": 4851,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "tag",
									"source": 8,
									"value": "165"
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4315,
									"end": 4858,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "tag",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4918,
									"end": 4926,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4968,
									"end": 4973,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4962,
									"end": 4966,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4958,
									"end": 4974,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 4937,
									"end": 4974,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4937,
									"end": 4974,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4864,
									"end": 4981,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "tag",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5031,
									"end": 5037,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5064,
									"end": 5115,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "173"
								},
								{
									"begin": 5112,
									"end": 5113,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5108,
									"end": 5114,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 5100,
									"end": 5105,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5097,
									"end": 5098,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 5093,
									"end": 5106,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 5064,
									"end": 5115,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 5064,
									"end": 5115,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5064,
									"end": 5115,
									"name": "tag",
									"source": 8,
									"value": "173"
								},
								{
									"begin": 5064,
									"end": 5115,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5060,
									"end": 5116,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 5145,
									"end": 5149,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5139,
									"end": 5143,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5135,
									"end": 5150,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5125,
									"end": 5150,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5125,
									"end": 5150,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5038,
									"end": 5156,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4987,
									"end": 5156,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "tag",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5237,
									"end": 5241,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5383,
									"end": 5412,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "175"
								},
								{
									"begin": 5408,
									"end": 5411,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5402,
									"end": 5406,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5383,
									"end": 5412,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 5383,
									"end": 5412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5383,
									"end": 5412,
									"name": "tag",
									"source": 8,
									"value": "175"
								},
								{
									"begin": 5383,
									"end": 5412,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5375,
									"end": 5412,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5375,
									"end": 5412,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5445,
									"end": 5448,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5442,
									"end": 5443,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 5438,
									"end": 5449,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 5432,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5429,
									"end": 5450,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 5421,
									"end": 5450,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5421,
									"end": 5450,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5456,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5461,
									"end": 6856,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 5461,
									"end": 6856,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5578,
									"end": 5615,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "177"
								},
								{
									"begin": 5611,
									"end": 5614,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5578,
									"end": 5615,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 5578,
									"end": 5615,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5578,
									"end": 5615,
									"name": "tag",
									"source": 8,
									"value": "177"
								},
								{
									"begin": 5578,
									"end": 5615,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5680,
									"end": 5698,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5672,
									"end": 5678,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5669,
									"end": 5699,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5702,
									"end": 5720,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "179"
								},
								{
									"begin": 5702,
									"end": 5720,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 5702,
									"end": 5720,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5702,
									"end": 5720,
									"name": "tag",
									"source": 8,
									"value": "179"
								},
								{
									"begin": 5702,
									"end": 5720,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "tag",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5746,
									"end": 5784,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 5778,
									"end": 5782,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5772,
									"end": 5783,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 5746,
									"end": 5784,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 5746,
									"end": 5784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5746,
									"end": 5784,
									"name": "tag",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 5746,
									"end": 5784,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5831,
									"end": 5898,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 5891,
									"end": 5897,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5883,
									"end": 5889,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5877,
									"end": 5881,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5831,
									"end": 5898,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 5831,
									"end": 5898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5831,
									"end": 5898,
									"name": "tag",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 5831,
									"end": 5898,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5925,
									"end": 5926,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5949,
									"end": 5953,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5936,
									"end": 5953,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5936,
									"end": 5953,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5981,
									"end": 5983,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 5973,
									"end": 5979,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5970,
									"end": 5984,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5998,
									"end": 5999,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "183"
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6655,
									"end": 6656,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6672,
									"end": 6678,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6721,
									"end": 6730,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6716,
									"end": 6719,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 6712,
									"end": 6731,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6706,
									"end": 6732,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6697,
									"end": 6732,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6697,
									"end": 6732,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "tag",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6772,
									"end": 6839,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "185"
								},
								{
									"begin": 6832,
									"end": 6838,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6772,
									"end": 6839,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 6772,
									"end": 6839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6772,
									"end": 6839,
									"name": "tag",
									"source": 8,
									"value": "185"
								},
								{
									"begin": 6772,
									"end": 6839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6766,
									"end": 6770,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6759,
									"end": 6840,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6628,
									"end": 6850,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "tag",
									"source": 8,
									"value": "183"
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6045,
									"end": 6049,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6041,
									"end": 6050,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 6033,
									"end": 6039,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6029,
									"end": 6051,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6079,
									"end": 6116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 6111,
									"end": 6115,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6079,
									"end": 6116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 6079,
									"end": 6116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6079,
									"end": 6116,
									"name": "tag",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 6079,
									"end": 6116,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6138,
									"end": 6139,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "tag",
									"source": 8,
									"value": "187"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6166,
									"end": 6173,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6163,
									"end": 6164,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6160,
									"end": 6174,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "189"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6245,
									"end": 6254,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6240,
									"end": 6243,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6236,
									"end": 6255,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6230,
									"end": 6256,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6222,
									"end": 6228,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6215,
									"end": 6257,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6296,
									"end": 6297,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6288,
									"end": 6294,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6284,
									"end": 6298,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6274,
									"end": 6298,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6274,
									"end": 6298,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6343,
									"end": 6345,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6332,
									"end": 6341,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6328,
									"end": 6346,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6315,
									"end": 6346,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 6315,
									"end": 6346,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6189,
									"end": 6193,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6186,
									"end": 6187,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6182,
									"end": 6194,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6177,
									"end": 6194,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6177,
									"end": 6194,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "187"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "tag",
									"source": 8,
									"value": "189"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6388,
									"end": 6394,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6379,
									"end": 6386,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6376,
									"end": 6395,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "190"
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6446,
									"end": 6455,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6441,
									"end": 6444,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6437,
									"end": 6456,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6431,
									"end": 6457,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6489,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "191"
								},
								{
									"begin": 6531,
									"end": 6535,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6523,
									"end": 6529,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6519,
									"end": 6536,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6508,
									"end": 6517,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6489,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 6489,
									"end": 6537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6489,
									"end": 6537,
									"name": "tag",
									"source": 8,
									"value": "191"
								},
								{
									"begin": 6489,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6481,
									"end": 6487,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6474,
									"end": 6538,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6396,
									"end": 6552,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "tag",
									"source": 8,
									"value": "190"
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6598,
									"end": 6599,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6594,
									"end": 6595,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 6586,
									"end": 6592,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 6582,
									"end": 6596,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 6578,
									"end": 6600,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6572,
									"end": 6576,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 6565,
									"end": 6601,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6000,
									"end": 6611,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6000,
									"end": 6611,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6000,
									"end": 6611,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "tag",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5553,
									"end": 6856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5553,
									"end": 6856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5553,
									"end": 6856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5461,
									"end": 6856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5461,
									"end": 6856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5461,
									"end": 6856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6862,
									"end": 6980,
									"name": "tag",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 6862,
									"end": 6980,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6949,
									"end": 6973,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "193"
								},
								{
									"begin": 6967,
									"end": 6972,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6949,
									"end": 6973,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 6949,
									"end": 6973,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6949,
									"end": 6973,
									"name": "tag",
									"source": 8,
									"value": "193"
								},
								{
									"begin": 6949,
									"end": 6973,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6944,
									"end": 6947,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6937,
									"end": 6974,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6862,
									"end": 6980,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6862,
									"end": 6980,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6862,
									"end": 6980,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7079,
									"end": 7083,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7117,
									"end": 7119,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7106,
									"end": 7115,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7102,
									"end": 7120,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7094,
									"end": 7120,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7094,
									"end": 7120,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7130,
									"end": 7201,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "195"
								},
								{
									"begin": 7198,
									"end": 7199,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7187,
									"end": 7196,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7183,
									"end": 7200,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7174,
									"end": 7180,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7130,
									"end": 7201,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 7130,
									"end": 7201,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7130,
									"end": 7201,
									"name": "tag",
									"source": 8,
									"value": "195"
								},
								{
									"begin": 7130,
									"end": 7201,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6986,
									"end": 7208,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7214,
									"end": 7394,
									"name": "tag",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 7214,
									"end": 7394,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7262,
									"end": 7339,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7259,
									"end": 7260,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7252,
									"end": 7340,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7359,
									"end": 7363,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 7356,
									"end": 7357,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 7349,
									"end": 7364,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7383,
									"end": 7387,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 7380,
									"end": 7381,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7373,
									"end": 7388,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 7400,
									"end": 7486,
									"name": "tag",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 7400,
									"end": 7486,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7435,
									"end": 7442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7475,
									"end": 7479,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 7468,
									"end": 7473,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7464,
									"end": 7480,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 7453,
									"end": 7480,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7453,
									"end": 7480,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7400,
									"end": 7486,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7400,
									"end": 7486,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7400,
									"end": 7486,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7400,
									"end": 7486,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7492,
									"end": 7659,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 7492,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7529,
									"end": 7532,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7552,
									"end": 7574,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "199"
								},
								{
									"begin": 7568,
									"end": 7573,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7552,
									"end": 7574,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 7552,
									"end": 7574,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7552,
									"end": 7574,
									"name": "tag",
									"source": 8,
									"value": "199"
								},
								{
									"begin": 7552,
									"end": 7574,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7543,
									"end": 7574,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7543,
									"end": 7574,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7596,
									"end": 7600,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 7589,
									"end": 7594,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7586,
									"end": 7601,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 7583,
									"end": 7624,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "200"
								},
								{
									"begin": 7583,
									"end": 7624,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7604,
									"end": 7622,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "201"
								},
								{
									"begin": 7604,
									"end": 7622,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 7604,
									"end": 7622,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7604,
									"end": 7622,
									"name": "tag",
									"source": 8,
									"value": "201"
								},
								{
									"begin": 7604,
									"end": 7622,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7583,
									"end": 7624,
									"name": "tag",
									"source": 8,
									"value": "200"
								},
								{
									"begin": 7583,
									"end": 7624,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7651,
									"end": 7652,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 7644,
									"end": 7649,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7640,
									"end": 7653,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7633,
									"end": 7653,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7633,
									"end": 7653,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7492,
									"end": 7659,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7492,
									"end": 7659,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7492,
									"end": 7659,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7492,
									"end": 7659,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7665,
									"end": 7856,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 7665,
									"end": 7856,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7705,
									"end": 7708,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7724,
									"end": 7744,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "203"
								},
								{
									"begin": 7742,
									"end": 7743,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7724,
									"end": 7744,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 7724,
									"end": 7744,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7724,
									"end": 7744,
									"name": "tag",
									"source": 8,
									"value": "203"
								},
								{
									"begin": 7724,
									"end": 7744,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7719,
									"end": 7744,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7719,
									"end": 7744,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7758,
									"end": 7778,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "204"
								},
								{
									"begin": 7776,
									"end": 7777,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7758,
									"end": 7778,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 7758,
									"end": 7778,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7758,
									"end": 7778,
									"name": "tag",
									"source": 8,
									"value": "204"
								},
								{
									"begin": 7758,
									"end": 7778,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7753,
									"end": 7778,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7753,
									"end": 7778,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7801,
									"end": 7802,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7798,
									"end": 7799,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7794,
									"end": 7803,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7787,
									"end": 7803,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7787,
									"end": 7803,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7822,
									"end": 7825,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 7819,
									"end": 7820,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7816,
									"end": 7826,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 7813,
									"end": 7849,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7813,
									"end": 7849,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "205"
								},
								{
									"begin": 7813,
									"end": 7849,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7829,
									"end": 7847,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "206"
								},
								{
									"begin": 7829,
									"end": 7847,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 7829,
									"end": 7847,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7829,
									"end": 7847,
									"name": "tag",
									"source": 8,
									"value": "206"
								},
								{
									"begin": 7829,
									"end": 7847,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7813,
									"end": 7849,
									"name": "tag",
									"source": 8,
									"value": "205"
								},
								{
									"begin": 7813,
									"end": 7849,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7665,
									"end": 7856,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7665,
									"end": 7856,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7665,
									"end": 7856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7665,
									"end": 7856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7665,
									"end": 7856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7862,
									"end": 7980,
									"name": "tag",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 7862,
									"end": 7980,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7949,
									"end": 7973,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "208"
								},
								{
									"begin": 7967,
									"end": 7972,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7949,
									"end": 7973,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 7949,
									"end": 7973,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7949,
									"end": 7973,
									"name": "tag",
									"source": 8,
									"value": "208"
								},
								{
									"begin": 7949,
									"end": 7973,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7944,
									"end": 7947,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7937,
									"end": 7974,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7862,
									"end": 7980,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7862,
									"end": 7980,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7862,
									"end": 7980,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7986,
									"end": 8428,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 7986,
									"end": 8428,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8135,
									"end": 8139,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8173,
									"end": 8175,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 8162,
									"end": 8171,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8158,
									"end": 8176,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8150,
									"end": 8176,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8150,
									"end": 8176,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8186,
									"end": 8257,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "210"
								},
								{
									"begin": 8254,
									"end": 8255,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8243,
									"end": 8252,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8239,
									"end": 8256,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8230,
									"end": 8236,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 8186,
									"end": 8257,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 8186,
									"end": 8257,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8186,
									"end": 8257,
									"name": "tag",
									"source": 8,
									"value": "210"
								},
								{
									"begin": 8186,
									"end": 8257,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8267,
									"end": 8339,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "211"
								},
								{
									"begin": 8335,
									"end": 8337,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8324,
									"end": 8333,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8320,
									"end": 8338,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8311,
									"end": 8317,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 8267,
									"end": 8339,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 8267,
									"end": 8339,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8267,
									"end": 8339,
									"name": "tag",
									"source": 8,
									"value": "211"
								},
								{
									"begin": 8267,
									"end": 8339,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8349,
									"end": 8421,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "212"
								},
								{
									"begin": 8417,
									"end": 8419,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 8406,
									"end": 8415,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8402,
									"end": 8420,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8393,
									"end": 8399,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8349,
									"end": 8421,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 8349,
									"end": 8421,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8349,
									"end": 8421,
									"name": "tag",
									"source": 8,
									"value": "212"
								},
								{
									"begin": 8349,
									"end": 8421,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7986,
									"end": 8428,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 7986,
									"end": 8428,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 7986,
									"end": 8428,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7986,
									"end": 8428,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7986,
									"end": 8428,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7986,
									"end": 8428,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7986,
									"end": 8428,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8434,
									"end": 8656,
									"name": "tag",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 8434,
									"end": 8656,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8527,
									"end": 8531,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8565,
									"end": 8567,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8554,
									"end": 8563,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8550,
									"end": 8568,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8542,
									"end": 8568,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8542,
									"end": 8568,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8578,
									"end": 8649,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "214"
								},
								{
									"begin": 8646,
									"end": 8647,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8635,
									"end": 8644,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8631,
									"end": 8648,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8622,
									"end": 8628,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8578,
									"end": 8649,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 8578,
									"end": 8649,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8578,
									"end": 8649,
									"name": "tag",
									"source": 8,
									"value": "214"
								},
								{
									"begin": 8578,
									"end": 8649,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8434,
									"end": 8656,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 8434,
									"end": 8656,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8434,
									"end": 8656,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8434,
									"end": 8656,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8434,
									"end": 8656,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 243,
									"end": 4215,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 243,
									"end": 4215,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 243,
									"end": 4215,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 4215,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 243,
									"end": 4215,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 4215,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 4215,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 243,
									"end": 4215,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 4215,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220875994130a6625aee2e303869d3548a2c8d70075d41367daad7272bff048ce0e64736f6c634300081a0033",
									".code": [
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "C81D7604"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "C81D7604"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "CE6019B4"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "D917BD27"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "E3AF42E1"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "79CC6790"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "AF3BCB7D"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "40C10F19"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "42966C68"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "4C738909"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "6D1B229D"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "9CEB537"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "1072CBEA"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 4215,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2231,
											"end": 2816,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2231,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2231,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2231,
											"end": 2816,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2231,
											"end": 2816,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2231,
											"end": 2816,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2231,
											"end": 2816,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2231,
											"end": 2816,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2231,
											"end": 2816,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2231,
											"end": 2816,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2231,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 2231,
											"end": 2816,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2231,
											"end": 2816,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2231,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 2231,
											"end": 2816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2231,
											"end": 2816,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 2231,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2231,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 2231,
											"end": 2816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2231,
											"end": 2816,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2231,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2231,
											"end": 2816,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1607,
											"end": 1805,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1607,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1607,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1607,
											"end": 1805,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1607,
											"end": 1805,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1607,
											"end": 1805,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1607,
											"end": 1805,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1607,
											"end": 1805,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1607,
											"end": 1805,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1607,
											"end": 1805,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1607,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1607,
											"end": 1805,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1607,
											"end": 1805,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1607,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1607,
											"end": 1805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1607,
											"end": 1805,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1607,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1607,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1607,
											"end": 1805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1607,
											"end": 1805,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1607,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1607,
											"end": 1805,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1550,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 1457,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1457,
											"end": 1550,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1457,
											"end": 1550,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1550,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1550,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1550,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1550,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1550,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1457,
											"end": 1550,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1550,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1457,
											"end": 1550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1550,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1457,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 1457,
											"end": 1550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1550,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1457,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1550,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3918,
											"end": 4019,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 3918,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 3918,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 3918,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 4019,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 3918,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 4019,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3918,
											"end": 4019,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 3918,
											"end": 4019,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 4019,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 3918,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 4019,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 3918,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 4019,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3918,
											"end": 4019,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 4019,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 4019,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 4019,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 4019,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 4019,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4213,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 4065,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4065,
											"end": 4213,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4065,
											"end": 4213,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4213,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4213,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4213,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4213,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4213,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 4065,
											"end": 4213,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4213,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 4065,
											"end": 4213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4213,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 4065,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 4065,
											"end": 4213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4213,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4065,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4213,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2859,
											"end": 3237,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2859,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2859,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 2859,
											"end": 3237,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2859,
											"end": 3237,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2859,
											"end": 3237,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2859,
											"end": 3237,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2859,
											"end": 3237,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2859,
											"end": 3237,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2859,
											"end": 3237,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2859,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 2859,
											"end": 3237,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2859,
											"end": 3237,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2859,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 2859,
											"end": 3237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2859,
											"end": 3237,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 2859,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2859,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 2859,
											"end": 3237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2859,
											"end": 3237,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 2859,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2859,
											"end": 3237,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 2014,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1869,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1869,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1869,
											"end": 2014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 2014,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1869,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 2014,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3296,
											"end": 3657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 3296,
											"end": 3657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 3296,
											"end": 3657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 3701,
											"end": 3875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 3701,
											"end": 3875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 3701,
											"end": 3875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2068,
											"end": 2182,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 2068,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2068,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 2068,
											"end": 2182,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2068,
											"end": 2182,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2068,
											"end": 2182,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2068,
											"end": 2182,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2068,
											"end": 2182,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2068,
											"end": 2182,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2068,
											"end": 2182,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2068,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 2068,
											"end": 2182,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2068,
											"end": 2182,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2068,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 2068,
											"end": 2182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2068,
											"end": 2182,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 2068,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2068,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 2068,
											"end": 2182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2068,
											"end": 2182,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 2068,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2068,
											"end": 2182,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2231,
											"end": 2816,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 2231,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2353,
											"end": 2362,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 2338,
											"end": 2348,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 2328,
											"end": 2349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2349,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 2328,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2362,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2362,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2320,
											"end": 2387,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2387,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2387,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2387,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2320,
											"end": 2387,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2387,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2387,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2320,
											"end": 2387,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2320,
											"end": 2387,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 2320,
											"end": 2387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2387,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2320,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2387,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2387,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2387,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2387,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2387,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2387,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2387,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2387,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2320,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2406,
											"end": 2426,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2497,
											"end": 2499,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2464,
											"end": 2479,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2491,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2492,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2447,
											"end": 2492,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2492,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2447,
											"end": 2492,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2447,
											"end": 2492,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2492,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2447,
											"end": 2492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2492,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2447,
											"end": 2492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2492,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2447,
											"end": 2492,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2492,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2447,
											"end": 2492,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2492,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2492,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2492,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2492,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2492,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2492,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2447,
											"end": 2492,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2493,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2493,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2493,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2493,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2437,
											"end": 2493,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2493,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2429,
											"end": 2494,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2494,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 2429,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2429,
											"end": 2499,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2429,
											"end": 2499,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2429,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2429,
											"end": 2499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2429,
											"end": 2499,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2429,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2406,
											"end": 2499,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2406,
											"end": 2499,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2553,
											"end": 2554,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2538,
											"end": 2550,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2538,
											"end": 2554,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2514,
											"end": 2555,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2514,
											"end": 2555,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2514,
											"end": 2533,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2514,
											"end": 2555,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2514,
											"end": 2555,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2514,
											"end": 2555,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2510,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 2510,
											"end": 2810,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2571,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 2577,
											"end": 2587,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 2602,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2589,
											"end": 2598,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 2589,
											"end": 2602,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2602,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2589,
											"end": 2602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2602,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 2589,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2571,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 2571,
											"end": 2603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2571,
											"end": 2603,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 2571,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2634,
											"end": 2644,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2622,
											"end": 2677,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2622,
											"end": 2677,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2622,
											"end": 2677,
											"name": "PUSH",
											"source": 7,
											"value": "D04D9689D8E43BC0BACEA67661EF472DCF321F34F08AF72F651AF30C4C866587"
										},
										{
											"begin": 2646,
											"end": 2658,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2664,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2622,
											"end": 2677,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2622,
											"end": 2677,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2622,
											"end": 2677,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 2622,
											"end": 2677,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2622,
											"end": 2677,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2622,
											"end": 2677,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2622,
											"end": 2677,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 2622,
											"end": 2677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2622,
											"end": 2677,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 2622,
											"end": 2677,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2622,
											"end": 2677,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2622,
											"end": 2677,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2622,
											"end": 2677,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2622,
											"end": 2677,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2622,
											"end": 2677,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2622,
											"end": 2677,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2622,
											"end": 2677,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2510,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 2510,
											"end": 2810,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2510,
											"end": 2810,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 2510,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 2713,
											"end": 2722,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 2708,
											"end": 2723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2754,
											"end": 2764,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 2799,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2742,
											"end": 2799,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 2799,
											"name": "PUSH",
											"source": 7,
											"value": "D04D9689D8E43BC0BACEA67661EF472DCF321F34F08AF72F651AF30C4C866587"
										},
										{
											"begin": 2766,
											"end": 2778,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2780,
											"end": 2785,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2742,
											"end": 2799,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2742,
											"end": 2799,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 2742,
											"end": 2799,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 2799,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 2799,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 2742,
											"end": 2799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 2799,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 2742,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 2799,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2742,
											"end": 2799,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 2799,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 2799,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 2799,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 2799,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 2799,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2510,
											"end": 2810,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 2510,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2310,
											"end": 2816,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2231,
											"end": 2816,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2231,
											"end": 2816,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2231,
											"end": 2816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1607,
											"end": 1805,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1607,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1717,
											"end": 1723,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1692,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1702,
											"end": 1712,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1692,
											"end": 1713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1692,
											"end": 1713,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1692,
											"end": 1713,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1692,
											"end": 1723,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1692,
											"end": 1723,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1684,
											"end": 1748,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1748,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1684,
											"end": 1748,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1748,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1684,
											"end": 1748,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1748,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1748,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1684,
											"end": 1748,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1684,
											"end": 1748,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 1684,
											"end": 1748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1748,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1684,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1748,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1684,
											"end": 1748,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1748,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1748,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1748,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1748,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1748,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1748,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1684,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1758,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1768,
											"end": 1778,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1780,
											"end": 1789,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1791,
											"end": 1797,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1758,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1758,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1758,
											"end": 1798,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1758,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1607,
											"end": 1805,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1607,
											"end": 1805,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1607,
											"end": 1805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1550,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 1457,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 1532,
											"end": 1534,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1536,
											"end": 1542,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1526,
											"end": 1531,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 1526,
											"end": 1543,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1526,
											"end": 1543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 1526,
											"end": 1543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1550,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1550,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 678,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 678,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 678,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 698,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 672,
											"end": 698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3918,
											"end": 4019,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 3918,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3965,
											"end": 3972,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 4001,
											"end": 4011,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3991,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 3991,
											"end": 4012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3991,
											"end": 4012,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 3991,
											"end": 4012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4012,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 4019,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 4019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4213,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 4065,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4153,
											"end": 4159,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 4138,
											"end": 4148,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 4128,
											"end": 4149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4149,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 4128,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4159,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4159,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 4120,
											"end": 4184,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4184,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4120,
											"end": 4184,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4184,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4120,
											"end": 4184,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4184,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4184,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4120,
											"end": 4184,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 4120,
											"end": 4184,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 4120,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4184,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 4120,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4184,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4120,
											"end": 4184,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4184,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4184,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4184,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4184,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4184,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4184,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 4120,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4194,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 4199,
											"end": 4205,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4194,
											"end": 4198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 4194,
											"end": 4206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4194,
											"end": 4206,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 4194,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 1121,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 1121,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2859,
											"end": 3237,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 2859,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2944,
											"end": 2945,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2927,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2922,
											"end": 2935,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2928,
											"end": 2934,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2935,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2922,
											"end": 2935,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2935,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2922,
											"end": 2935,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2935,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2935,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2935,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2922,
											"end": 2935,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2935,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2935,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2935,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2935,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2922,
											"end": 2935,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2935,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2935,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2941,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2922,
											"end": 2941,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2941,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2945,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 2914,
											"end": 2964,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2964,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2914,
											"end": 2964,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2964,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2914,
											"end": 2964,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2964,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2964,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2914,
											"end": 2964,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2914,
											"end": 2964,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2914,
											"end": 2964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2964,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2914,
											"end": 2964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2964,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2914,
											"end": 2964,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2964,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2964,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2964,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2964,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2964,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2964,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 2914,
											"end": 2964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3012,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3007,
											"end": 3020,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3013,
											"end": 3019,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3020,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3007,
											"end": 3020,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3020,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3007,
											"end": 3020,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3020,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3020,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3020,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3007,
											"end": 3020,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3020,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3020,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3020,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3020,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3007,
											"end": 3020,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3020,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3020,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3026,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3007,
											"end": 3026,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3026,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 2992,
											"end": 3002,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 2982,
											"end": 3003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 3003,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 2982,
											"end": 3003,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 3026,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 3026,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 2974,
											"end": 3051,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3051,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2974,
											"end": 3051,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3051,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2974,
											"end": 3051,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3051,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3051,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2974,
											"end": 3051,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 2974,
											"end": 3051,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 2974,
											"end": 3051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3051,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 2974,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3051,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2974,
											"end": 3051,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3051,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3051,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3051,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3051,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3051,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3051,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 2974,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3062,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 3067,
											"end": 3072,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3067,
											"end": 3080,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3079,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3067,
											"end": 3080,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3067,
											"end": 3080,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3067,
											"end": 3080,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3067,
											"end": 3080,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3067,
											"end": 3080,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3067,
											"end": 3080,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3067,
											"end": 3080,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3067,
											"end": 3080,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3067,
											"end": 3080,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3067,
											"end": 3080,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3067,
											"end": 3080,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3067,
											"end": 3080,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3067,
											"end": 3080,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3067,
											"end": 3080,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3067,
											"end": 3080,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3067,
											"end": 3086,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3067,
											"end": 3086,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3067,
											"end": 3086,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3062,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 3062,
											"end": 3087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3062,
											"end": 3087,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 3062,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3108,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3097,
											"end": 3120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3109,
											"end": 3119,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3120,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3097,
											"end": 3120,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3120,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3097,
											"end": 3120,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3120,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3120,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3120,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3097,
											"end": 3120,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3120,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3120,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3120,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3120,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3097,
											"end": 3120,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3097,
											"end": 3120,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3131,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3126,
											"end": 3139,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3132,
											"end": 3138,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3139,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3126,
											"end": 3139,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3139,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3126,
											"end": 3139,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3139,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3139,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3139,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3126,
											"end": 3139,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3139,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3139,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3139,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3139,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3126,
											"end": 3139,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3139,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3126,
											"end": 3139,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3097,
											"end": 3140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3140,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3170,
											"end": 3180,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3230,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3156,
											"end": 3230,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3230,
											"name": "PUSH",
											"source": 7,
											"value": "8BEDD141782C49139782BD92BD7A760A0BCB544FFECFD2B25F00366FAE06598E"
										},
										{
											"begin": 3182,
											"end": 3188,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3195,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3190,
											"end": 3203,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3202,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3203,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3190,
											"end": 3203,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3203,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3190,
											"end": 3203,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3203,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3203,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3203,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3190,
											"end": 3203,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3203,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3203,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3203,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3203,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3190,
											"end": 3203,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3203,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3190,
											"end": 3203,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3215,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3216,
											"end": 3222,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3229,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3210,
											"end": 3229,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3229,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3230,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3156,
											"end": 3230,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 3156,
											"end": 3230,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3230,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3230,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3230,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3156,
											"end": 3230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3230,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 3156,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3230,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3156,
											"end": 3230,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3230,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3230,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3230,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3230,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3230,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2859,
											"end": 3237,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2859,
											"end": 3237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 2014,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1869,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 1950,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 1934,
											"end": 1944,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1924,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1924,
											"end": 1945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1924,
											"end": 1945,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 1924,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1924,
											"end": 1950,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1916,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 1916,
											"end": 1976,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1916,
											"end": 1976,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1916,
											"end": 1976,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1916,
											"end": 1976,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1916,
											"end": 1976,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1916,
											"end": 1976,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1916,
											"end": 1976,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1916,
											"end": 1976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1916,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 1916,
											"end": 1976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1916,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 1916,
											"end": 1976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1916,
											"end": 1976,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 1916,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1916,
											"end": 1976,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1916,
											"end": 1976,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1916,
											"end": 1976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1916,
											"end": 1976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1916,
											"end": 1976,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1916,
											"end": 1976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1916,
											"end": 1976,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1916,
											"end": 1976,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 1916,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2004,
											"end": 2006,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1986,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 1986,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2007,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 1986,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 2014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3355,
											"end": 3369,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3381,
											"end": 3404,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3407,
											"end": 3418,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3407,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3423,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3407,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3407,
											"end": 3424,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3407,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3407,
											"end": 3424,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3407,
											"end": 3424,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3407,
											"end": 3424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3407,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3407,
											"end": 3424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3407,
											"end": 3424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3407,
											"end": 3424,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3407,
											"end": 3424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3407,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3407,
											"end": 3424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3407,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3407,
											"end": 3424,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 3381,
											"end": 3424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 3381,
											"end": 3424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3424,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3434,
											"end": 3448,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3451,
											"end": 3460,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3451,
											"end": 3467,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3434,
											"end": 3467,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3434,
											"end": 3467,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 3500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3515,
											"end": 3521,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 3503,
											"end": 3522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3522,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 3522,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 3522,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3537,
											"end": 3546,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3532,
											"end": 3626,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 3532,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3562,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3552,
											"end": 3553,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3552,
											"end": 3562,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3626,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 3532,
											"end": 3626,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3605,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3606,
											"end": 3607,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 3596,
											"end": 3608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3615,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3596,
											"end": 3615,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3615,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3591,
											"end": 3592,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3593,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3593,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3593,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3593,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 3583,
											"end": 3593,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 3583,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 3583,
											"end": 3593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3593,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 3583,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3593,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 3583,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3593,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3593,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3593,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3593,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3593,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3615,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3615,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3583,
											"end": 3615,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3615,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3615,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3615,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3583,
											"end": 3615,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3615,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3615,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3615,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3615,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3567,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3564,
											"end": 3567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3567,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 3532,
											"end": 3626,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3626,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 3532,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3643,
											"end": 3650,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3636,
											"end": 3650,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3636,
											"end": 3650,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3636,
											"end": 3650,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3636,
											"end": 3650,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3636,
											"end": 3650,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3657,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3762,
											"end": 3775,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3777,
											"end": 3784,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3796,
											"end": 3812,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 3820,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3815,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3821,
											"end": 3827,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3815,
											"end": 3828,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3815,
											"end": 3828,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 3828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 3828,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3815,
											"end": 3828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 3828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 3828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 3828,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3815,
											"end": 3828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3815,
											"end": 3828,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 3796,
											"end": 3828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 3796,
											"end": 3828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3828,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3846,
											"end": 3850,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3846,
											"end": 3855,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3846,
											"end": 3855,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3846,
											"end": 3855,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3857,
											"end": 3861,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3857,
											"end": 3867,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3857,
											"end": 3867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3857,
											"end": 3867,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3838,
											"end": 3868,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3838,
											"end": 3868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3838,
											"end": 3868,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3838,
											"end": 3868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3838,
											"end": 3868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3875,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2068,
											"end": 2182,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 2068,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2175,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 2163,
											"end": 2167,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2174,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2154,
											"end": 2162,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 2154,
											"end": 2175,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2154,
											"end": 2175,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 2154,
											"end": 2175,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2068,
											"end": 2182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2068,
											"end": 2182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2068,
											"end": 2182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1428,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 1278,
											"end": 1428,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1375,
											"end": 1379,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1391,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1381,
											"end": 1391,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1391,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1391,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1391,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1391,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1381,
											"end": 1391,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1391,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1391,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1391,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1381,
											"end": 1391,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1393,
											"end": 1398,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1355,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1356,
											"end": 1366,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1356,
											"end": 1366,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1356,
											"end": 1366,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1356,
											"end": 1366,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1356,
											"end": 1366,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1356,
											"end": 1366,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1356,
											"end": 1366,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1356,
											"end": 1366,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1356,
											"end": 1366,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1356,
											"end": 1366,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1356,
											"end": 1366,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 1350,
											"end": 1399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1419,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1409,
											"end": 1419,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 1409,
											"end": 1421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1278,
											"end": 1428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1278,
											"end": 1428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1278,
											"end": 1428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1281,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1310,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1242,
											"end": 1317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3455,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 3339,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 3424,
											"end": 3429,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 3409,
											"end": 3430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3430,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 3409,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3402,
											"end": 3407,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3399,
											"end": 3431,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3389,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 3389,
											"end": 3449,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3446,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3442,
											"end": 3443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3435,
											"end": 3447,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3389,
											"end": 3449,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 3389,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3455,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3461,
											"end": 3594,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 3461,
											"end": 3594,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3504,
											"end": 3509,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 3548,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3529,
											"end": 3549,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3520,
											"end": 3549,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3520,
											"end": 3549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3558,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3558,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 3558,
											"end": 3588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3558,
											"end": 3588,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 3558,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3461,
											"end": 3594,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3461,
											"end": 3594,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3461,
											"end": 3594,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3461,
											"end": 3594,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3461,
											"end": 3594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 4068,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 3600,
											"end": 4068,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3665,
											"end": 3671,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3673,
											"end": 3679,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3722,
											"end": 3724,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3710,
											"end": 3719,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3701,
											"end": 3708,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3697,
											"end": 3720,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3693,
											"end": 3725,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3690,
											"end": 3809,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3690,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 3690,
											"end": 3809,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3728,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 3728,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 3728,
											"end": 3807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3728,
											"end": 3807,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 3728,
											"end": 3807,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3690,
											"end": 3809,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 3690,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3848,
											"end": 3849,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3873,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 3915,
											"end": 3922,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3906,
											"end": 3912,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3895,
											"end": 3904,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3891,
											"end": 3913,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 3873,
											"end": 3923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3923,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 3873,
											"end": 3923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3863,
											"end": 3923,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3863,
											"end": 3923,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3819,
											"end": 3933,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3972,
											"end": 3974,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3998,
											"end": 4051,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 4043,
											"end": 4050,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4040,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4023,
											"end": 4032,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4019,
											"end": 4041,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3998,
											"end": 4051,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 3998,
											"end": 4051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3998,
											"end": 4051,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 3998,
											"end": 4051,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3988,
											"end": 4051,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3988,
											"end": 4051,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3943,
											"end": 4061,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 4068,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 4068,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 4068,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 4068,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 4068,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 4068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4192,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 4074,
											"end": 4192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4161,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 4179,
											"end": 4184,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4161,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 4161,
											"end": 4185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4161,
											"end": 4185,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 4161,
											"end": 4185,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4156,
											"end": 4159,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4186,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4192,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4192,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4420,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 4198,
											"end": 4420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4291,
											"end": 4295,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4329,
											"end": 4331,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4318,
											"end": 4327,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4314,
											"end": 4332,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4306,
											"end": 4332,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4306,
											"end": 4332,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4342,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 4410,
											"end": 4411,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4399,
											"end": 4408,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4395,
											"end": 4412,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4386,
											"end": 4392,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4342,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 4342,
											"end": 4413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4342,
											"end": 4413,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 4342,
											"end": 4413,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4420,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4420,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4420,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4420,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4426,
											"end": 5045,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 4426,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4503,
											"end": 4509,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4511,
											"end": 4517,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4519,
											"end": 4525,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4568,
											"end": 4570,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4556,
											"end": 4565,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4547,
											"end": 4554,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4543,
											"end": 4566,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4539,
											"end": 4571,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4536,
											"end": 4655,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4536,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 4536,
											"end": 4655,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4574,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 4574,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 4574,
											"end": 4653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4574,
											"end": 4653,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 4574,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4536,
											"end": 4655,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 4536,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4694,
											"end": 4695,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 4764,
											"end": 4771,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4755,
											"end": 4761,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4744,
											"end": 4753,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4740,
											"end": 4762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4719,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 4719,
											"end": 4772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4719,
											"end": 4772,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 4719,
											"end": 4772,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4709,
											"end": 4772,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4709,
											"end": 4772,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4665,
											"end": 4782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4847,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 4892,
											"end": 4899,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4883,
											"end": 4889,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4872,
											"end": 4881,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4868,
											"end": 4890,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4847,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 4847,
											"end": 4900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4847,
											"end": 4900,
											"name": "tag",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 4847,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4837,
											"end": 4900,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4837,
											"end": 4900,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4792,
											"end": 4910,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4949,
											"end": 4951,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4975,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 5020,
											"end": 5027,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5011,
											"end": 5017,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5000,
											"end": 5009,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4996,
											"end": 5018,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4975,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 4975,
											"end": 5028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4975,
											"end": 5028,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 4975,
											"end": 5028,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4965,
											"end": 5028,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4965,
											"end": 5028,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 5038,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4426,
											"end": 5045,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4426,
											"end": 5045,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4426,
											"end": 5045,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4426,
											"end": 5045,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4426,
											"end": 5045,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4426,
											"end": 5045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5051,
											"end": 5137,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 5051,
											"end": 5137,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5093,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 5119,
											"end": 5124,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5115,
											"end": 5131,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5104,
											"end": 5131,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5104,
											"end": 5131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5051,
											"end": 5137,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5051,
											"end": 5137,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5051,
											"end": 5137,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5051,
											"end": 5137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5143,
											"end": 5255,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 5143,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5226,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 5242,
											"end": 5247,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5226,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 5226,
											"end": 5248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5226,
											"end": 5248,
											"name": "tag",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 5226,
											"end": 5248,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5221,
											"end": 5224,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5214,
											"end": 5249,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5143,
											"end": 5255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5143,
											"end": 5255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5143,
											"end": 5255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5261,
											"end": 5475,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 5261,
											"end": 5475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5350,
											"end": 5354,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5388,
											"end": 5390,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5377,
											"end": 5386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5373,
											"end": 5391,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5365,
											"end": 5391,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5365,
											"end": 5391,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5401,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 5465,
											"end": 5466,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5454,
											"end": 5463,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5450,
											"end": 5467,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5441,
											"end": 5447,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5401,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 5401,
											"end": 5468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5401,
											"end": 5468,
											"name": "tag",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 5401,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5261,
											"end": 5475,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5261,
											"end": 5475,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5261,
											"end": 5475,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5261,
											"end": 5475,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5261,
											"end": 5475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5481,
											"end": 5810,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 5481,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5546,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5589,
											"end": 5591,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5577,
											"end": 5586,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5575,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5564,
											"end": 5587,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5560,
											"end": 5592,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5557,
											"end": 5676,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5557,
											"end": 5676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 5557,
											"end": 5676,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5595,
											"end": 5674,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 5595,
											"end": 5674,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 5595,
											"end": 5674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5595,
											"end": 5674,
											"name": "tag",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 5595,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5557,
											"end": 5676,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 5557,
											"end": 5676,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5715,
											"end": 5716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5740,
											"end": 5793,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 5785,
											"end": 5792,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5776,
											"end": 5782,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5765,
											"end": 5774,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5761,
											"end": 5783,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5740,
											"end": 5793,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 5740,
											"end": 5793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5740,
											"end": 5793,
											"name": "tag",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 5740,
											"end": 5793,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5730,
											"end": 5793,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5730,
											"end": 5793,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 5803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5481,
											"end": 5810,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5481,
											"end": 5810,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5481,
											"end": 5810,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5481,
											"end": 5810,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5481,
											"end": 5810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5816,
											"end": 6145,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 5816,
											"end": 6145,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5875,
											"end": 5881,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5924,
											"end": 5926,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5912,
											"end": 5921,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5910,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5899,
											"end": 5922,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5927,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5892,
											"end": 6011,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5892,
											"end": 6011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 5892,
											"end": 6011,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5930,
											"end": 6009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 5930,
											"end": 6009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 5930,
											"end": 6009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5930,
											"end": 6009,
											"name": "tag",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 5930,
											"end": 6009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5892,
											"end": 6011,
											"name": "tag",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 5892,
											"end": 6011,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6050,
											"end": 6051,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 6120,
											"end": 6127,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6111,
											"end": 6117,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6100,
											"end": 6109,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6096,
											"end": 6118,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 6075,
											"end": 6128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "tag",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6065,
											"end": 6128,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6065,
											"end": 6128,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6021,
											"end": 6138,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5816,
											"end": 6145,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5816,
											"end": 6145,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5816,
											"end": 6145,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5816,
											"end": 6145,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5816,
											"end": 6145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6151,
											"end": 6269,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 6151,
											"end": 6269,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6238,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 6256,
											"end": 6261,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6238,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 6238,
											"end": 6262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6238,
											"end": 6262,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 6238,
											"end": 6262,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6233,
											"end": 6236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6226,
											"end": 6263,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6151,
											"end": 6269,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6151,
											"end": 6269,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6151,
											"end": 6269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6275,
											"end": 6497,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 6275,
											"end": 6497,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6372,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6406,
											"end": 6408,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6395,
											"end": 6404,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6391,
											"end": 6409,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6383,
											"end": 6409,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6383,
											"end": 6409,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6490,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 6487,
											"end": 6488,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6476,
											"end": 6485,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6472,
											"end": 6489,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6463,
											"end": 6469,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6490,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 6419,
											"end": 6490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6490,
											"name": "tag",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 6419,
											"end": 6490,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6275,
											"end": 6497,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6275,
											"end": 6497,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6275,
											"end": 6497,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6275,
											"end": 6497,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6275,
											"end": 6497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6503,
											"end": 6621,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 6503,
											"end": 6621,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6574,
											"end": 6596,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 6590,
											"end": 6595,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6574,
											"end": 6596,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 6574,
											"end": 6596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6574,
											"end": 6596,
											"name": "tag",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 6574,
											"end": 6596,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6567,
											"end": 6572,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6564,
											"end": 6597,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 6554,
											"end": 6615,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 6554,
											"end": 6615,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6611,
											"end": 6612,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6608,
											"end": 6609,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6601,
											"end": 6613,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6554,
											"end": 6615,
											"name": "tag",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 6554,
											"end": 6615,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6503,
											"end": 6621,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6503,
											"end": 6621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6627,
											"end": 6762,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 6627,
											"end": 6762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6671,
											"end": 6676,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6709,
											"end": 6715,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6716,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6687,
											"end": 6716,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6687,
											"end": 6716,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6725,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 6750,
											"end": 6755,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6725,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 6725,
											"end": 6756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6725,
											"end": 6756,
											"name": "tag",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 6725,
											"end": 6756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6627,
											"end": 6762,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6627,
											"end": 6762,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6627,
											"end": 6762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6627,
											"end": 6762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6627,
											"end": 6762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6768,
											"end": 7093,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 6768,
											"end": 7093,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6825,
											"end": 6831,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6874,
											"end": 6876,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6862,
											"end": 6871,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6853,
											"end": 6860,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6849,
											"end": 6872,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6845,
											"end": 6877,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6842,
											"end": 6961,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6842,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 6842,
											"end": 6961,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6880,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 6880,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 6880,
											"end": 6959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6880,
											"end": 6959,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 6880,
											"end": 6959,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6842,
											"end": 6961,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 6842,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7000,
											"end": 7001,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7025,
											"end": 7076,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 7068,
											"end": 7075,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7065,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7048,
											"end": 7057,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7044,
											"end": 7066,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7025,
											"end": 7076,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 7025,
											"end": 7076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7025,
											"end": 7076,
											"name": "tag",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 7025,
											"end": 7076,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7015,
											"end": 7076,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7015,
											"end": 7076,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6971,
											"end": 7086,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6768,
											"end": 7093,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6768,
											"end": 7093,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6768,
											"end": 7093,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6768,
											"end": 7093,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6768,
											"end": 7093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7099,
											"end": 7211,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 7099,
											"end": 7211,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7164,
											"end": 7170,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7198,
											"end": 7203,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7192,
											"end": 7204,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7182,
											"end": 7204,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7182,
											"end": 7204,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7099,
											"end": 7211,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7099,
											"end": 7211,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7099,
											"end": 7211,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7099,
											"end": 7211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7217,
											"end": 7399,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 7217,
											"end": 7399,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7314,
											"end": 7325,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7354,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7343,
											"end": 7346,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7336,
											"end": 7355,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7388,
											"end": 7392,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7383,
											"end": 7386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7379,
											"end": 7393,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7364,
											"end": 7393,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7364,
											"end": 7393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7217,
											"end": 7399,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7217,
											"end": 7399,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7217,
											"end": 7399,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7217,
											"end": 7399,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7217,
											"end": 7399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7405,
											"end": 7535,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 7405,
											"end": 7535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7470,
											"end": 7474,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7493,
											"end": 7496,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7485,
											"end": 7496,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7485,
											"end": 7496,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7523,
											"end": 7527,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7518,
											"end": 7521,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7514,
											"end": 7528,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7506,
											"end": 7528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7506,
											"end": 7528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7405,
											"end": 7535,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7405,
											"end": 7535,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7405,
											"end": 7535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7405,
											"end": 7535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7541,
											"end": 7643,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 7541,
											"end": 7643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7614,
											"end": 7636,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 7630,
											"end": 7635,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7614,
											"end": 7636,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 7614,
											"end": 7636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7614,
											"end": 7636,
											"name": "tag",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 7614,
											"end": 7636,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7609,
											"end": 7612,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7602,
											"end": 7637,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7541,
											"end": 7643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7541,
											"end": 7643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7541,
											"end": 7643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7649,
											"end": 7820,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 7649,
											"end": 7820,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7714,
											"end": 7724,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7735,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 7773,
											"end": 7776,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7765,
											"end": 7771,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7735,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 7735,
											"end": 7777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7735,
											"end": 7777,
											"name": "tag",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 7735,
											"end": 7777,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7809,
											"end": 7813,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7804,
											"end": 7807,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7800,
											"end": 7814,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7786,
											"end": 7814,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7786,
											"end": 7814,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7649,
											"end": 7820,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7649,
											"end": 7820,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7649,
											"end": 7820,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7649,
											"end": 7820,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7649,
											"end": 7820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7826,
											"end": 7937,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 7826,
											"end": 7937,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7894,
											"end": 7898,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7926,
											"end": 7930,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7921,
											"end": 7924,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7917,
											"end": 7931,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7909,
											"end": 7931,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7909,
											"end": 7931,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7826,
											"end": 7937,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7826,
											"end": 7937,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7826,
											"end": 7937,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7826,
											"end": 7937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7969,
											"end": 8685,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 7969,
											"end": 8685,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8084,
											"end": 8087,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8113,
											"end": 8165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 8159,
											"end": 8164,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8113,
											"end": 8165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 8113,
											"end": 8165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8113,
											"end": 8165,
											"name": "tag",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 8113,
											"end": 8165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8265,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 8258,
											"end": 8264,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8253,
											"end": 8256,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8265,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 8181,
											"end": 8265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8265,
											"name": "tag",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 8181,
											"end": 8265,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8174,
											"end": 8265,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8174,
											"end": 8265,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8289,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 8337,
											"end": 8342,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8289,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 8289,
											"end": 8343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8289,
											"end": 8343,
											"name": "tag",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 8289,
											"end": 8343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8366,
											"end": 8373,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8397,
											"end": 8398,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8382,
											"end": 8660,
											"name": "tag",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 8382,
											"end": 8660,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8407,
											"end": 8413,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8404,
											"end": 8405,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8414,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 8382,
											"end": 8660,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8382,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 8382,
											"end": 8660,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8483,
											"end": 8489,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8477,
											"end": 8490,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8510,
											"end": 8569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 8565,
											"end": 8568,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8550,
											"end": 8563,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8510,
											"end": 8569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 8510,
											"end": 8569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8510,
											"end": 8569,
											"name": "tag",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 8510,
											"end": 8569,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8503,
											"end": 8569,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 8503,
											"end": 8569,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8592,
											"end": 8650,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 8643,
											"end": 8649,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8592,
											"end": 8650,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 8592,
											"end": 8650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8592,
											"end": 8650,
											"name": "tag",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 8592,
											"end": 8650,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8582,
											"end": 8650,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8582,
											"end": 8650,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8442,
											"end": 8660,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8429,
											"end": 8430,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8426,
											"end": 8427,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8422,
											"end": 8431,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8417,
											"end": 8431,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8417,
											"end": 8431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8382,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 8382,
											"end": 8660,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8382,
											"end": 8660,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 8382,
											"end": 8660,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8386,
											"end": 8400,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8676,
											"end": 8679,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8669,
											"end": 8679,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8669,
											"end": 8679,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8089,
											"end": 8685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8089,
											"end": 8685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8089,
											"end": 8685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7969,
											"end": 8685,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7969,
											"end": 8685,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7969,
											"end": 8685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7969,
											"end": 8685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7969,
											"end": 8685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8691,
											"end": 9056,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 8691,
											"end": 9056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8830,
											"end": 8834,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8868,
											"end": 8870,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8857,
											"end": 8866,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8853,
											"end": 8871,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8845,
											"end": 8871,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8845,
											"end": 8871,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8917,
											"end": 8926,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8911,
											"end": 8915,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8907,
											"end": 8927,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8903,
											"end": 8904,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8892,
											"end": 8901,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8888,
											"end": 8905,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8881,
											"end": 8928,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8945,
											"end": 9049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 9044,
											"end": 9048,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9035,
											"end": 9041,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8945,
											"end": 9049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 8945,
											"end": 9049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8945,
											"end": 9049,
											"name": "tag",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 8945,
											"end": 9049,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8937,
											"end": 9049,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8937,
											"end": 9049,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8691,
											"end": 9056,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8691,
											"end": 9056,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8691,
											"end": 9056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8691,
											"end": 9056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8691,
											"end": 9056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9062,
											"end": 9485,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 9062,
											"end": 9485,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9203,
											"end": 9207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9241,
											"end": 9243,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9230,
											"end": 9239,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9226,
											"end": 9244,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9218,
											"end": 9244,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9218,
											"end": 9244,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9290,
											"end": 9299,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9284,
											"end": 9288,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9280,
											"end": 9300,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9276,
											"end": 9277,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9265,
											"end": 9274,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9261,
											"end": 9278,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9254,
											"end": 9301,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9318,
											"end": 9396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 9391,
											"end": 9395,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9382,
											"end": 9388,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9318,
											"end": 9396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 9318,
											"end": 9396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9318,
											"end": 9396,
											"name": "tag",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 9318,
											"end": 9396,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9310,
											"end": 9396,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9310,
											"end": 9396,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9406,
											"end": 9478,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 9474,
											"end": 9476,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9463,
											"end": 9472,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9459,
											"end": 9477,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9450,
											"end": 9456,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9406,
											"end": 9478,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 9406,
											"end": 9478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9406,
											"end": 9478,
											"name": "tag",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 9406,
											"end": 9478,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9062,
											"end": 9485,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9062,
											"end": 9485,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9062,
											"end": 9485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9062,
											"end": 9485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9062,
											"end": 9485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9062,
											"end": 9485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9491,
											"end": 9965,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 9491,
											"end": 9965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9559,
											"end": 9565,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9567,
											"end": 9573,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9618,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9604,
											"end": 9613,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9595,
											"end": 9602,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9591,
											"end": 9614,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9587,
											"end": 9619,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 9584,
											"end": 9703,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9584,
											"end": 9703,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 9584,
											"end": 9703,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9622,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 9622,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 9622,
											"end": 9701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9622,
											"end": 9701,
											"name": "tag",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 9622,
											"end": 9701,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9584,
											"end": 9703,
											"name": "tag",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 9584,
											"end": 9703,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9742,
											"end": 9743,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9767,
											"end": 9820,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 9812,
											"end": 9819,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9803,
											"end": 9809,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9792,
											"end": 9801,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9788,
											"end": 9810,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9767,
											"end": 9820,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 9767,
											"end": 9820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9767,
											"end": 9820,
											"name": "tag",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 9767,
											"end": 9820,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9757,
											"end": 9820,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9757,
											"end": 9820,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9713,
											"end": 9830,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9869,
											"end": 9871,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9895,
											"end": 9948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 9940,
											"end": 9947,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9931,
											"end": 9937,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9920,
											"end": 9929,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9916,
											"end": 9938,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9895,
											"end": 9948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 9895,
											"end": 9948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9895,
											"end": 9948,
											"name": "tag",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 9895,
											"end": 9948,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 9948,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 9948,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9840,
											"end": 9958,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9491,
											"end": 9965,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9491,
											"end": 9965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9491,
											"end": 9965,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9491,
											"end": 9965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9491,
											"end": 9965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9491,
											"end": 9965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9971,
											"end": 10088,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 9971,
											"end": 10088,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10080,
											"end": 10081,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10077,
											"end": 10078,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10070,
											"end": 10082,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10094,
											"end": 10211,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 10094,
											"end": 10211,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10203,
											"end": 10204,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10200,
											"end": 10201,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10193,
											"end": 10205,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10217,
											"end": 10397,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 10217,
											"end": 10397,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10265,
											"end": 10342,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10255,
											"end": 10343,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10362,
											"end": 10366,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 10359,
											"end": 10360,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10352,
											"end": 10367,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10386,
											"end": 10390,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10383,
											"end": 10384,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10376,
											"end": 10391,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10403,
											"end": 10684,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 10403,
											"end": 10684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10486,
											"end": 10513,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 10508,
											"end": 10512,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10486,
											"end": 10513,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 10486,
											"end": 10513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10486,
											"end": 10513,
											"name": "tag",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 10486,
											"end": 10513,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10478,
											"end": 10484,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10474,
											"end": 10514,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10616,
											"end": 10622,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10604,
											"end": 10614,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10601,
											"end": 10623,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10580,
											"end": 10598,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10568,
											"end": 10578,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10565,
											"end": 10599,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10562,
											"end": 10624,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 10559,
											"end": 10647,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10559,
											"end": 10647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 10559,
											"end": 10647,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10627,
											"end": 10645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 10627,
											"end": 10645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 10627,
											"end": 10645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10627,
											"end": 10645,
											"name": "tag",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 10627,
											"end": 10645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10559,
											"end": 10647,
											"name": "tag",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 10559,
											"end": 10647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10667,
											"end": 10677,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10663,
											"end": 10665,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10656,
											"end": 10678,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10446,
											"end": 10684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10403,
											"end": 10684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10403,
											"end": 10684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10403,
											"end": 10684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10690,
											"end": 10819,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 10690,
											"end": 10819,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10724,
											"end": 10730,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10751,
											"end": 10771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 10751,
											"end": 10771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 10751,
											"end": 10771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10751,
											"end": 10771,
											"name": "tag",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 10751,
											"end": 10771,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10741,
											"end": 10771,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10741,
											"end": 10771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10780,
											"end": 10813,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 10808,
											"end": 10812,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10800,
											"end": 10806,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10780,
											"end": 10813,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 10780,
											"end": 10813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10780,
											"end": 10813,
											"name": "tag",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 10780,
											"end": 10813,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10690,
											"end": 10819,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10690,
											"end": 10819,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10690,
											"end": 10819,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10690,
											"end": 10819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10825,
											"end": 11133,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 10825,
											"end": 11133,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10887,
											"end": 10891,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10977,
											"end": 10995,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10969,
											"end": 10975,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10966,
											"end": 10996,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10963,
											"end": 11019,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10963,
											"end": 11019,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 10963,
											"end": 11019,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10999,
											"end": 11017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 10999,
											"end": 11017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 10999,
											"end": 11017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10999,
											"end": 11017,
											"name": "tag",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 10999,
											"end": 11017,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10963,
											"end": 11019,
											"name": "tag",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 10963,
											"end": 11019,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11037,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 11059,
											"end": 11065,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11037,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 11037,
											"end": 11066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11037,
											"end": 11066,
											"name": "tag",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 11037,
											"end": 11066,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11029,
											"end": 11066,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11029,
											"end": 11066,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11121,
											"end": 11125,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11115,
											"end": 11119,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11111,
											"end": 11126,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11103,
											"end": 11126,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11103,
											"end": 11126,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10825,
											"end": 11133,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10825,
											"end": 11133,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10825,
											"end": 11133,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10825,
											"end": 11133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11287,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 11139,
											"end": 11287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11237,
											"end": 11243,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11232,
											"end": 11235,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11227,
											"end": 11230,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11214,
											"end": 11244,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 11278,
											"end": 11279,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11269,
											"end": 11275,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11264,
											"end": 11267,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11260,
											"end": 11276,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11253,
											"end": 11280,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11293,
											"end": 11718,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 11293,
											"end": 11718,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11371,
											"end": 11376,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11396,
											"end": 11462,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 11412,
											"end": 11461,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 11454,
											"end": 11460,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11412,
											"end": 11461,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 11412,
											"end": 11461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11412,
											"end": 11461,
											"name": "tag",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 11412,
											"end": 11461,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11396,
											"end": 11462,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 11396,
											"end": 11462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11396,
											"end": 11462,
											"name": "tag",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 11396,
											"end": 11462,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11387,
											"end": 11462,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11387,
											"end": 11462,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11485,
											"end": 11491,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11478,
											"end": 11483,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11471,
											"end": 11492,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11523,
											"end": 11527,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11516,
											"end": 11521,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11512,
											"end": 11528,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11561,
											"end": 11564,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11552,
											"end": 11558,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11547,
											"end": 11550,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11543,
											"end": 11559,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11540,
											"end": 11565,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 11537,
											"end": 11649,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11537,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 11537,
											"end": 11649,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11568,
											"end": 11647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 11568,
											"end": 11647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 11568,
											"end": 11647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11568,
											"end": 11647,
											"name": "tag",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 11568,
											"end": 11647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11537,
											"end": 11649,
											"name": "tag",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 11537,
											"end": 11649,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11658,
											"end": 11712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 11705,
											"end": 11711,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11700,
											"end": 11703,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11695,
											"end": 11698,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11658,
											"end": 11712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 11658,
											"end": 11712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11658,
											"end": 11712,
											"name": "tag",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 11658,
											"end": 11712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11377,
											"end": 11718,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11293,
											"end": 11718,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 11293,
											"end": 11718,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11293,
											"end": 11718,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11293,
											"end": 11718,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11293,
											"end": 11718,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11293,
											"end": 11718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11738,
											"end": 12078,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 11738,
											"end": 12078,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11794,
											"end": 11799,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11843,
											"end": 11846,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11836,
											"end": 11840,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 11828,
											"end": 11834,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11824,
											"end": 11841,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11820,
											"end": 11847,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 11810,
											"end": 11932,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 11810,
											"end": 11932,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11851,
											"end": 11930,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 11851,
											"end": 11930,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 11851,
											"end": 11930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11851,
											"end": 11930,
											"name": "tag",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 11851,
											"end": 11930,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11810,
											"end": 11932,
											"name": "tag",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 11810,
											"end": 11932,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11968,
											"end": 11974,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11955,
											"end": 11975,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 11993,
											"end": 12072,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 12068,
											"end": 12071,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12060,
											"end": 12066,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12053,
											"end": 12057,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12045,
											"end": 12051,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 12041,
											"end": 12058,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11993,
											"end": 12072,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 11993,
											"end": 12072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11993,
											"end": 12072,
											"name": "tag",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 11993,
											"end": 12072,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11984,
											"end": 12072,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11984,
											"end": 12072,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11800,
											"end": 12078,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11738,
											"end": 12078,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11738,
											"end": 12078,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11738,
											"end": 12078,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11738,
											"end": 12078,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11738,
											"end": 12078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12084,
											"end": 12738,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 12084,
											"end": 12738,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12162,
											"end": 12168,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12170,
											"end": 12176,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12219,
											"end": 12221,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12207,
											"end": 12216,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12198,
											"end": 12205,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12194,
											"end": 12217,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12190,
											"end": 12222,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 12187,
											"end": 12306,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12187,
											"end": 12306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 12187,
											"end": 12306,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12225,
											"end": 12304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 12225,
											"end": 12304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 12225,
											"end": 12304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12225,
											"end": 12304,
											"name": "tag",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 12225,
											"end": 12304,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12187,
											"end": 12306,
											"name": "tag",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 12187,
											"end": 12306,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12373,
											"end": 12374,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12362,
											"end": 12371,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12358,
											"end": 12375,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12345,
											"end": 12376,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 12403,
											"end": 12421,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12395,
											"end": 12401,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12392,
											"end": 12422,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 12389,
											"end": 12506,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12389,
											"end": 12506,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 12389,
											"end": 12506,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12425,
											"end": 12504,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 12425,
											"end": 12504,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 12425,
											"end": 12504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12425,
											"end": 12504,
											"name": "tag",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 12425,
											"end": 12504,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12389,
											"end": 12506,
											"name": "tag",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 12389,
											"end": 12506,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12530,
											"end": 12593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "534"
										},
										{
											"begin": 12585,
											"end": 12592,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12576,
											"end": 12582,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12565,
											"end": 12574,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 12561,
											"end": 12583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12530,
											"end": 12593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 12530,
											"end": 12593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12530,
											"end": 12593,
											"name": "tag",
											"source": 8,
											"value": "534"
										},
										{
											"begin": 12530,
											"end": 12593,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12520,
											"end": 12593,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12520,
											"end": 12593,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12316,
											"end": 12603,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12642,
											"end": 12644,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12668,
											"end": 12721,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 12713,
											"end": 12720,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12704,
											"end": 12710,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12693,
											"end": 12702,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 12689,
											"end": 12711,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12668,
											"end": 12721,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 12668,
											"end": 12721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12668,
											"end": 12721,
											"name": "tag",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 12668,
											"end": 12721,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12658,
											"end": 12721,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12658,
											"end": 12721,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12613,
											"end": 12731,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12084,
											"end": 12738,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12084,
											"end": 12738,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12084,
											"end": 12738,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12084,
											"end": 12738,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12084,
											"end": 12738,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12084,
											"end": 12738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12744,
											"end": 12924,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 12744,
											"end": 12924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12792,
											"end": 12869,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12789,
											"end": 12790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12782,
											"end": 12870,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12889,
											"end": 12893,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 12886,
											"end": 12887,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12879,
											"end": 12894,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12913,
											"end": 12917,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 12910,
											"end": 12911,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12903,
											"end": 12918,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12930,
											"end": 13250,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 12930,
											"end": 13250,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12974,
											"end": 12980,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13011,
											"end": 13012,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 13005,
											"end": 13009,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13001,
											"end": 13013,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 12991,
											"end": 13013,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12991,
											"end": 13013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13058,
											"end": 13059,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 13052,
											"end": 13056,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13048,
											"end": 13060,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13079,
											"end": 13097,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13069,
											"end": 13150,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "538"
										},
										{
											"begin": 13069,
											"end": 13150,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13135,
											"end": 13139,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 13127,
											"end": 13133,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13123,
											"end": 13140,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13113,
											"end": 13140,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13113,
											"end": 13140,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13069,
											"end": 13150,
											"name": "tag",
											"source": 8,
											"value": "538"
										},
										{
											"begin": 13069,
											"end": 13150,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13197,
											"end": 13199,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13189,
											"end": 13195,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13186,
											"end": 13200,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 13166,
											"end": 13184,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13163,
											"end": 13201,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13160,
											"end": 13244,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 13160,
											"end": 13244,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13216,
											"end": 13234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 13216,
											"end": 13234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 13216,
											"end": 13234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13216,
											"end": 13234,
											"name": "tag",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 13216,
											"end": 13234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13160,
											"end": 13244,
											"name": "tag",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 13160,
											"end": 13244,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12981,
											"end": 13250,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12930,
											"end": 13250,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12930,
											"end": 13250,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12930,
											"end": 13250,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12930,
											"end": 13250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13256,
											"end": 13426,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 13256,
											"end": 13426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13396,
											"end": 13418,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 13392,
											"end": 13393,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13384,
											"end": 13390,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13380,
											"end": 13394,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13373,
											"end": 13419,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13256,
											"end": 13426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13256,
											"end": 13426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13432,
											"end": 13798,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 13432,
											"end": 13798,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13574,
											"end": 13577,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13595,
											"end": 13662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 13659,
											"end": 13661,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 13654,
											"end": 13657,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 13595,
											"end": 13662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13662,
											"name": "tag",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 13595,
											"end": 13662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13588,
											"end": 13662,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13588,
											"end": 13662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13671,
											"end": 13764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 13760,
											"end": 13763,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13671,
											"end": 13764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 13671,
											"end": 13764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13671,
											"end": 13764,
											"name": "tag",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 13671,
											"end": 13764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13789,
											"end": 13791,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13784,
											"end": 13787,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13780,
											"end": 13792,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13773,
											"end": 13792,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13773,
											"end": 13792,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13432,
											"end": 13798,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13432,
											"end": 13798,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13432,
											"end": 13798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13432,
											"end": 13798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13804,
											"end": 14223,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 13804,
											"end": 14223,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13970,
											"end": 13974,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14008,
											"end": 14010,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13997,
											"end": 14006,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13993,
											"end": 14011,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13985,
											"end": 14011,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13985,
											"end": 14011,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14057,
											"end": 14066,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14051,
											"end": 14055,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14047,
											"end": 14067,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14043,
											"end": 14044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14032,
											"end": 14041,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14028,
											"end": 14045,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14021,
											"end": 14068,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14085,
											"end": 14216,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "546"
										},
										{
											"begin": 14211,
											"end": 14215,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14085,
											"end": 14216,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 14085,
											"end": 14216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14085,
											"end": 14216,
											"name": "tag",
											"source": 8,
											"value": "546"
										},
										{
											"begin": 14085,
											"end": 14216,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14077,
											"end": 14216,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14077,
											"end": 14216,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13804,
											"end": 14223,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13804,
											"end": 14223,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13804,
											"end": 14223,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13804,
											"end": 14223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14229,
											"end": 14308,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 14229,
											"end": 14308,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14268,
											"end": 14275,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14297,
											"end": 14302,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14286,
											"end": 14302,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14286,
											"end": 14302,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14229,
											"end": 14308,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14229,
											"end": 14308,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14229,
											"end": 14308,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14229,
											"end": 14308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14314,
											"end": 14471,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 14314,
											"end": 14471,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14419,
											"end": 14464,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 14439,
											"end": 14463,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "550"
										},
										{
											"begin": 14457,
											"end": 14462,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14439,
											"end": 14463,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 14439,
											"end": 14463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14439,
											"end": 14463,
											"name": "tag",
											"source": 8,
											"value": "550"
										},
										{
											"begin": 14439,
											"end": 14463,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14419,
											"end": 14464,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 14419,
											"end": 14464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14419,
											"end": 14464,
											"name": "tag",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 14419,
											"end": 14464,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14414,
											"end": 14417,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14407,
											"end": 14465,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14314,
											"end": 14471,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14314,
											"end": 14471,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14314,
											"end": 14471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14477,
											"end": 14571,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 14477,
											"end": 14571,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14510,
											"end": 14518,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14558,
											"end": 14563,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14554,
											"end": 14556,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 14550,
											"end": 14564,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 14529,
											"end": 14564,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14529,
											"end": 14564,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14477,
											"end": 14571,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14477,
											"end": 14571,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14477,
											"end": 14571,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14477,
											"end": 14571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14577,
											"end": 14671,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 14577,
											"end": 14671,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14616,
											"end": 14623,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14645,
											"end": 14665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 14659,
											"end": 14664,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14645,
											"end": 14665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 14645,
											"end": 14665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14645,
											"end": 14665,
											"name": "tag",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 14645,
											"end": 14665,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14634,
											"end": 14665,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14634,
											"end": 14665,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14577,
											"end": 14671,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14577,
											"end": 14671,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14577,
											"end": 14671,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14577,
											"end": 14671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14677,
											"end": 14777,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 14677,
											"end": 14777,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14716,
											"end": 14723,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14745,
											"end": 14771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "555"
										},
										{
											"begin": 14765,
											"end": 14770,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14745,
											"end": 14771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 14745,
											"end": 14771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14745,
											"end": 14771,
											"name": "tag",
											"source": 8,
											"value": "555"
										},
										{
											"begin": 14745,
											"end": 14771,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14734,
											"end": 14771,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14734,
											"end": 14771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14677,
											"end": 14777,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14677,
											"end": 14777,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14677,
											"end": 14777,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14677,
											"end": 14777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14783,
											"end": 14940,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 14783,
											"end": 14940,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14888,
											"end": 14933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 14908,
											"end": 14932,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "558"
										},
										{
											"begin": 14926,
											"end": 14931,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14908,
											"end": 14932,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 14908,
											"end": 14932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14908,
											"end": 14932,
											"name": "tag",
											"source": 8,
											"value": "558"
										},
										{
											"begin": 14908,
											"end": 14932,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14888,
											"end": 14933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 14888,
											"end": 14933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14888,
											"end": 14933,
											"name": "tag",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 14888,
											"end": 14933,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14883,
											"end": 14886,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14876,
											"end": 14934,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14783,
											"end": 14940,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14783,
											"end": 14940,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14783,
											"end": 14940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14946,
											"end": 15343,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 14946,
											"end": 15343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15086,
											"end": 15089,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15101,
											"end": 15176,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "560"
										},
										{
											"begin": 15172,
											"end": 15175,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15163,
											"end": 15169,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 15101,
											"end": 15176,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 15101,
											"end": 15176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15101,
											"end": 15176,
											"name": "tag",
											"source": 8,
											"value": "560"
										},
										{
											"begin": 15101,
											"end": 15176,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15201,
											"end": 15203,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15196,
											"end": 15199,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15192,
											"end": 15204,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15185,
											"end": 15204,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15185,
											"end": 15204,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15214,
											"end": 15289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "561"
										},
										{
											"begin": 15285,
											"end": 15288,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15276,
											"end": 15282,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15214,
											"end": 15289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 15214,
											"end": 15289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15214,
											"end": 15289,
											"name": "tag",
											"source": 8,
											"value": "561"
										},
										{
											"begin": 15214,
											"end": 15289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15314,
											"end": 15316,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 15309,
											"end": 15312,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15305,
											"end": 15317,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15298,
											"end": 15317,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15298,
											"end": 15317,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15334,
											"end": 15337,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15327,
											"end": 15337,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15327,
											"end": 15337,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14946,
											"end": 15343,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14946,
											"end": 15343,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14946,
											"end": 15343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14946,
											"end": 15343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14946,
											"end": 15343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14946,
											"end": 15343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15349,
											"end": 15529,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 15349,
											"end": 15529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15397,
											"end": 15474,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15394,
											"end": 15395,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15387,
											"end": 15475,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15494,
											"end": 15498,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 15491,
											"end": 15492,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 15484,
											"end": 15499,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15518,
											"end": 15522,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 15515,
											"end": 15516,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15508,
											"end": 15523,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 15535,
											"end": 15711,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 15535,
											"end": 15711,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15567,
											"end": 15568,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15584,
											"end": 15604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "564"
										},
										{
											"begin": 15602,
											"end": 15603,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15584,
											"end": 15604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 15584,
											"end": 15604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15584,
											"end": 15604,
											"name": "tag",
											"source": 8,
											"value": "564"
										},
										{
											"begin": 15584,
											"end": 15604,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15579,
											"end": 15604,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15579,
											"end": 15604,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15618,
											"end": 15638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "565"
										},
										{
											"begin": 15636,
											"end": 15637,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15618,
											"end": 15638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 15618,
											"end": 15638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15618,
											"end": 15638,
											"name": "tag",
											"source": 8,
											"value": "565"
										},
										{
											"begin": 15618,
											"end": 15638,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15613,
											"end": 15638,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15613,
											"end": 15638,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15657,
											"end": 15658,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15647,
											"end": 15682,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 15647,
											"end": 15682,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15662,
											"end": 15680,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "567"
										},
										{
											"begin": 15662,
											"end": 15680,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 15662,
											"end": 15680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15662,
											"end": 15680,
											"name": "tag",
											"source": 8,
											"value": "567"
										},
										{
											"begin": 15662,
											"end": 15680,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15647,
											"end": 15682,
											"name": "tag",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 15647,
											"end": 15682,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15703,
											"end": 15704,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15700,
											"end": 15701,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15696,
											"end": 15705,
											"name": "MOD",
											"source": 8
										},
										{
											"begin": 15691,
											"end": 15705,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15691,
											"end": 15705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15535,
											"end": 15711,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15535,
											"end": 15711,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15535,
											"end": 15711,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15535,
											"end": 15711,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15535,
											"end": 15711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15717,
											"end": 15897,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 15717,
											"end": 15897,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15765,
											"end": 15842,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15762,
											"end": 15763,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15755,
											"end": 15843,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15862,
											"end": 15866,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 15859,
											"end": 15860,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 15852,
											"end": 15867,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15886,
											"end": 15890,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 15883,
											"end": 15884,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15876,
											"end": 15891,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 15903,
											"end": 16313,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 15903,
											"end": 16313,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15943,
											"end": 15950,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15966,
											"end": 15986,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "570"
										},
										{
											"begin": 15984,
											"end": 15985,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15966,
											"end": 15986,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 15966,
											"end": 15986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15966,
											"end": 15986,
											"name": "tag",
											"source": 8,
											"value": "570"
										},
										{
											"begin": 15966,
											"end": 15986,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15961,
											"end": 15986,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15961,
											"end": 15986,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16000,
											"end": 16020,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "571"
										},
										{
											"begin": 16018,
											"end": 16019,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16000,
											"end": 16020,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 16000,
											"end": 16020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16000,
											"end": 16020,
											"name": "tag",
											"source": 8,
											"value": "571"
										},
										{
											"begin": 16000,
											"end": 16020,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15995,
											"end": 16020,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15995,
											"end": 16020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16055,
											"end": 16056,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16052,
											"end": 16053,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16048,
											"end": 16057,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 16077,
											"end": 16107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "572"
										},
										{
											"begin": 16095,
											"end": 16106,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16077,
											"end": 16107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 16077,
											"end": 16107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16077,
											"end": 16107,
											"name": "tag",
											"source": 8,
											"value": "572"
										},
										{
											"begin": 16077,
											"end": 16107,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16066,
											"end": 16107,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16066,
											"end": 16107,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16256,
											"end": 16257,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16247,
											"end": 16254,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16243,
											"end": 16258,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 16240,
											"end": 16241,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16237,
											"end": 16259,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 16217,
											"end": 16218,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16210,
											"end": 16219,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16190,
											"end": 16273,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 16167,
											"end": 16306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "573"
										},
										{
											"begin": 16167,
											"end": 16306,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16286,
											"end": 16304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "574"
										},
										{
											"begin": 16286,
											"end": 16304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 16286,
											"end": 16304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16286,
											"end": 16304,
											"name": "tag",
											"source": 8,
											"value": "574"
										},
										{
											"begin": 16286,
											"end": 16304,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16167,
											"end": 16306,
											"name": "tag",
											"source": 8,
											"value": "573"
										},
										{
											"begin": 16167,
											"end": 16306,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15951,
											"end": 16313,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15903,
											"end": 16313,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15903,
											"end": 16313,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15903,
											"end": 16313,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15903,
											"end": 16313,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15903,
											"end": 16313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16319,
											"end": 16477,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 16319,
											"end": 16477,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16459,
											"end": 16469,
											"name": "PUSH",
											"source": 8,
											"value": "596F7520776F6E21000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16455,
											"end": 16456,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16447,
											"end": 16453,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16443,
											"end": 16457,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16436,
											"end": 16470,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16319,
											"end": 16477,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16319,
											"end": 16477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16483,
											"end": 16848,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 16483,
											"end": 16848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16625,
											"end": 16628,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16646,
											"end": 16712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "577"
										},
										{
											"begin": 16710,
											"end": 16711,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 16705,
											"end": 16708,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16646,
											"end": 16712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 16646,
											"end": 16712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16646,
											"end": 16712,
											"name": "tag",
											"source": 8,
											"value": "577"
										},
										{
											"begin": 16646,
											"end": 16712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16639,
											"end": 16712,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16639,
											"end": 16712,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16721,
											"end": 16814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "578"
										},
										{
											"begin": 16810,
											"end": 16813,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16721,
											"end": 16814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 16721,
											"end": 16814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16721,
											"end": 16814,
											"name": "tag",
											"source": 8,
											"value": "578"
										},
										{
											"begin": 16721,
											"end": 16814,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16839,
											"end": 16841,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16834,
											"end": 16837,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16830,
											"end": 16842,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16823,
											"end": 16842,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16823,
											"end": 16842,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16483,
											"end": 16848,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16483,
											"end": 16848,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16483,
											"end": 16848,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16483,
											"end": 16848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16854,
											"end": 17481,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 16854,
											"end": 17481,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17070,
											"end": 17074,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17108,
											"end": 17110,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 17097,
											"end": 17106,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17093,
											"end": 17111,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17085,
											"end": 17111,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17085,
											"end": 17111,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17121,
											"end": 17192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "580"
										},
										{
											"begin": 17189,
											"end": 17190,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17178,
											"end": 17187,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17174,
											"end": 17191,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17165,
											"end": 17171,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 17121,
											"end": 17192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 17121,
											"end": 17192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17121,
											"end": 17192,
											"name": "tag",
											"source": 8,
											"value": "580"
										},
										{
											"begin": 17121,
											"end": 17192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17202,
											"end": 17268,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "581"
										},
										{
											"begin": 17264,
											"end": 17266,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17253,
											"end": 17262,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17249,
											"end": 17267,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17240,
											"end": 17246,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17202,
											"end": 17268,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 17202,
											"end": 17268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17202,
											"end": 17268,
											"name": "tag",
											"source": 8,
											"value": "581"
										},
										{
											"begin": 17202,
											"end": 17268,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17315,
											"end": 17324,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17309,
											"end": 17313,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17305,
											"end": 17325,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17300,
											"end": 17302,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17289,
											"end": 17298,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17285,
											"end": 17303,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17278,
											"end": 17326,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17343,
											"end": 17474,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "582"
										},
										{
											"begin": 17469,
											"end": 17473,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17343,
											"end": 17474,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 17343,
											"end": 17474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17343,
											"end": 17474,
											"name": "tag",
											"source": 8,
											"value": "582"
										},
										{
											"begin": 17343,
											"end": 17474,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17335,
											"end": 17474,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17335,
											"end": 17474,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16854,
											"end": 17481,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 16854,
											"end": 17481,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16854,
											"end": 17481,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16854,
											"end": 17481,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16854,
											"end": 17481,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16854,
											"end": 17481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17487,
											"end": 17646,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 17487,
											"end": 17646,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17627,
											"end": 17638,
											"name": "PUSH",
											"source": 8,
											"value": "596F75206C6F7374210000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17623,
											"end": 17624,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17615,
											"end": 17621,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17611,
											"end": 17625,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17604,
											"end": 17639,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17487,
											"end": 17646,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17487,
											"end": 17646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17652,
											"end": 18017,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 17652,
											"end": 18017,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17794,
											"end": 17797,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17815,
											"end": 17881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "585"
										},
										{
											"begin": 17879,
											"end": 17880,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 17874,
											"end": 17877,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17815,
											"end": 17881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 17815,
											"end": 17881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17815,
											"end": 17881,
											"name": "tag",
											"source": 8,
											"value": "585"
										},
										{
											"begin": 17815,
											"end": 17881,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17808,
											"end": 17881,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17808,
											"end": 17881,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17890,
											"end": 17983,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "586"
										},
										{
											"begin": 17979,
											"end": 17982,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17890,
											"end": 17983,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 17890,
											"end": 17983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17890,
											"end": 17983,
											"name": "tag",
											"source": 8,
											"value": "586"
										},
										{
											"begin": 17890,
											"end": 17983,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18008,
											"end": 18010,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18003,
											"end": 18006,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17999,
											"end": 18011,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17992,
											"end": 18011,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17992,
											"end": 18011,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17652,
											"end": 18017,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17652,
											"end": 18017,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17652,
											"end": 18017,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17652,
											"end": 18017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18023,
											"end": 18650,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 18023,
											"end": 18650,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18239,
											"end": 18243,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18277,
											"end": 18279,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 18266,
											"end": 18275,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18262,
											"end": 18280,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18254,
											"end": 18280,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18254,
											"end": 18280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18290,
											"end": 18361,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "588"
										},
										{
											"begin": 18358,
											"end": 18359,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18347,
											"end": 18356,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18343,
											"end": 18360,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18334,
											"end": 18340,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 18290,
											"end": 18361,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 18290,
											"end": 18361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18290,
											"end": 18361,
											"name": "tag",
											"source": 8,
											"value": "588"
										},
										{
											"begin": 18290,
											"end": 18361,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18371,
											"end": 18437,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "589"
										},
										{
											"begin": 18433,
											"end": 18435,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18422,
											"end": 18431,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18418,
											"end": 18436,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18409,
											"end": 18415,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18371,
											"end": 18437,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 18371,
											"end": 18437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18371,
											"end": 18437,
											"name": "tag",
											"source": 8,
											"value": "589"
										},
										{
											"begin": 18371,
											"end": 18437,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18484,
											"end": 18493,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18478,
											"end": 18482,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18474,
											"end": 18494,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18469,
											"end": 18471,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18458,
											"end": 18467,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18454,
											"end": 18472,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18447,
											"end": 18495,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18512,
											"end": 18643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "590"
										},
										{
											"begin": 18638,
											"end": 18642,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18512,
											"end": 18643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 18512,
											"end": 18643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18512,
											"end": 18643,
											"name": "tag",
											"source": 8,
											"value": "590"
										},
										{
											"begin": 18512,
											"end": 18643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18504,
											"end": 18643,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18504,
											"end": 18643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18023,
											"end": 18650,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 18023,
											"end": 18650,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18023,
											"end": 18650,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18023,
											"end": 18650,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18023,
											"end": 18650,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18023,
											"end": 18650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18656,
											"end": 18820,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 18656,
											"end": 18820,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18796,
											"end": 18812,
											"name": "PUSH",
											"source": 8,
											"value": "4974656D206E6F7420666F756E64000000000000000000000000000000000000"
										},
										{
											"begin": 18792,
											"end": 18793,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18784,
											"end": 18790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18780,
											"end": 18794,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18773,
											"end": 18813,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18656,
											"end": 18820,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18656,
											"end": 18820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18826,
											"end": 19192,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 18826,
											"end": 19192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18968,
											"end": 18971,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18989,
											"end": 19056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "593"
										},
										{
											"begin": 19053,
											"end": 19055,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 19048,
											"end": 19051,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18989,
											"end": 19056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 18989,
											"end": 19056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18989,
											"end": 19056,
											"name": "tag",
											"source": 8,
											"value": "593"
										},
										{
											"begin": 18989,
											"end": 19056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18982,
											"end": 19056,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18982,
											"end": 19056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19065,
											"end": 19158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "594"
										},
										{
											"begin": 19154,
											"end": 19157,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19065,
											"end": 19158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 19065,
											"end": 19158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19065,
											"end": 19158,
											"name": "tag",
											"source": 8,
											"value": "594"
										},
										{
											"begin": 19065,
											"end": 19158,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19183,
											"end": 19185,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19178,
											"end": 19181,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19174,
											"end": 19186,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19167,
											"end": 19186,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19167,
											"end": 19186,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18826,
											"end": 19192,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18826,
											"end": 19192,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18826,
											"end": 19192,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18826,
											"end": 19192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19198,
											"end": 19617,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 19198,
											"end": 19617,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19364,
											"end": 19368,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19402,
											"end": 19404,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19391,
											"end": 19400,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19387,
											"end": 19405,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19379,
											"end": 19405,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19379,
											"end": 19405,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19451,
											"end": 19460,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19445,
											"end": 19449,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19441,
											"end": 19461,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19437,
											"end": 19438,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19426,
											"end": 19435,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19422,
											"end": 19439,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19415,
											"end": 19462,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19479,
											"end": 19610,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 19605,
											"end": 19609,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19479,
											"end": 19610,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 19479,
											"end": 19610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19479,
											"end": 19610,
											"name": "tag",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 19479,
											"end": 19610,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19471,
											"end": 19610,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19471,
											"end": 19610,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19198,
											"end": 19617,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19198,
											"end": 19617,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19198,
											"end": 19617,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19198,
											"end": 19617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19623,
											"end": 19772,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 19623,
											"end": 19772,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19672,
											"end": 19678,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19706,
											"end": 19711,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19700,
											"end": 19712,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 19690,
											"end": 19712,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19690,
											"end": 19712,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19732,
											"end": 19765,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "598"
										},
										{
											"begin": 19758,
											"end": 19764,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19732,
											"end": 19765,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 19732,
											"end": 19765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19732,
											"end": 19765,
											"name": "tag",
											"source": 8,
											"value": "598"
										},
										{
											"begin": 19732,
											"end": 19765,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19722,
											"end": 19765,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19722,
											"end": 19765,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19623,
											"end": 19772,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19623,
											"end": 19772,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19623,
											"end": 19772,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19623,
											"end": 19772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19778,
											"end": 19919,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 19778,
											"end": 19919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19827,
											"end": 19831,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19850,
											"end": 19853,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19842,
											"end": 19853,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19842,
											"end": 19853,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19873,
											"end": 19876,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19870,
											"end": 19871,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19863,
											"end": 19877,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19907,
											"end": 19911,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19904,
											"end": 19905,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19894,
											"end": 19912,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 19886,
											"end": 19912,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19886,
											"end": 19912,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19778,
											"end": 19919,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19778,
											"end": 19919,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19778,
											"end": 19919,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19778,
											"end": 19919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19925,
											"end": 20018,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 19925,
											"end": 20018,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19962,
											"end": 19968,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20009,
											"end": 20011,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20004,
											"end": 20006,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 19997,
											"end": 20002,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19993,
											"end": 20007,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19989,
											"end": 20012,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 19979,
											"end": 20012,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19979,
											"end": 20012,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19925,
											"end": 20018,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19925,
											"end": 20018,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19925,
											"end": 20018,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19925,
											"end": 20018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20024,
											"end": 20131,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 20024,
											"end": 20131,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20068,
											"end": 20076,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20118,
											"end": 20123,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20112,
											"end": 20116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20108,
											"end": 20124,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 20087,
											"end": 20124,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20087,
											"end": 20124,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20024,
											"end": 20131,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 20024,
											"end": 20131,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20024,
											"end": 20131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20024,
											"end": 20131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20024,
											"end": 20131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20137,
											"end": 20530,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 20137,
											"end": 20530,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20206,
											"end": 20212,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20256,
											"end": 20257,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 20244,
											"end": 20254,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20240,
											"end": 20258,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 20279,
											"end": 20376,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "603"
										},
										{
											"begin": 20309,
											"end": 20375,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20298,
											"end": 20307,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20279,
											"end": 20376,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 20279,
											"end": 20376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20279,
											"end": 20376,
											"name": "tag",
											"source": 8,
											"value": "603"
										},
										{
											"begin": 20279,
											"end": 20376,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20397,
											"end": 20436,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "604"
										},
										{
											"begin": 20427,
											"end": 20435,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 20416,
											"end": 20425,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20397,
											"end": 20436,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 20397,
											"end": 20436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20397,
											"end": 20436,
											"name": "tag",
											"source": 8,
											"value": "604"
										},
										{
											"begin": 20397,
											"end": 20436,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20385,
											"end": 20436,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 20385,
											"end": 20436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20469,
											"end": 20473,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 20465,
											"end": 20474,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 20458,
											"end": 20463,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20454,
											"end": 20475,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 20445,
											"end": 20475,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 20445,
											"end": 20475,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20518,
											"end": 20522,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 20508,
											"end": 20516,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 20504,
											"end": 20523,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 20497,
											"end": 20502,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20494,
											"end": 20524,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 20484,
											"end": 20524,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 20484,
											"end": 20524,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20213,
											"end": 20530,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20213,
											"end": 20530,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20137,
											"end": 20530,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 20137,
											"end": 20530,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 20137,
											"end": 20530,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20137,
											"end": 20530,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20137,
											"end": 20530,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20137,
											"end": 20530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20536,
											"end": 20596,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 20536,
											"end": 20596,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20564,
											"end": 20567,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20585,
											"end": 20590,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20578,
											"end": 20590,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20578,
											"end": 20590,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20536,
											"end": 20596,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20536,
											"end": 20596,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20536,
											"end": 20596,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20536,
											"end": 20596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20602,
											"end": 20744,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 20602,
											"end": 20744,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20652,
											"end": 20661,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20685,
											"end": 20738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "607"
										},
										{
											"begin": 20703,
											"end": 20737,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "608"
										},
										{
											"begin": 20712,
											"end": 20736,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "609"
										},
										{
											"begin": 20730,
											"end": 20735,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20712,
											"end": 20736,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 20712,
											"end": 20736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20712,
											"end": 20736,
											"name": "tag",
											"source": 8,
											"value": "609"
										},
										{
											"begin": 20712,
											"end": 20736,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20703,
											"end": 20737,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 20703,
											"end": 20737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20703,
											"end": 20737,
											"name": "tag",
											"source": 8,
											"value": "608"
										},
										{
											"begin": 20703,
											"end": 20737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20685,
											"end": 20738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 20685,
											"end": 20738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20685,
											"end": 20738,
											"name": "tag",
											"source": 8,
											"value": "607"
										},
										{
											"begin": 20685,
											"end": 20738,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20672,
											"end": 20738,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20672,
											"end": 20738,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20602,
											"end": 20744,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20602,
											"end": 20744,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20602,
											"end": 20744,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20602,
											"end": 20744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20750,
											"end": 20825,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 20750,
											"end": 20825,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20793,
											"end": 20796,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20814,
											"end": 20819,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20807,
											"end": 20819,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20807,
											"end": 20819,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20750,
											"end": 20825,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20750,
											"end": 20825,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20750,
											"end": 20825,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20750,
											"end": 20825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20831,
											"end": 21100,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 20831,
											"end": 21100,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20941,
											"end": 20980,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "612"
										},
										{
											"begin": 20972,
											"end": 20979,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20941,
											"end": 20980,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 20941,
											"end": 20980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20941,
											"end": 20980,
											"name": "tag",
											"source": 8,
											"value": "612"
										},
										{
											"begin": 20941,
											"end": 20980,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21002,
											"end": 21093,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "613"
										},
										{
											"begin": 21051,
											"end": 21092,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "614"
										},
										{
											"begin": 21075,
											"end": 21091,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21051,
											"end": 21092,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 21051,
											"end": 21092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21051,
											"end": 21092,
											"name": "tag",
											"source": 8,
											"value": "614"
										},
										{
											"begin": 21051,
											"end": 21092,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21043,
											"end": 21049,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21036,
											"end": 21040,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21030,
											"end": 21041,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 21002,
											"end": 21093,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 21002,
											"end": 21093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21002,
											"end": 21093,
											"name": "tag",
											"source": 8,
											"value": "613"
										},
										{
											"begin": 21002,
											"end": 21093,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20996,
											"end": 21000,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20989,
											"end": 21094,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 20907,
											"end": 21100,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20831,
											"end": 21100,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20831,
											"end": 21100,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20831,
											"end": 21100,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20831,
											"end": 21100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21106,
											"end": 21179,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 21106,
											"end": 21179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21151,
											"end": 21154,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21106,
											"end": 21179,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21106,
											"end": 21179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21185,
											"end": 21374,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 21185,
											"end": 21374,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21262,
											"end": 21294,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "617"
										},
										{
											"begin": 21262,
											"end": 21294,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 21262,
											"end": 21294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21262,
											"end": 21294,
											"name": "tag",
											"source": 8,
											"value": "617"
										},
										{
											"begin": 21262,
											"end": 21294,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21303,
											"end": 21368,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "618"
										},
										{
											"begin": 21361,
											"end": 21367,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21353,
											"end": 21359,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21347,
											"end": 21351,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21303,
											"end": 21368,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 21303,
											"end": 21368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21303,
											"end": 21368,
											"name": "tag",
											"source": 8,
											"value": "618"
										},
										{
											"begin": 21303,
											"end": 21368,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21238,
											"end": 21374,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21185,
											"end": 21374,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21185,
											"end": 21374,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21185,
											"end": 21374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21380,
											"end": 21566,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 21380,
											"end": 21566,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21440,
											"end": 21560,
											"name": "tag",
											"source": 8,
											"value": "620"
										},
										{
											"begin": 21440,
											"end": 21560,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21457,
											"end": 21460,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21450,
											"end": 21455,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21447,
											"end": 21461,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 21440,
											"end": 21560,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21440,
											"end": 21560,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "622"
										},
										{
											"begin": 21440,
											"end": 21560,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21511,
											"end": 21550,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "623"
										},
										{
											"begin": 21548,
											"end": 21549,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21541,
											"end": 21546,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21511,
											"end": 21550,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 21511,
											"end": 21550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21511,
											"end": 21550,
											"name": "tag",
											"source": 8,
											"value": "623"
										},
										{
											"begin": 21511,
											"end": 21550,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21484,
											"end": 21485,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 21477,
											"end": 21482,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21473,
											"end": 21486,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21464,
											"end": 21486,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21464,
											"end": 21486,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21440,
											"end": 21560,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "620"
										},
										{
											"begin": 21440,
											"end": 21560,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21440,
											"end": 21560,
											"name": "tag",
											"source": 8,
											"value": "622"
										},
										{
											"begin": 21440,
											"end": 21560,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21380,
											"end": 21566,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21380,
											"end": 21566,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21380,
											"end": 21566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21572,
											"end": 22115,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 21572,
											"end": 22115,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21673,
											"end": 21675,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 21668,
											"end": 21671,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21665,
											"end": 21676,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 21662,
											"end": 22108,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21662,
											"end": 22108,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "625"
										},
										{
											"begin": 21662,
											"end": 22108,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21707,
											"end": 21745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "626"
										},
										{
											"begin": 21739,
											"end": 21744,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21707,
											"end": 21745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 21707,
											"end": 21745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21707,
											"end": 21745,
											"name": "tag",
											"source": 8,
											"value": "626"
										},
										{
											"begin": 21707,
											"end": 21745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21791,
											"end": 21820,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "627"
										},
										{
											"begin": 21809,
											"end": 21819,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21791,
											"end": 21820,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 21791,
											"end": 21820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21791,
											"end": 21820,
											"name": "tag",
											"source": 8,
											"value": "627"
										},
										{
											"begin": 21791,
											"end": 21820,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21781,
											"end": 21789,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21777,
											"end": 21821,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21974,
											"end": 21976,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21962,
											"end": 21972,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 21959,
											"end": 21977,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 21956,
											"end": 22005,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21956,
											"end": 22005,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "628"
										},
										{
											"begin": 21956,
											"end": 22005,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21995,
											"end": 22003,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21980,
											"end": 22003,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21980,
											"end": 22003,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21956,
											"end": 22005,
											"name": "tag",
											"source": 8,
											"value": "628"
										},
										{
											"begin": 21956,
											"end": 22005,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22018,
											"end": 22098,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "629"
										},
										{
											"begin": 22074,
											"end": 22096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "630"
										},
										{
											"begin": 22092,
											"end": 22095,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 22074,
											"end": 22096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 22074,
											"end": 22096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22074,
											"end": 22096,
											"name": "tag",
											"source": 8,
											"value": "630"
										},
										{
											"begin": 22074,
											"end": 22096,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22064,
											"end": 22072,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22060,
											"end": 22097,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22047,
											"end": 22058,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22018,
											"end": 22098,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 22018,
											"end": 22098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22018,
											"end": 22098,
											"name": "tag",
											"source": 8,
											"value": "629"
										},
										{
											"begin": 22018,
											"end": 22098,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21677,
											"end": 22108,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21677,
											"end": 22108,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21662,
											"end": 22108,
											"name": "tag",
											"source": 8,
											"value": "625"
										},
										{
											"begin": 21662,
											"end": 22108,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21572,
											"end": 22115,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21572,
											"end": 22115,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21572,
											"end": 22115,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21572,
											"end": 22115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22121,
											"end": 22238,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 22121,
											"end": 22238,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22175,
											"end": 22183,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22225,
											"end": 22230,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22219,
											"end": 22223,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22215,
											"end": 22231,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 22194,
											"end": 22231,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22194,
											"end": 22231,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22121,
											"end": 22238,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 22121,
											"end": 22238,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22121,
											"end": 22238,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22121,
											"end": 22238,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22121,
											"end": 22238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22244,
											"end": 22413,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 22244,
											"end": 22413,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22288,
											"end": 22294,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22321,
											"end": 22372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "633"
										},
										{
											"begin": 22369,
											"end": 22370,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22365,
											"end": 22371,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 22357,
											"end": 22362,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 22354,
											"end": 22355,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 22350,
											"end": 22363,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 22321,
											"end": 22372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 22321,
											"end": 22372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22321,
											"end": 22372,
											"name": "tag",
											"source": 8,
											"value": "633"
										},
										{
											"begin": 22321,
											"end": 22372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22317,
											"end": 22373,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 22402,
											"end": 22406,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22396,
											"end": 22400,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22392,
											"end": 22407,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 22382,
											"end": 22407,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22382,
											"end": 22407,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22295,
											"end": 22413,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22244,
											"end": 22413,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 22244,
											"end": 22413,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22244,
											"end": 22413,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22244,
											"end": 22413,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22244,
											"end": 22413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22418,
											"end": 22713,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 22418,
											"end": 22713,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22494,
											"end": 22498,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22640,
											"end": 22669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "635"
										},
										{
											"begin": 22665,
											"end": 22668,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22659,
											"end": 22663,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22640,
											"end": 22669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 22640,
											"end": 22669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22640,
											"end": 22669,
											"name": "tag",
											"source": 8,
											"value": "635"
										},
										{
											"begin": 22640,
											"end": 22669,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22632,
											"end": 22669,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22632,
											"end": 22669,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22702,
											"end": 22705,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22699,
											"end": 22700,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 22695,
											"end": 22706,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 22689,
											"end": 22693,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22686,
											"end": 22707,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 22678,
											"end": 22707,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22678,
											"end": 22707,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22418,
											"end": 22713,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 22418,
											"end": 22713,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22418,
											"end": 22713,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22418,
											"end": 22713,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22418,
											"end": 22713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22718,
											"end": 24169,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 22718,
											"end": 24169,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22829,
											"end": 22832,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22823,
											"end": 22827,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22820,
											"end": 22833,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 22817,
											"end": 22843,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "637"
										},
										{
											"begin": 22817,
											"end": 22843,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 22836,
											"end": 22841,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22836,
											"end": 22841,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22836,
											"end": 22841,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "636"
										},
										{
											"begin": 22836,
											"end": 22841,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22817,
											"end": 22843,
											"name": "tag",
											"source": 8,
											"value": "637"
										},
										{
											"begin": 22817,
											"end": 22843,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22867,
											"end": 22901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "638"
										},
										{
											"begin": 22897,
											"end": 22900,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22867,
											"end": 22901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 22867,
											"end": 22901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22867,
											"end": 22901,
											"name": "tag",
											"source": 8,
											"value": "638"
										},
										{
											"begin": 22867,
											"end": 22901,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22966,
											"end": 22984,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22958,
											"end": 22964,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22955,
											"end": 22985,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 22952,
											"end": 23008,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 22952,
											"end": 23008,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "639"
										},
										{
											"begin": 22952,
											"end": 23008,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 22988,
											"end": 23006,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "640"
										},
										{
											"begin": 22988,
											"end": 23006,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 22988,
											"end": 23006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22988,
											"end": 23006,
											"name": "tag",
											"source": 8,
											"value": "640"
										},
										{
											"begin": 22988,
											"end": 23006,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22952,
											"end": 23008,
											"name": "tag",
											"source": 8,
											"value": "639"
										},
										{
											"begin": 22952,
											"end": 23008,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23032,
											"end": 23070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "641"
										},
										{
											"begin": 23064,
											"end": 23068,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23058,
											"end": 23069,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 23032,
											"end": 23070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 23032,
											"end": 23070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23032,
											"end": 23070,
											"name": "tag",
											"source": 8,
											"value": "641"
										},
										{
											"begin": 23032,
											"end": 23070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23117,
											"end": 23184,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "642"
										},
										{
											"begin": 23177,
											"end": 23183,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23169,
											"end": 23175,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23163,
											"end": 23167,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 23117,
											"end": 23184,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 23117,
											"end": 23184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23117,
											"end": 23184,
											"name": "tag",
											"source": 8,
											"value": "642"
										},
										{
											"begin": 23117,
											"end": 23184,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23211,
											"end": 23212,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23240,
											"end": 23242,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 23232,
											"end": 23238,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23229,
											"end": 23243,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 23257,
											"end": 23258,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 23252,
											"end": 23924,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23252,
											"end": 23924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 23252,
											"end": 23924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "644"
										},
										{
											"begin": 23252,
											"end": 23924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23968,
											"end": 23969,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23985,
											"end": 23991,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 23982,
											"end": 24059,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 23982,
											"end": 24059,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "645"
										},
										{
											"begin": 23982,
											"end": 24059,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 24034,
											"end": 24043,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24029,
											"end": 24032,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 24025,
											"end": 24044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24019,
											"end": 24045,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 24010,
											"end": 24045,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24010,
											"end": 24045,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23982,
											"end": 24059,
											"name": "tag",
											"source": 8,
											"value": "645"
										},
										{
											"begin": 23982,
											"end": 24059,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24085,
											"end": 24152,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "646"
										},
										{
											"begin": 24145,
											"end": 24151,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 24138,
											"end": 24143,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24085,
											"end": 24152,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 24085,
											"end": 24152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24085,
											"end": 24152,
											"name": "tag",
											"source": 8,
											"value": "646"
										},
										{
											"begin": 24085,
											"end": 24152,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24079,
											"end": 24083,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 24072,
											"end": 24153,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 23941,
											"end": 24163,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23222,
											"end": 24163,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "643"
										},
										{
											"begin": 23222,
											"end": 24163,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23252,
											"end": 23924,
											"name": "tag",
											"source": 8,
											"value": "644"
										},
										{
											"begin": 23252,
											"end": 23924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23304,
											"end": 23308,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 23300,
											"end": 23309,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 23292,
											"end": 23298,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 23288,
											"end": 23310,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 23330,
											"end": 23366,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "647"
										},
										{
											"begin": 23362,
											"end": 23365,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 23330,
											"end": 23366,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 23330,
											"end": 23366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23330,
											"end": 23366,
											"name": "tag",
											"source": 8,
											"value": "647"
										},
										{
											"begin": 23330,
											"end": 23366,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23323,
											"end": 23366,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 23323,
											"end": 23366,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23393,
											"end": 23430,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "648"
										},
										{
											"begin": 23425,
											"end": 23429,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 23393,
											"end": 23430,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 23393,
											"end": 23430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23393,
											"end": 23430,
											"name": "tag",
											"source": 8,
											"value": "648"
										},
										{
											"begin": 23393,
											"end": 23430,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23452,
											"end": 23453,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23466,
											"end": 23673,
											"name": "tag",
											"source": 8,
											"value": "649"
										},
										{
											"begin": 23466,
											"end": 23673,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23480,
											"end": 23487,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23477,
											"end": 23478,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23474,
											"end": 23488,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 23466,
											"end": 23673,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 23466,
											"end": 23673,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "651"
										},
										{
											"begin": 23466,
											"end": 23673,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23559,
											"end": 23568,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 23554,
											"end": 23557,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 23550,
											"end": 23569,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23544,
											"end": 23570,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 23536,
											"end": 23542,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23529,
											"end": 23571,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 23610,
											"end": 23611,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 23602,
											"end": 23608,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23598,
											"end": 23612,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23588,
											"end": 23612,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23588,
											"end": 23612,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23657,
											"end": 23658,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 23646,
											"end": 23655,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 23642,
											"end": 23659,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23629,
											"end": 23659,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 23629,
											"end": 23659,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23503,
											"end": 23507,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23500,
											"end": 23501,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23496,
											"end": 23508,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23491,
											"end": 23508,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23491,
											"end": 23508,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23466,
											"end": 23673,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "649"
										},
										{
											"begin": 23466,
											"end": 23673,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23466,
											"end": 23673,
											"name": "tag",
											"source": 8,
											"value": "651"
										},
										{
											"begin": 23466,
											"end": 23673,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23701,
											"end": 23707,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 23692,
											"end": 23699,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23689,
											"end": 23708,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 23686,
											"end": 23865,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 23686,
											"end": 23865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "652"
										},
										{
											"begin": 23686,
											"end": 23865,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23759,
											"end": 23768,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 23754,
											"end": 23757,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 23750,
											"end": 23769,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23744,
											"end": 23770,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 23802,
											"end": 23850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "653"
										},
										{
											"begin": 23844,
											"end": 23848,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 23836,
											"end": 23842,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 23832,
											"end": 23849,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 23821,
											"end": 23830,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23802,
											"end": 23850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 23802,
											"end": 23850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23802,
											"end": 23850,
											"name": "tag",
											"source": 8,
											"value": "653"
										},
										{
											"begin": 23802,
											"end": 23850,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23794,
											"end": 23800,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23787,
											"end": 23851,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 23709,
											"end": 23865,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23686,
											"end": 23865,
											"name": "tag",
											"source": 8,
											"value": "652"
										},
										{
											"begin": 23686,
											"end": 23865,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23911,
											"end": 23912,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 23907,
											"end": 23908,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 23899,
											"end": 23905,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 23895,
											"end": 23909,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 23891,
											"end": 23913,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23885,
											"end": 23889,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 23878,
											"end": 23914,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 23259,
											"end": 23924,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23259,
											"end": 23924,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23259,
											"end": 23924,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23222,
											"end": 24163,
											"name": "tag",
											"source": 8,
											"value": "643"
										},
										{
											"begin": 23222,
											"end": 24163,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23222,
											"end": 24163,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22807,
											"end": 24169,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22807,
											"end": 24169,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22807,
											"end": 24169,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22718,
											"end": 24169,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22718,
											"end": 24169,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22718,
											"end": 24169,
											"name": "tag",
											"source": 8,
											"value": "636"
										},
										{
											"begin": 22718,
											"end": 24169,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22718,
											"end": 24169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24199,
											"end": 25030,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 24199,
											"end": 25030,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24284,
											"end": 24287,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24321,
											"end": 24326,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24315,
											"end": 24327,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 24350,
											"end": 24386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "655"
										},
										{
											"begin": 24376,
											"end": 24385,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24350,
											"end": 24386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 24350,
											"end": 24386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24350,
											"end": 24386,
											"name": "tag",
											"source": 8,
											"value": "655"
										},
										{
											"begin": 24350,
											"end": 24386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24402,
											"end": 24473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "656"
										},
										{
											"begin": 24466,
											"end": 24472,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24461,
											"end": 24464,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 24402,
											"end": 24473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 24402,
											"end": 24473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24402,
											"end": 24473,
											"name": "tag",
											"source": 8,
											"value": "656"
										},
										{
											"begin": 24402,
											"end": 24473,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24395,
											"end": 24473,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 24395,
											"end": 24473,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24504,
											"end": 24505,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 24493,
											"end": 24502,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24489,
											"end": 24506,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 24520,
											"end": 24521,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24515,
											"end": 24679,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24515,
											"end": 24679,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 24515,
											"end": 24679,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "658"
										},
										{
											"begin": 24515,
											"end": 24679,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 24693,
											"end": 24694,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 24688,
											"end": 25024,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24688,
											"end": 25024,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 24688,
											"end": 25024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "659"
										},
										{
											"begin": 24688,
											"end": 25024,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 24482,
											"end": 25024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "657"
										},
										{
											"begin": 24482,
											"end": 25024,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24515,
											"end": 24679,
											"name": "tag",
											"source": 8,
											"value": "658"
										},
										{
											"begin": 24515,
											"end": 24679,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24599,
											"end": 24603,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 24595,
											"end": 24604,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 24584,
											"end": 24593,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 24580,
											"end": 24605,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 24575,
											"end": 24578,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 24568,
											"end": 24606,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24659,
											"end": 24665,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24652,
											"end": 24666,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 24645,
											"end": 24667,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 24639,
											"end": 24643,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 24635,
											"end": 24668,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 24630,
											"end": 24633,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 24626,
											"end": 24669,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24619,
											"end": 24669,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 24619,
											"end": 24669,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24515,
											"end": 24679,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "657"
										},
										{
											"begin": 24515,
											"end": 24679,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24688,
											"end": 25024,
											"name": "tag",
											"source": 8,
											"value": "659"
										},
										{
											"begin": 24688,
											"end": 25024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24755,
											"end": 24793,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "660"
										},
										{
											"begin": 24787,
											"end": 24792,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 24755,
											"end": 24793,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 24755,
											"end": 24793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24755,
											"end": 24793,
											"name": "tag",
											"source": 8,
											"value": "660"
										},
										{
											"begin": 24755,
											"end": 24793,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24815,
											"end": 24816,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24829,
											"end": 24983,
											"name": "tag",
											"source": 8,
											"value": "661"
										},
										{
											"begin": 24829,
											"end": 24983,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24843,
											"end": 24849,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 24840,
											"end": 24841,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24837,
											"end": 24850,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 24829,
											"end": 24983,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 24829,
											"end": 24983,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "663"
										},
										{
											"begin": 24829,
											"end": 24983,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 24917,
											"end": 24924,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24911,
											"end": 24925,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 24907,
											"end": 24908,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24902,
											"end": 24905,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 24898,
											"end": 24909,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24891,
											"end": 24926,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24967,
											"end": 24968,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 24958,
											"end": 24965,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24954,
											"end": 24969,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24943,
											"end": 24969,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24943,
											"end": 24969,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24865,
											"end": 24869,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 24862,
											"end": 24863,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24858,
											"end": 24870,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24853,
											"end": 24870,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24853,
											"end": 24870,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24829,
											"end": 24983,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "661"
										},
										{
											"begin": 24829,
											"end": 24983,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24829,
											"end": 24983,
											"name": "tag",
											"source": 8,
											"value": "663"
										},
										{
											"begin": 24829,
											"end": 24983,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25012,
											"end": 25013,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25007,
											"end": 25010,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 25003,
											"end": 25014,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24996,
											"end": 25014,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 24996,
											"end": 25014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24695,
											"end": 25024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24695,
											"end": 25024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24482,
											"end": 25024,
											"name": "tag",
											"source": 8,
											"value": "657"
										},
										{
											"begin": 24482,
											"end": 25024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24482,
											"end": 25024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24288,
											"end": 25030,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24288,
											"end": 25030,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24199,
											"end": 25030,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 24199,
											"end": 25030,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24199,
											"end": 25030,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24199,
											"end": 25030,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24199,
											"end": 25030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25036,
											"end": 25555,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 25036,
											"end": 25555,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25198,
											"end": 25202,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25236,
											"end": 25238,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 25225,
											"end": 25234,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25221,
											"end": 25239,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25213,
											"end": 25239,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25213,
											"end": 25239,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25249,
											"end": 25316,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "665"
										},
										{
											"begin": 25313,
											"end": 25314,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25302,
											"end": 25311,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25298,
											"end": 25315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25289,
											"end": 25295,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 25249,
											"end": 25316,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 25249,
											"end": 25316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25249,
											"end": 25316,
											"name": "tag",
											"source": 8,
											"value": "665"
										},
										{
											"begin": 25249,
											"end": 25316,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25363,
											"end": 25372,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25357,
											"end": 25361,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25353,
											"end": 25373,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 25348,
											"end": 25350,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 25337,
											"end": 25346,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25333,
											"end": 25351,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25326,
											"end": 25374,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25391,
											"end": 25466,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "666"
										},
										{
											"begin": 25461,
											"end": 25465,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25452,
											"end": 25458,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 25391,
											"end": 25466,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 25391,
											"end": 25466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25391,
											"end": 25466,
											"name": "tag",
											"source": 8,
											"value": "666"
										},
										{
											"begin": 25391,
											"end": 25466,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25383,
											"end": 25466,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25383,
											"end": 25466,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25476,
											"end": 25548,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "667"
										},
										{
											"begin": 25544,
											"end": 25546,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 25533,
											"end": 25542,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25529,
											"end": 25547,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25520,
											"end": 25526,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 25476,
											"end": 25548,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 25476,
											"end": 25548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25476,
											"end": 25548,
											"name": "tag",
											"source": 8,
											"value": "667"
										},
										{
											"begin": 25476,
											"end": 25548,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25036,
											"end": 25555,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 25036,
											"end": 25555,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 25036,
											"end": 25555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25036,
											"end": 25555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25036,
											"end": 25555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25036,
											"end": 25555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25036,
											"end": 25555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25561,
											"end": 25732,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 25561,
											"end": 25732,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25701,
											"end": 25724,
											"name": "PUSH",
											"source": 8,
											"value": "426F6E757320616C726561647920636C61696D65640000000000000000000000"
										},
										{
											"begin": 25697,
											"end": 25698,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25689,
											"end": 25695,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25685,
											"end": 25699,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25678,
											"end": 25725,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25561,
											"end": 25732,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25561,
											"end": 25732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25738,
											"end": 26104,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 25738,
											"end": 26104,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25880,
											"end": 25883,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25901,
											"end": 25968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "670"
										},
										{
											"begin": 25965,
											"end": 25967,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 25960,
											"end": 25963,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25901,
											"end": 25968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 25901,
											"end": 25968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25901,
											"end": 25968,
											"name": "tag",
											"source": 8,
											"value": "670"
										},
										{
											"begin": 25901,
											"end": 25968,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25894,
											"end": 25968,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25894,
											"end": 25968,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25977,
											"end": 26070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "671"
										},
										{
											"begin": 26066,
											"end": 26069,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25977,
											"end": 26070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 25977,
											"end": 26070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25977,
											"end": 26070,
											"name": "tag",
											"source": 8,
											"value": "671"
										},
										{
											"begin": 25977,
											"end": 26070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26095,
											"end": 26097,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 26090,
											"end": 26093,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26086,
											"end": 26098,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26079,
											"end": 26098,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26079,
											"end": 26098,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25738,
											"end": 26104,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25738,
											"end": 26104,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25738,
											"end": 26104,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25738,
											"end": 26104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26110,
											"end": 26529,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 26110,
											"end": 26529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26276,
											"end": 26280,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26314,
											"end": 26316,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 26303,
											"end": 26312,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26299,
											"end": 26317,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26291,
											"end": 26317,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26291,
											"end": 26317,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26363,
											"end": 26372,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26357,
											"end": 26361,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26353,
											"end": 26373,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 26349,
											"end": 26350,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26338,
											"end": 26347,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 26334,
											"end": 26351,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26327,
											"end": 26374,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 26391,
											"end": 26522,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "673"
										},
										{
											"begin": 26517,
											"end": 26521,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26391,
											"end": 26522,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 26391,
											"end": 26522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26391,
											"end": 26522,
											"name": "tag",
											"source": 8,
											"value": "673"
										},
										{
											"begin": 26391,
											"end": 26522,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26383,
											"end": 26522,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26383,
											"end": 26522,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26110,
											"end": 26529,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26110,
											"end": 26529,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26110,
											"end": 26529,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26110,
											"end": 26529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26535,
											"end": 26715,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 26535,
											"end": 26715,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26583,
											"end": 26660,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26580,
											"end": 26581,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26573,
											"end": 26661,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 26680,
											"end": 26684,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 26677,
											"end": 26678,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 26670,
											"end": 26685,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 26704,
											"end": 26708,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 26701,
											"end": 26702,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26694,
											"end": 26709,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 26721,
											"end": 27163,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 26721,
											"end": 27163,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26870,
											"end": 26874,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26908,
											"end": 26910,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 26897,
											"end": 26906,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26893,
											"end": 26911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26885,
											"end": 26911,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26885,
											"end": 26911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26921,
											"end": 26992,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "676"
										},
										{
											"begin": 26989,
											"end": 26990,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26978,
											"end": 26987,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 26974,
											"end": 26991,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26965,
											"end": 26971,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 26921,
											"end": 26992,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 26921,
											"end": 26992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26921,
											"end": 26992,
											"name": "tag",
											"source": 8,
											"value": "676"
										},
										{
											"begin": 26921,
											"end": 26992,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27002,
											"end": 27074,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "677"
										},
										{
											"begin": 27070,
											"end": 27072,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 27059,
											"end": 27068,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 27055,
											"end": 27073,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27046,
											"end": 27052,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 27002,
											"end": 27074,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 27002,
											"end": 27074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27002,
											"end": 27074,
											"name": "tag",
											"source": 8,
											"value": "677"
										},
										{
											"begin": 27002,
											"end": 27074,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27084,
											"end": 27156,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "678"
										},
										{
											"begin": 27152,
											"end": 27154,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 27141,
											"end": 27150,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 27137,
											"end": 27155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27128,
											"end": 27134,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 27084,
											"end": 27156,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 27084,
											"end": 27156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27084,
											"end": 27156,
											"name": "tag",
											"source": 8,
											"value": "678"
										},
										{
											"begin": 27084,
											"end": 27156,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26721,
											"end": 27163,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 26721,
											"end": 27163,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 26721,
											"end": 27163,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26721,
											"end": 27163,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26721,
											"end": 27163,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26721,
											"end": 27163,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26721,
											"end": 27163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27169,
											"end": 28564,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 27169,
											"end": 28564,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27286,
											"end": 27323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "680"
										},
										{
											"begin": 27319,
											"end": 27322,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27286,
											"end": 27323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 27286,
											"end": 27323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27286,
											"end": 27323,
											"name": "tag",
											"source": 8,
											"value": "680"
										},
										{
											"begin": 27286,
											"end": 27323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27388,
											"end": 27406,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27380,
											"end": 27386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27377,
											"end": 27407,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 27374,
											"end": 27430,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 27374,
											"end": 27430,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "681"
										},
										{
											"begin": 27374,
											"end": 27430,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 27410,
											"end": 27428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "682"
										},
										{
											"begin": 27410,
											"end": 27428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 27410,
											"end": 27428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27410,
											"end": 27428,
											"name": "tag",
											"source": 8,
											"value": "682"
										},
										{
											"begin": 27410,
											"end": 27428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27374,
											"end": 27430,
											"name": "tag",
											"source": 8,
											"value": "681"
										},
										{
											"begin": 27374,
											"end": 27430,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27454,
											"end": 27492,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "683"
										},
										{
											"begin": 27486,
											"end": 27490,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27480,
											"end": 27491,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 27454,
											"end": 27492,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 27454,
											"end": 27492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27454,
											"end": 27492,
											"name": "tag",
											"source": 8,
											"value": "683"
										},
										{
											"begin": 27454,
											"end": 27492,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27539,
											"end": 27606,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "684"
										},
										{
											"begin": 27599,
											"end": 27605,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27591,
											"end": 27597,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27585,
											"end": 27589,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 27539,
											"end": 27606,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 27539,
											"end": 27606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27539,
											"end": 27606,
											"name": "tag",
											"source": 8,
											"value": "684"
										},
										{
											"begin": 27539,
											"end": 27606,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27633,
											"end": 27634,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27657,
											"end": 27661,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 27644,
											"end": 27661,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27644,
											"end": 27661,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27689,
											"end": 27691,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 27681,
											"end": 27687,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 27678,
											"end": 27692,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 27706,
											"end": 27707,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 27701,
											"end": 28319,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27701,
											"end": 28319,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 27701,
											"end": 28319,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "686"
										},
										{
											"begin": 27701,
											"end": 28319,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 28363,
											"end": 28364,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28380,
											"end": 28386,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 28377,
											"end": 28454,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 28377,
											"end": 28454,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "687"
										},
										{
											"begin": 28377,
											"end": 28454,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 28429,
											"end": 28438,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28424,
											"end": 28427,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 28420,
											"end": 28439,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28414,
											"end": 28440,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 28405,
											"end": 28440,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28405,
											"end": 28440,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28377,
											"end": 28454,
											"name": "tag",
											"source": 8,
											"value": "687"
										},
										{
											"begin": 28377,
											"end": 28454,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28480,
											"end": 28547,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "688"
										},
										{
											"begin": 28540,
											"end": 28546,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 28533,
											"end": 28538,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28480,
											"end": 28547,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 28480,
											"end": 28547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28480,
											"end": 28547,
											"name": "tag",
											"source": 8,
											"value": "688"
										},
										{
											"begin": 28480,
											"end": 28547,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28474,
											"end": 28478,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 28467,
											"end": 28548,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 28336,
											"end": 28558,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27671,
											"end": 28558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "685"
										},
										{
											"begin": 27671,
											"end": 28558,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27701,
											"end": 28319,
											"name": "tag",
											"source": 8,
											"value": "686"
										},
										{
											"begin": 27701,
											"end": 28319,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27753,
											"end": 27757,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 27749,
											"end": 27758,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 27741,
											"end": 27747,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 27737,
											"end": 27759,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 27787,
											"end": 27824,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "689"
										},
										{
											"begin": 27819,
											"end": 27823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 27787,
											"end": 27824,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 27787,
											"end": 27824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27787,
											"end": 27824,
											"name": "tag",
											"source": 8,
											"value": "689"
										},
										{
											"begin": 27787,
											"end": 27824,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27846,
											"end": 27847,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27860,
											"end": 28068,
											"name": "tag",
											"source": 8,
											"value": "690"
										},
										{
											"begin": 27860,
											"end": 28068,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27874,
											"end": 27881,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27871,
											"end": 27872,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27868,
											"end": 27882,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 27860,
											"end": 28068,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 27860,
											"end": 28068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "692"
										},
										{
											"begin": 27860,
											"end": 28068,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 27953,
											"end": 27962,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 27948,
											"end": 27951,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 27944,
											"end": 27963,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27938,
											"end": 27964,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 27930,
											"end": 27936,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27923,
											"end": 27965,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 28004,
											"end": 28005,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 27996,
											"end": 28002,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27992,
											"end": 28006,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27982,
											"end": 28006,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27982,
											"end": 28006,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28051,
											"end": 28053,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 28040,
											"end": 28049,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 28036,
											"end": 28054,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28023,
											"end": 28054,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 28023,
											"end": 28054,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27897,
											"end": 27901,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 27894,
											"end": 27895,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27890,
											"end": 27902,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27885,
											"end": 27902,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27885,
											"end": 27902,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27860,
											"end": 28068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "690"
										},
										{
											"begin": 27860,
											"end": 28068,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27860,
											"end": 28068,
											"name": "tag",
											"source": 8,
											"value": "692"
										},
										{
											"begin": 27860,
											"end": 28068,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28096,
											"end": 28102,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 28087,
											"end": 28094,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 28084,
											"end": 28103,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 28081,
											"end": 28260,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 28081,
											"end": 28260,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "693"
										},
										{
											"begin": 28081,
											"end": 28260,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 28154,
											"end": 28163,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 28149,
											"end": 28152,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 28145,
											"end": 28164,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28139,
											"end": 28165,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 28197,
											"end": 28245,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "694"
										},
										{
											"begin": 28239,
											"end": 28243,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 28231,
											"end": 28237,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 28227,
											"end": 28244,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 28216,
											"end": 28225,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28197,
											"end": 28245,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 28197,
											"end": 28245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28197,
											"end": 28245,
											"name": "tag",
											"source": 8,
											"value": "694"
										},
										{
											"begin": 28197,
											"end": 28245,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28189,
											"end": 28195,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 28182,
											"end": 28246,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 28104,
											"end": 28260,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28081,
											"end": 28260,
											"name": "tag",
											"source": 8,
											"value": "693"
										},
										{
											"begin": 28081,
											"end": 28260,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28306,
											"end": 28307,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 28302,
											"end": 28303,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 28294,
											"end": 28300,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 28290,
											"end": 28304,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 28286,
											"end": 28308,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28280,
											"end": 28284,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 28273,
											"end": 28309,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 27708,
											"end": 28319,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27708,
											"end": 28319,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27708,
											"end": 28319,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27671,
											"end": 28558,
											"name": "tag",
											"source": 8,
											"value": "685"
										},
										{
											"begin": 27671,
											"end": 28558,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27671,
											"end": 28558,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27261,
											"end": 28564,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27261,
											"end": 28564,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27261,
											"end": 28564,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27169,
											"end": 28564,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27169,
											"end": 28564,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27169,
											"end": 28564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28570,
											"end": 28737,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 28570,
											"end": 28737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28607,
											"end": 28610,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28630,
											"end": 28652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "696"
										},
										{
											"begin": 28646,
											"end": 28651,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28630,
											"end": 28652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 28630,
											"end": 28652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28630,
											"end": 28652,
											"name": "tag",
											"source": 8,
											"value": "696"
										},
										{
											"begin": 28630,
											"end": 28652,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28621,
											"end": 28652,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 28621,
											"end": 28652,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28674,
											"end": 28678,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 28667,
											"end": 28672,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28664,
											"end": 28679,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 28661,
											"end": 28702,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "697"
										},
										{
											"begin": 28661,
											"end": 28702,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 28682,
											"end": 28700,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "698"
										},
										{
											"begin": 28682,
											"end": 28700,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 28682,
											"end": 28700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28682,
											"end": 28700,
											"name": "tag",
											"source": 8,
											"value": "698"
										},
										{
											"begin": 28682,
											"end": 28700,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28661,
											"end": 28702,
											"name": "tag",
											"source": 8,
											"value": "697"
										},
										{
											"begin": 28661,
											"end": 28702,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28729,
											"end": 28730,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 28722,
											"end": 28727,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28718,
											"end": 28731,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28711,
											"end": 28731,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28711,
											"end": 28731,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28570,
											"end": 28737,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 28570,
											"end": 28737,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28570,
											"end": 28737,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28570,
											"end": 28737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28743,
											"end": 28934,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 28743,
											"end": 28934,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28783,
											"end": 28786,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28802,
											"end": 28822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "700"
										},
										{
											"begin": 28820,
											"end": 28821,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28802,
											"end": 28822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 28802,
											"end": 28822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28802,
											"end": 28822,
											"name": "tag",
											"source": 8,
											"value": "700"
										},
										{
											"begin": 28802,
											"end": 28822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28797,
											"end": 28822,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 28797,
											"end": 28822,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28836,
											"end": 28856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "701"
										},
										{
											"begin": 28854,
											"end": 28855,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 28836,
											"end": 28856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 28836,
											"end": 28856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28836,
											"end": 28856,
											"name": "tag",
											"source": 8,
											"value": "701"
										},
										{
											"begin": 28836,
											"end": 28856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28831,
											"end": 28856,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 28831,
											"end": 28856,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28879,
											"end": 28880,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28876,
											"end": 28877,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28872,
											"end": 28881,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28865,
											"end": 28881,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28865,
											"end": 28881,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28900,
											"end": 28903,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 28897,
											"end": 28898,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28894,
											"end": 28904,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 28891,
											"end": 28927,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 28891,
											"end": 28927,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "702"
										},
										{
											"begin": 28891,
											"end": 28927,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 28907,
											"end": 28925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "703"
										},
										{
											"begin": 28907,
											"end": 28925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 28907,
											"end": 28925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28907,
											"end": 28925,
											"name": "tag",
											"source": 8,
											"value": "703"
										},
										{
											"begin": 28907,
											"end": 28925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28891,
											"end": 28927,
											"name": "tag",
											"source": 8,
											"value": "702"
										},
										{
											"begin": 28891,
											"end": 28927,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28743,
											"end": 28934,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 28743,
											"end": 28934,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 28743,
											"end": 28934,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28743,
											"end": 28934,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28743,
											"end": 28934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/myContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addItemToStore(string,uint256)": "e3af42e1",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"betOnRandomNumber(bool,uint256)": "09ceb537",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"burnTokens(uint256)": "6d1b229d",
							"decimals()": "313ce567",
							"getItemDetails(uint8)": "d917bd27",
							"getMyBalance()": "4c738909",
							"getUserItems(address)": "ce6019b4",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"purchaseItem(uint8)": "af3bcb7d",
							"redeemWelcomeBonus()": "c81d7604",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"transferToken(address,uint256)": "1072cbea"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"won\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"result\",\"type\":\"string\"}],\"name\":\"GameOutcome\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"itemId\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"itemName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"addItemToStore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"predictLessThanFive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"betAmount\",\"type\":\"uint256\"}],\"name\":\"betOnRandomNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"itemId\",\"type\":\"uint8\"}],\"name\":\"getItemDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserItems\",\"outputs\":[{\"internalType\":\"uint8[]\",\"name\":\"\",\"type\":\"uint8[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"itemId\",\"type\":\"uint8\"}],\"name\":\"purchaseItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redeemWelcomeBonus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/myContract.sol\":\"DegenToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/myContract.sol\":{\"keccak256\":\"0x3b551ba2171b68b99dde7dcae4cf18164cf3dd83fc0c9fa285bc080f51f0a01c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd5fbb199f192ff40150ed86e8b186db2f1ed5d5ced96817b3ebc12e077ba7c3\",\"dweb:/ipfs/QmemDPWaLGXM5fhcw1gyCDKJcM9EgicbYmk7WqjY7jRowr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/myContract.sol:DegenToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/myContract.sol:DegenToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/myContract.sol:DegenToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/myContract.sol:DegenToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/myContract.sol:DegenToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/myContract.sol:DegenToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1002,
								"contract": "contracts/myContract.sol:DegenToken",
								"label": "items",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint8,t_struct(Item)997_storage)"
							},
							{
								"astId": 1008,
								"contract": "contracts/myContract.sol:DegenToken",
								"label": "playerItems",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_array(t_struct(Item)997_storage)dyn_storage)"
							},
							{
								"astId": 1010,
								"contract": "contracts/myContract.sol:DegenToken",
								"label": "nextItemId",
								"offset": 0,
								"slot": "8",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Item)997_storage)dyn_storage": {
								"base": "t_struct(Item)997_storage",
								"encoding": "dynamic_array",
								"label": "struct DegenToken.Item[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_array(t_struct(Item)997_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct DegenToken.Item[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Item)997_storage)dyn_storage"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint8,t_struct(Item)997_storage)": {
								"encoding": "mapping",
								"key": "t_uint8",
								"label": "mapping(uint8 => struct DegenToken.Item)",
								"numberOfBytes": "32",
								"value": "t_struct(Item)997_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Item)997_storage": {
								"encoding": "inplace",
								"label": "struct DegenToken.Item",
								"members": [
									{
										"astId": 992,
										"contract": "contracts/myContract.sol:DegenToken",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 994,
										"contract": "contracts/myContract.sol:DegenToken",
										"label": "itemId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint8"
									},
									{
										"astId": 996,
										"contract": "contracts/myContract.sol:DegenToken",
										"label": "price",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 980,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								979
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 961,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							949
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 950,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 949,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 980,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 949,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								949,
								877,
								979
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										936
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										942
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										948
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						]
					},
					"id": 924,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 800,
							"src": "150:35:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "158:5:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 883,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 980,
							"src": "186:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 882,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "194:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 885,
										"name": "Context",
										"nameLocations": [
											"483:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "483:7:4"
									},
									"id": 886,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:4"
								},
								{
									"baseName": {
										"id": 887,
										"name": "ERC20",
										"nameLocations": [
											"492:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "492:5:4"
									},
									"id": 888,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:4"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 884,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:4",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 923,
							"linearizedBaseContracts": [
								923,
								799,
								189,
								949,
								877,
								979
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "662:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 895,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "678:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "692:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 894,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "672:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "672:26:4"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:4",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "632:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:4"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:4"
									},
									"scope": 923,
									"src": "618:87:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "1086:93:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 910,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1112:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 911,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "1121:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 913,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1135:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 909,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "1096:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 917,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1157:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 918,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1166:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1151:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 920,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:4"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1039:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1056:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:4"
									},
									"scope": 923,
									"src": "1021:158:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 924,
							"src": "448:733:4",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "124:1058:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							949
						]
					},
					"id": 950,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 925,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 927,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 950,
							"sourceUnit": 878,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 926,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 929,
										"name": "IERC20",
										"nameLocations": [
											"305:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:5"
									},
									"id": 930,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 928,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:5",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 949,
							"linearizedBaseContracts": [
								949,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 936,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:5"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "416:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 933,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:5"
									},
									"scope": 949,
									"src": "377:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 942,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:5"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "539:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 939,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:5"
									},
									"scope": 949,
									"src": "498:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:5"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "673:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 945,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:5"
									},
									"scope": 949,
									"src": "630:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 950,
							"src": "277:405:5",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							979
						]
					},
					"id": 980,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 951,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 952,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 979,
							"linearizedBaseContracts": [
								979
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 957,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 956,
												"id": 959,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 979,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 966,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 965,
												"id": 968,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 963,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 979,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 974,
												"id": 976,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 979,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 980,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"contracts/myContract.sol": {
				"ast": {
					"absolutePath": "contracts/myContract.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"DegenToken": [
							1426
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							949
						],
						"Ownable": [
							147
						]
					},
					"id": 1427,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 981,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 982,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1427,
							"sourceUnit": 800,
							"src": "58:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 983,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1427,
							"sourceUnit": 148,
							"src": "114:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 984,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1427,
							"sourceUnit": 924,
							"src": "167:74:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 985,
										"name": "ERC20",
										"nameLocations": [
											"266:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "266:5:7"
									},
									"id": 986,
									"nodeType": "InheritanceSpecifier",
									"src": "266:5:7"
								},
								{
									"baseName": {
										"id": 987,
										"name": "Ownable",
										"nameLocations": [
											"273:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "273:7:7"
									},
									"id": 988,
									"nodeType": "InheritanceSpecifier",
									"src": "273:7:7"
								},
								{
									"baseName": {
										"id": 989,
										"name": "ERC20Burnable",
										"nameLocations": [
											"282:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 923,
										"src": "282:13:7"
									},
									"id": 990,
									"nodeType": "InheritanceSpecifier",
									"src": "282:13:7"
								}
							],
							"canonicalName": "DegenToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1426,
							"linearizedBaseContracts": [
								1426,
								923,
								147,
								799,
								189,
								949,
								877,
								979
							],
							"name": "DegenToken",
							"nameLocation": "252:10:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DegenToken.Item",
									"id": 997,
									"members": [
										{
											"constant": false,
											"id": 992,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "336:4:7",
											"nodeType": "VariableDeclaration",
											"scope": 997,
											"src": "329:11:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 991,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "329:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 994,
											"mutability": "mutable",
											"name": "itemId",
											"nameLocation": "356:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 997,
											"src": "350:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 993,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "350:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 996,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "380:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 997,
											"src": "372:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 995,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "372:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Item",
									"nameLocation": "314:4:7",
									"nodeType": "StructDefinition",
									"scope": 1426,
									"src": "307:85:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1002,
									"mutability": "mutable",
									"name": "items",
									"nameLocation": "429:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1426,
									"src": "398:36:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
										"typeString": "mapping(uint8 => struct DegenToken.Item)"
									},
									"typeName": {
										"id": 1001,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 998,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "406:5:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"nodeType": "Mapping",
										"src": "398:22:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
											"typeString": "mapping(uint8 => struct DegenToken.Item)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1000,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 999,
												"name": "Item",
												"nameLocations": [
													"415:4:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 997,
												"src": "415:4:7"
											},
											"referencedDeclaration": 997,
											"src": "415:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Item_$997_storage_ptr",
												"typeString": "struct DegenToken.Item"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1008,
									"mutability": "mutable",
									"name": "playerItems",
									"nameLocation": "475:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1426,
									"src": "440:46:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Item_$997_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct DegenToken.Item[])"
									},
									"typeName": {
										"id": 1007,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1003,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "448:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "440:26:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Item_$997_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct DegenToken.Item[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 1005,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1004,
													"name": "Item",
													"nameLocations": [
														"459:4:7"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 997,
													"src": "459:4:7"
												},
												"referencedDeclaration": 997,
												"src": "459:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Item_$997_storage_ptr",
													"typeString": "struct DegenToken.Item"
												}
											},
											"id": 1006,
											"nodeType": "ArrayTypeName",
											"src": "459:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Item_$997_storage_$dyn_storage_ptr",
												"typeString": "struct DegenToken.Item[]"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1010,
									"mutability": "mutable",
									"name": "nextItemId",
									"nameLocation": "506:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1426,
									"src": "492:24:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1009,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "492:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8bedd141782c49139782bd92bd7a760a0bcb544ffecfd2b25f00366fae06598e",
									"id": 1020,
									"name": "ItemPurchased",
									"nameLocation": "529:13:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "559:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "543:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "543:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"indexed": false,
												"mutability": "mutable",
												"name": "itemId",
												"nameLocation": "572:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "566:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1013,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "566:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"indexed": false,
												"mutability": "mutable",
												"name": "itemName",
												"nameLocation": "587:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "580:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1015,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "580:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "605:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "597:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "542:69:7"
									},
									"src": "523:89:7"
								},
								{
									"anonymous": false,
									"eventSelector": "d04d9689d8e43bc0bacea67661ef472dcf321f34f08af72f651af30c4c866587",
									"id": 1030,
									"name": "GameOutcome",
									"nameLocation": "623:11:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"indexed": true,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "651:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "635:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"indexed": false,
												"mutability": "mutable",
												"name": "num",
												"nameLocation": "667:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "659:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"indexed": false,
												"mutability": "mutable",
												"name": "won",
												"nameLocation": "677:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "672:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1025,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "672:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"indexed": false,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "689:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "682:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1027,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "682:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:62:7"
									},
									"src": "617:80:7"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "804:119:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1045,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "832:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1044,
														"name": "transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "814:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "814:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "814:31:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1049,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "860:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1050,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "874:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1048,
														"name": "mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1122,
														"src": "855:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "855:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "855:33:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1053,
														"name": "_initializeItems",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1086,
														"src": "898:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "898:18:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1055,
												"nodeType": "ExpressionStatement",
												"src": "898:18:7"
											}
										]
									},
									"id": 1057,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "446567656e",
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "766:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_906c077abc9a71ae76538cee0d26636e7b6a00e3d54b28138c5ecbb7aec06c8d",
														"typeString": "literal_string \"Degen\""
													},
													"value": "Degen"
												},
												{
													"hexValue": "44474e",
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "775:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_0b9f9ff197d13cbef1db00fe5f394520d062f532845bf34370b18f7b8fc04c88",
														"typeString": "literal_string \"DGN\""
													},
													"value": "DGN"
												}
											],
											"id": 1039,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1036,
												"name": "ERC20",
												"nameLocations": [
													"760:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "760:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "760:21:7"
										},
										{
											"arguments": [
												{
													"id": 1041,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1032,
													"src": "790:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1042,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1040,
												"name": "Ownable",
												"nameLocations": [
													"782:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "782:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "782:21:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "723:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "715:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "745:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "737:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:45:7"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "804:0:7"
									},
									"scope": 1426,
									"src": "703:220:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1085,
										"nodeType": "Block",
										"src": "1013:219:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "4e6f76696365204e6176696761746f72",
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1032:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f93d0924b6e1f086750f1d72f63121b4bc1d38acfc288e215c263238a8a3728a",
																"typeString": "literal_string \"Novice Navigator\""
															},
															"value": "Novice Navigator"
														},
														{
															"hexValue": "313030",
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1052:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_f93d0924b6e1f086750f1d72f63121b4bc1d38acfc288e215c263238a8a3728a",
																"typeString": "literal_string \"Novice Navigator\""
															},
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"id": 1060,
														"name": "_addItem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "1023:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (string memory,uint256)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1023:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "1023:33:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "4d7974686963204d6176657269636b",
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1075:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d8da57334a66c00806b841d692d6139ebc41480393e33e8be0d23418882bec42",
																"typeString": "literal_string \"Mythic Maverick\""
															},
															"value": "Mythic Maverick"
														},
														{
															"hexValue": "373030",
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1094:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_700_by_1",
																"typeString": "int_const 700"
															},
															"value": "700"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_d8da57334a66c00806b841d692d6139ebc41480393e33e8be0d23418882bec42",
																"typeString": "literal_string \"Mythic Maverick\""
															},
															{
																"typeIdentifier": "t_rational_700_by_1",
																"typeString": "int_const 700"
															}
														],
														"id": 1065,
														"name": "_addItem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "1066:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (string memory,uint256)"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1066:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "1066:32:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "43656c65737469616c2043727573686572",
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1117:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b57257d4b4927c9d29138dda352a97afab9b1fe7c30bc1efffaba568b2ffa6f1",
																"typeString": "literal_string \"Celestial Crusher\""
															},
															"value": "Celestial Crusher"
														},
														{
															"hexValue": "31323030",
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1138:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1200_by_1",
																"typeString": "int_const 1200"
															},
															"value": "1200"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_b57257d4b4927c9d29138dda352a97afab9b1fe7c30bc1efffaba568b2ffa6f1",
																"typeString": "literal_string \"Celestial Crusher\""
															},
															{
																"typeIdentifier": "t_rational_1200_by_1",
																"typeString": "int_const 1200"
															}
														],
														"id": 1070,
														"name": "_addItem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "1108:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (string memory,uint256)"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1108:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "1108:35:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "41737472616c20416365",
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1162:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a5690cea7966b1bddf0971fab7696fc0b0211de341269b07a3f67ac03c93a16d",
																"typeString": "literal_string \"Astral Ace\""
															},
															"value": "Astral Ace"
														},
														{
															"hexValue": "32323030",
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1176:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2200_by_1",
																"typeString": "int_const 2200"
															},
															"value": "2200"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_a5690cea7966b1bddf0971fab7696fc0b0211de341269b07a3f67ac03c93a16d",
																"typeString": "literal_string \"Astral Ace\""
															},
															{
																"typeIdentifier": "t_rational_2200_by_1",
																"typeString": "int_const 2200"
															}
														],
														"id": 1075,
														"name": "_addItem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "1153:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (string memory,uint256)"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1153:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1079,
												"nodeType": "ExpressionStatement",
												"src": "1153:28:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "446976696e6520446f6d696e61746f72",
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1200:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fa2c900fc7c49268b4beba97e687238ae58ec6cc4f2e4aacc3154338d556113a",
																"typeString": "literal_string \"Divine Dominator\""
															},
															"value": "Divine Dominator"
														},
														{
															"hexValue": "32343030",
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1220:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2400_by_1",
																"typeString": "int_const 2400"
															},
															"value": "2400"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_fa2c900fc7c49268b4beba97e687238ae58ec6cc4f2e4aacc3154338d556113a",
																"typeString": "literal_string \"Divine Dominator\""
															},
															{
																"typeIdentifier": "t_rational_2400_by_1",
																"typeString": "int_const 2400"
															}
														],
														"id": 1080,
														"name": "_addItem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "1191:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (string memory,uint256)"
														}
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1191:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1084,
												"nodeType": "ExpressionStatement",
												"src": "1191:34:7"
											}
										]
									},
									"id": 1086,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializeItems",
									"nameLocation": "985:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1001:2:7"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:0:7"
									},
									"scope": 1426,
									"src": "976:256:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1106,
										"nodeType": "Block",
										"src": "1340:88:7",
										"statements": [
											{
												"expression": {
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1093,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "1350:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
															}
														},
														"id": 1095,
														"indexExpression": {
															"id": 1094,
															"name": "nextItemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "1356:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1350:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_storage",
															"typeString": "struct DegenToken.Item storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1097,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "1375:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"id": 1098,
																"name": "nextItemId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "1381:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															{
																"id": 1099,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1090,
																"src": "1393:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1096,
															"name": "Item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "1370:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Item_$997_storage_ptr_$",
																"typeString": "type(struct DegenToken.Item storage pointer)"
															}
														},
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1370:29:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_memory_ptr",
															"typeString": "struct DegenToken.Item memory"
														}
													},
													"src": "1350:49:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$997_storage",
														"typeString": "struct DegenToken.Item storage ref"
													}
												},
												"id": 1102,
												"nodeType": "ExpressionStatement",
												"src": "1350:49:7"
											},
											{
												"expression": {
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1409:12:7",
													"subExpression": {
														"id": 1103,
														"name": "nextItemId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "1409:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "1409:12:7"
											}
										]
									},
									"id": 1107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addItem",
									"nameLocation": "1287:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1310:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "1296:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1087,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1296:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1324:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "1316:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1316:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1295:35:7"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1340:0:7"
									},
									"scope": 1426,
									"src": "1278:150:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1121,
										"nodeType": "Block",
										"src": "1516:34:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1117,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "1532:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1118,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "1536:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1116,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1526:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1526:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1120,
												"nodeType": "ExpressionStatement",
												"src": "1526:17:7"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1122,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1114,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1113,
												"name": "onlyOwner",
												"nameLocations": [
													"1506:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1506:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1506:9:7"
										}
									],
									"name": "mint",
									"nameLocation": "1466:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1479:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "1471:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1491:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "1483:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1483:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1470:28:7"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1516:0:7"
									},
									"scope": 1426,
									"src": "1457:93:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "1674:131:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1131,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1702:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1706:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1702:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1130,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "1692:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1692:21:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1134,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "1717:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1692:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1725:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1684:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1684:64:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "1684:64:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1140,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1768:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1772:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1768:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1142,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "1780:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1143,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "1791:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1139,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "1758:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1758:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1145,
												"nodeType": "ExpressionStatement",
												"src": "1758:40:7"
											}
										]
									},
									"functionSelector": "1072cbea",
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferToken",
									"nameLocation": "1616:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1638:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "1630:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1657:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "1649:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1649:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1629:35:7"
									},
									"returnParameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1674:0:7"
									},
									"scope": 1426,
									"src": "1607:198:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1166,
										"nodeType": "Block",
										"src": "1906:108:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1152,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1934:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1938:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1934:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1151,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "1924:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1924:21:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1949:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1924:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f6e757320616c726561647920636c61696d6564",
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1952:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e4e32a093f922415ec967630dd3d29e7177524111a79166bb989f4c2dcbc3a12",
																"typeString": "literal_string \"Bonus already claimed\""
															},
															"value": "Bonus already claimed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e4e32a093f922415ec967630dd3d29e7177524111a79166bb989f4c2dcbc3a12",
																"typeString": "literal_string \"Bonus already claimed\""
															}
														],
														"id": 1150,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1916:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1916:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "1916:60:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1161,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1992:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1996:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1992:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "3530",
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2004:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_50_by_1",
																"typeString": "int_const 50"
															},
															"value": "50"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_50_by_1",
																"typeString": "int_const 50"
															}
														],
														"id": 1160,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1986:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1986:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1165,
												"nodeType": "ExpressionStatement",
												"src": "1986:21:7"
											}
										]
									},
									"functionSelector": "c81d7604",
									"id": 1167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "redeemWelcomeBonus",
									"nameLocation": "1878:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1896:2:7"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1906:0:7"
									},
									"scope": 1426,
									"src": "1869:145:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1181,
										"nodeType": "Block",
										"src": "2144:38:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1177,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "2163:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1178,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "2169:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1176,
														"name": "_addItem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "2154:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (string memory,uint256)"
														}
													},
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1180,
												"nodeType": "ExpressionStatement",
												"src": "2154:21:7"
											}
										]
									},
									"functionSelector": "e3af42e1",
									"id": 1182,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1174,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1173,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2134:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:7"
										}
									],
									"name": "addItemToStore",
									"nameLocation": "2077:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "2106:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "2092:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1168,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2092:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "2120:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "2112:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2112:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2091:35:7"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:7"
									},
									"scope": 1426,
									"src": "2068:114:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1253,
										"nodeType": "Block",
										"src": "2310:506:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1191,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2338:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2342:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2338:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1190,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "2328:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2328:21:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1194,
																"name": "betAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1186,
																"src": "2353:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2328:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2364:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2320:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2320:67:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1198,
												"nodeType": "ExpressionStatement",
												"src": "2320:67:7"
											},
											{
												"assignments": [
													1200
												],
												"declarations": [
													{
														"constant": false,
														"id": 1200,
														"mutability": "mutable",
														"name": "randomNumber",
														"nameLocation": "2414:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1253,
														"src": "2406:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1199,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2406:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1215,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1206,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "2464:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1207,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2470:9:7",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "2464:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"expression": {
																					"id": 1208,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2481:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1209,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2485:6:7",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2481:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 1204,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "2447:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1205,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "2451:12:7",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "2447:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2447:45:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1203,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "2437:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2437:56:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2429:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1201,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2429:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2429:65:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"hexValue": "3130",
														"id": 1213,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2497:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "2429:70:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2406:93:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1216,
														"name": "predictLessThanFive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "2514:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1217,
																	"name": "randomNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "2538:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 1218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2553:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "2538:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1220,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2537:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2514:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1251,
													"nodeType": "Block",
													"src": "2694:116:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1240,
																		"name": "betAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1186,
																		"src": "2713:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1239,
																	"name": "burn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "2708:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2708:15:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1242,
															"nodeType": "ExpressionStatement",
															"src": "2708:15:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1244,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2754:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2758:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2754:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1246,
																		"name": "randomNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1200,
																		"src": "2766:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 1247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2780:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "596f75206c6f737421",
																		"id": 1248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2787:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b6793b6145548c1707973fa6fff27243076d3f64d47e7c1951b141bde79f7643",
																			"typeString": "literal_string \"You lost!\""
																		},
																		"value": "You lost!"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b6793b6145548c1707973fa6fff27243076d3f64d47e7c1951b141bde79f7643",
																			"typeString": "literal_string \"You lost!\""
																		}
																	],
																	"id": 1243,
																	"name": "GameOutcome",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1030,
																	"src": "2742:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,bool,string memory)"
																	}
																},
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2742:57:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1250,
															"nodeType": "EmitStatement",
															"src": "2737:62:7"
														}
													]
												},
												"id": 1252,
												"nodeType": "IfStatement",
												"src": "2510:300:7",
												"trueBody": {
													"id": 1238,
													"nodeType": "Block",
													"src": "2557:131:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1223,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2577:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2581:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2577:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1225,
																			"name": "betAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1186,
																			"src": "2589:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 1226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2601:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "2589:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1222,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "2571:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2571:32:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1229,
															"nodeType": "ExpressionStatement",
															"src": "2571:32:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1231,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2634:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2638:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2634:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1233,
																		"name": "randomNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1200,
																		"src": "2646:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "74727565",
																		"id": 1234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2660:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "596f7520776f6e21",
																		"id": 1235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2666:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_9914c8f708f9d185c71b065e1b7086f49300a27304777e454a822b899aef6387",
																			"typeString": "literal_string \"You won!\""
																		},
																		"value": "You won!"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_9914c8f708f9d185c71b065e1b7086f49300a27304777e454a822b899aef6387",
																			"typeString": "literal_string \"You won!\""
																		}
																	],
																	"id": 1230,
																	"name": "GameOutcome",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1030,
																	"src": "2622:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,bool,string memory)"
																	}
																},
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2622:55:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1237,
															"nodeType": "EmitStatement",
															"src": "2617:60:7"
														}
													]
												}
											}
										]
									},
									"functionSelector": "09ceb537",
									"id": 1254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "betOnRandomNumber",
									"nameLocation": "2240:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "predictLessThanFive",
												"nameLocation": "2263:19:7",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "2258:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1183,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2258:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "betAmount",
												"nameLocation": "2292:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "2284:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2257:45:7"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2310:0:7"
									},
									"scope": 1426,
									"src": "2231:585:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1313,
										"nodeType": "Block",
										"src": "2904:333:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1260,
																		"name": "items",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "2922:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																			"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
																		}
																	},
																	"id": 1262,
																	"indexExpression": {
																		"id": 1261,
																		"name": "itemId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1256,
																		"src": "2928:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2922:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Item_$997_storage",
																		"typeString": "struct DegenToken.Item storage ref"
																	}
																},
																"id": 1263,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2936:5:7",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 996,
																"src": "2922:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2944:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2922:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4974656d206e6f7420666f756e64",
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2947:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c",
																"typeString": "literal_string \"Item not found\""
															},
															"value": "Item not found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c",
																"typeString": "literal_string \"Item not found\""
															}
														],
														"id": 1259,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2914:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2914:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "2914:50:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1271,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2992:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2996:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2992:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1270,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "2982:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2982:21:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1274,
																		"name": "items",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "3007:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																			"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
																		}
																	},
																	"id": 1276,
																	"indexExpression": {
																		"id": 1275,
																		"name": "itemId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1256,
																		"src": "3013:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3007:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Item_$997_storage",
																		"typeString": "struct DegenToken.Item storage ref"
																	}
																},
																"id": 1277,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3021:5:7",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 996,
																"src": "3007:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2982:44:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3028:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2974:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2974:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1281,
												"nodeType": "ExpressionStatement",
												"src": "2974:77:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1283,
																	"name": "items",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "3067:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																		"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
																	}
																},
																"id": 1285,
																"indexExpression": {
																	"id": 1284,
																	"name": "itemId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1256,
																	"src": "3073:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3067:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Item_$997_storage",
																	"typeString": "struct DegenToken.Item storage ref"
																}
															},
															"id": 1286,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3081:5:7",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 996,
															"src": "3067:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1282,
														"name": "burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "3062:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3062:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1288,
												"nodeType": "ExpressionStatement",
												"src": "3062:25:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1294,
																"name": "items",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "3126:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																	"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
																}
															},
															"id": 1296,
															"indexExpression": {
																"id": 1295,
																"name": "itemId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "3132:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3126:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Item_$997_storage",
																"typeString": "struct DegenToken.Item storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Item_$997_storage",
																"typeString": "struct DegenToken.Item storage ref"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1289,
																"name": "playerItems",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1008,
																"src": "3097:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Item_$997_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct DegenToken.Item storage ref[] storage ref)"
																}
															},
															"id": 1292,
															"indexExpression": {
																"expression": {
																	"id": 1290,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3109:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3113:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3109:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3097:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Item_$997_storage_$dyn_storage",
																"typeString": "struct DegenToken.Item storage ref[] storage ref"
															}
														},
														"id": 1293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3121:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3097:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Item_$997_storage_$dyn_storage_ptr_$_t_struct$_Item_$997_storage_$returns$__$attached_to$_t_array$_t_struct$_Item_$997_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct DegenToken.Item storage ref[] storage pointer,struct DegenToken.Item storage ref)"
														}
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3097:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1298,
												"nodeType": "ExpressionStatement",
												"src": "3097:43:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1300,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3170:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3174:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3170:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1302,
															"name": "itemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "3182:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1303,
																	"name": "items",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "3190:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																		"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
																	}
																},
																"id": 1305,
																"indexExpression": {
																	"id": 1304,
																	"name": "itemId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1256,
																	"src": "3196:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3190:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Item_$997_storage",
																	"typeString": "struct DegenToken.Item storage ref"
																}
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3204:4:7",
															"memberName": "name",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 992,
															"src": "3190:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1307,
																	"name": "items",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "3210:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																		"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
																	}
																},
																"id": 1309,
																"indexExpression": {
																	"id": 1308,
																	"name": "itemId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1256,
																	"src": "3216:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3210:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Item_$997_storage",
																	"typeString": "struct DegenToken.Item storage ref"
																}
															},
															"id": 1310,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3224:5:7",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 996,
															"src": "3210:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1299,
														"name": "ItemPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "3156:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint8,string memory,uint256)"
														}
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3156:74:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1312,
												"nodeType": "EmitStatement",
												"src": "3151:79:7"
											}
										]
									},
									"functionSelector": "af3bcb7d",
									"id": 1314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "purchaseItem",
									"nameLocation": "2868:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "itemId",
												"nameLocation": "2887:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "2881:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1255,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2881:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2880:14:7"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2904:0:7"
									},
									"scope": 1426,
									"src": "2859:378:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1370,
										"nodeType": "Block",
										"src": "3371:286:7",
										"statements": [
											{
												"assignments": [
													1326
												],
												"declarations": [
													{
														"constant": false,
														"id": 1326,
														"mutability": "mutable",
														"name": "itemsList",
														"nameLocation": "3395:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1370,
														"src": "3381:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct DegenToken.Item[]"
														},
														"typeName": {
															"baseType": {
																"id": 1324,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1323,
																	"name": "Item",
																	"nameLocations": [
																		"3381:4:7"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 997,
																	"src": "3381:4:7"
																},
																"referencedDeclaration": 997,
																"src": "3381:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Item_$997_storage_ptr",
																	"typeString": "struct DegenToken.Item"
																}
															},
															"id": 1325,
															"nodeType": "ArrayTypeName",
															"src": "3381:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Item_$997_storage_$dyn_storage_ptr",
																"typeString": "struct DegenToken.Item[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1330,
												"initialValue": {
													"baseExpression": {
														"id": 1327,
														"name": "playerItems",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "3407:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Item_$997_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct DegenToken.Item storage ref[] storage ref)"
														}
													},
													"id": 1329,
													"indexExpression": {
														"id": 1328,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1316,
														"src": "3419:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3407:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Item_$997_storage_$dyn_storage",
														"typeString": "struct DegenToken.Item storage ref[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:43:7"
											},
											{
												"assignments": [
													1332
												],
												"declarations": [
													{
														"constant": false,
														"id": 1332,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "3442:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1370,
														"src": "3434:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1331,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3434:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1335,
												"initialValue": {
													"expression": {
														"id": 1333,
														"name": "itemsList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1326,
														"src": "3451:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct DegenToken.Item memory[] memory"
														}
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3461:6:7",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3451:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3434:33:7"
											},
											{
												"assignments": [
													1340
												],
												"declarations": [
													{
														"constant": false,
														"id": 1340,
														"mutability": "mutable",
														"name": "itemIds",
														"nameLocation": "3493:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1370,
														"src": "3478:22:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
															"typeString": "uint8[]"
														},
														"typeName": {
															"baseType": {
																"id": 1338,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "3478:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1339,
															"nodeType": "ArrayTypeName",
															"src": "3478:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
																"typeString": "uint8[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1346,
												"initialValue": {
													"arguments": [
														{
															"id": 1344,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "3515:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1343,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3503:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint8[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1341,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "3507:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1342,
															"nodeType": "ArrayTypeName",
															"src": "3507:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
																"typeString": "uint8[]"
															}
														}
													},
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3503:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
														"typeString": "uint8[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3478:44:7"
											},
											{
												"body": {
													"id": 1366,
													"nodeType": "Block",
													"src": "3569:57:7",
													"statements": [
														{
															"expression": {
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1357,
																		"name": "itemIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1340,
																		"src": "3583:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																			"typeString": "uint8[] memory"
																		}
																	},
																	"id": 1359,
																	"indexExpression": {
																		"id": 1358,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1348,
																		"src": "3591:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3583:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1360,
																			"name": "itemsList",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1326,
																			"src": "3596:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct DegenToken.Item memory[] memory"
																			}
																		},
																		"id": 1362,
																		"indexExpression": {
																			"id": 1361,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1348,
																			"src": "3606:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3596:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Item_$997_memory_ptr",
																			"typeString": "struct DegenToken.Item memory"
																		}
																	},
																	"id": 1363,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3609:6:7",
																	"memberName": "itemId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 994,
																	"src": "3596:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "3583:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1365,
															"nodeType": "ExpressionStatement",
															"src": "3583:32:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1351,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1348,
														"src": "3552:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1352,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1332,
														"src": "3556:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3552:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1367,
												"initializationExpression": {
													"assignments": [
														1348
													],
													"declarations": [
														{
															"constant": false,
															"id": 1348,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3545:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1367,
															"src": "3537:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1347,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3537:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1350,
													"initialValue": {
														"hexValue": "30",
														"id": 1349,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3549:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3537:13:7"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1355,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3564:3:7",
														"subExpression": {
															"id": 1354,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1348,
															"src": "3564:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1356,
													"nodeType": "ExpressionStatement",
													"src": "3564:3:7"
												},
												"nodeType": "ForStatement",
												"src": "3532:94:7"
											},
											{
												"expression": {
													"id": 1368,
													"name": "itemIds",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1340,
													"src": "3643:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
														"typeString": "uint8[] memory"
													}
												},
												"functionReturnParameters": 1321,
												"id": 1369,
												"nodeType": "Return",
												"src": "3636:14:7"
											}
										]
									},
									"functionSelector": "ce6019b4",
									"id": 1371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserItems",
									"nameLocation": "3305:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3326:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "3318:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:14:7"
									},
									"returnParameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "3355:14:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
													"typeString": "uint8[]"
												},
												"typeName": {
													"baseType": {
														"id": 1318,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "3355:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 1319,
													"nodeType": "ArrayTypeName",
													"src": "3355:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
														"typeString": "uint8[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3354:16:7"
									},
									"scope": 1426,
									"src": "3296:361:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1393,
										"nodeType": "Block",
										"src": "3786:89:7",
										"statements": [
											{
												"assignments": [
													1382
												],
												"declarations": [
													{
														"constant": false,
														"id": 1382,
														"mutability": "mutable",
														"name": "item",
														"nameLocation": "3808:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1393,
														"src": "3796:16:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_memory_ptr",
															"typeString": "struct DegenToken.Item"
														},
														"typeName": {
															"id": 1381,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1380,
																"name": "Item",
																"nameLocations": [
																	"3796:4:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 997,
																"src": "3796:4:7"
															},
															"referencedDeclaration": 997,
															"src": "3796:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Item_$997_storage_ptr",
																"typeString": "struct DegenToken.Item"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1386,
												"initialValue": {
													"baseExpression": {
														"id": 1383,
														"name": "items",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "3815:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
															"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
														}
													},
													"id": 1385,
													"indexExpression": {
														"id": 1384,
														"name": "itemId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1373,
														"src": "3821:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3815:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$997_storage",
														"typeString": "struct DegenToken.Item storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3796:32:7"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 1387,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "3846:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Item_$997_memory_ptr",
																	"typeString": "struct DegenToken.Item memory"
																}
															},
															"id": 1388,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3851:4:7",
															"memberName": "name",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 992,
															"src": "3846:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 1389,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "3857:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Item_$997_memory_ptr",
																	"typeString": "struct DegenToken.Item memory"
																}
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3862:5:7",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 996,
															"src": "3857:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1391,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3845:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_uint256_$",
														"typeString": "tuple(string memory,uint256)"
													}
												},
												"functionReturnParameters": 1379,
												"id": 1392,
												"nodeType": "Return",
												"src": "3838:30:7"
											}
										]
									},
									"functionSelector": "d917bd27",
									"id": 1394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getItemDetails",
									"nameLocation": "3710:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "itemId",
												"nameLocation": "3731:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "3725:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1372,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3725:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3724:14:7"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "3762:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1375,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3762:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "3777:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3777:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3761:24:7"
									},
									"scope": 1426,
									"src": "3701:174:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1404,
										"nodeType": "Block",
										"src": "3974:45:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1400,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4001:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4005:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4001:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1399,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "3991:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3991:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1398,
												"id": 1403,
												"nodeType": "Return",
												"src": "3984:28:7"
											}
										]
									},
									"functionSelector": "4c738909",
									"id": 1405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMyBalance",
									"nameLocation": "3927:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3939:2:7"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "3965:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3965:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3964:9:7"
									},
									"scope": 1426,
									"src": "3918:101:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1424,
										"nodeType": "Block",
										"src": "4110:103:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1412,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4138:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4142:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4138:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1411,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "4128:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4128:21:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1415,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1407,
																"src": "4153:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4128:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4161:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4120:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4120:64:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1419,
												"nodeType": "ExpressionStatement",
												"src": "4120:64:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1421,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "4199:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1420,
														"name": "burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "4194:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4194:12:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1423,
												"nodeType": "ExpressionStatement",
												"src": "4194:12:7"
											}
										]
									},
									"functionSelector": "6d1b229d",
									"id": 1425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnTokens",
									"nameLocation": "4074:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4093:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "4085:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4085:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4084:16:7"
									},
									"returnParameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4110:0:7"
									},
									"scope": 1426,
									"src": "4065:148:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1427,
							"src": "243:3972:7",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								1020,
								1030
							]
						}
					],
					"src": "32:4184:7"
				},
				"id": 7
			}
		}
	}
}